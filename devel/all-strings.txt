##############################################################################################
# This file contains all (hopefully all anyway) of the strings in the code.
# it was created with this command (issued from src/main):
# grep -C 2 -rn .*\".*[0-9a-zA-Z][0-9a-zA-Z].*\".* * | grep -v svn > ../../all-strings.txt
#
# I plan to go through this file painstakingly and globalize every string that needs it.
# I'll also remove strings that don't need globalization.
#
# I'm also going to keep a small notes section here. Maybe a little later I'll save it to the i18n ticket.
#   - I think, if I've decided not to globalize a string, I should move it to another file just in case.
#     Some strings can just be removed from here though, like strings in comments.
#     So, I'll just be moving over questionable Strings.
#   - we have to make sure to pick good key names, so that when we are reading the code
#     we can have a good idea of what the message is from the key.
#   - It seems like many if not all of IllegalStateExceptions can be ignored. Not sure yet.
#   - I'm going to make a distinction between devel error messages and user error messages.
#     User error messages need to be globalized, devel error messages should not be.
#   - I see this weird comment in the code:
#     public String classDisplayName() { return "Command Center" ; } // for Errors tab
#     there is no errors tab. does this mean we can get rid of classDisplayName from just about everywhere?
#   - looks like we might need to go back through and look for scala """ strings
#   - lots of strings around importing and exporting that probably dont have to get globalized
#     but we better double check
#############################################################################################


org/nlogo/agent/InputBoxConstraint.scala-13-  def correctType(obj: AnyRef): Boolean =
org/nlogo/agent/InputBoxConstraint.scala-14-    typeName match {
org/nlogo/agent/InputBoxConstraint.scala:15:      case "Number" | "Color" => obj.isInstanceOf[java.lang.Double]
org/nlogo/agent/InputBoxConstraint.scala-16-      case _ => obj.isInstanceOf[String]
org/nlogo/agent/InputBoxConstraint.scala-17-    }
org/nlogo/agent/InputBoxConstraint.scala-19-  def assertConstraint(value: AnyRef) {
org/nlogo/agent/InputBoxConstraint.scala-20-    if(!correctType(value))
org/nlogo/agent/InputBoxConstraint.scala:21:      throw new ValueConstraint.Violation("You can't set this to " + value)
org/nlogo/agent/InputBoxConstraint.scala-22-  }
org/nlogo/agent/InputBoxConstraint.scala-23-  def coerceValue(value: AnyRef): AnyRef =

org/nlogo/agent/Link.java-218-			default :
org/nlogo/agent/Link.java-219-				throw new IllegalArgumentException
org/nlogo/agent/Link.java:220:					( vn + " is not a double variable" ) ;
org/nlogo/agent/Link.java-221-		}
org/nlogo/agent/Link.java-222-	}
org/nlogo/agent/Link.java-246-			default :
org/nlogo/agent/Link.java-247-				throw new IllegalArgumentException
org/nlogo/agent/Link.java:248:					( vn + " is not a double variable" ) ;
org/nlogo/agent/Link.java-249-		}
org/nlogo/agent/Link.java-250-	}
org/nlogo/agent/Link.java-312-						if( breed != world.links() && ! world.isLinkBreed( breed ) )
org/nlogo/agent/Link.java-313-						{
org/nlogo/agent/Link.java:314:							throw new AgentException( "can't set BREED to a non-link-breed agentset" ) ;
org/nlogo/agent/Link.java-315-						}
org/nlogo/agent/Link.java-316-						if( world.getLink( end1.agentKey() , end2.agentKey() , breed ) != null )
org/nlogo/agent/Link.java-317-						{
org/nlogo/agent/Link.java:318:							throw new AgentException( "there is already a " 
org/nlogo/agent/Link.java-319-													  + world.getLinkBreedSingular( breed ) 
org/nlogo/agent/Link.java:320:													  + " with endpoints " 
org/nlogo/agent/Link.java:321:													  + end1.toString() + " and " + end2.toString() ) ;
org/nlogo/agent/Link.java-322-						}
org/nlogo/agent/Link.java-323-						if( ! world.linkManager.checkBreededCompatibility( breed == world.links() ) )
org/nlogo/agent/Link.java-324-						{
org/nlogo/agent/Link.java-325-							throw new AgentException
org/nlogo/agent/Link.java:326:								( "You cannot have both breeded and unbreeded links in the same world." ) ;
org/nlogo/agent/Link.java-327-						}
org/nlogo/agent/Link.java-328-						setBreed( breed ) ;
org/nlogo/agent/Link.java-352-						{
org/nlogo/agent/Link.java-353-							throw new AgentException
org/nlogo/agent/Link.java:354:								( "\"" + (String) value + "\" is not a currently defined shape" ) ;
org/nlogo/agent/Link.java-355-						}
org/nlogo/agent/Link.java-356-						shape( newShape ) ;
org/nlogo/agent/Link.java-375-				case VAR_END1 :
org/nlogo/agent/Link.java-376-				case VAR_END2 :
org/nlogo/agent/Link.java:377:					throw new AgentException( "you can't change a link's endpoints" ) ;
org/nlogo/agent/Link.java-378-				default:
org/nlogo/agent/Link.java-379-					return ;
org/nlogo/agent/Link.java-388-	{
org/nlogo/agent/Link.java-389-		throw new AgentException
org/nlogo/agent/Link.java:390:			( "a link can't access a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Link.java-391-	}
org/nlogo/agent/Link.java-392-	@Override
org/nlogo/agent/Link.java-395-	{
org/nlogo/agent/Link.java-396-		throw new AgentException
org/nlogo/agent/Link.java:397:			( "a link can't access a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Link.java-398-	}
org/nlogo/agent/Link.java-399-	@Override
org/nlogo/agent/Link.java-410-	{
org/nlogo/agent/Link.java-411-		throw new AgentException
org/nlogo/agent/Link.java:412:			( "a link can't access a patch variable without specifying which patch" ) ;
org/nlogo/agent/Link.java-413-	}
org/nlogo/agent/Link.java-414-	@Override
org/nlogo/agent/Link.java-417-	{
org/nlogo/agent/Link.java-418-		throw new AgentException
org/nlogo/agent/Link.java:419:			( "a link can't set a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Link.java-420-	}
org/nlogo/agent/Link.java-421-	@Override
org/nlogo/agent/Link.java-424-	{
org/nlogo/agent/Link.java-425-		throw new AgentException
org/nlogo/agent/Link.java:426:			( "a link can't set a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Link.java-427-	}
org/nlogo/agent/Link.java-428-	@Override
org/nlogo/agent/Link.java-431-	{
org/nlogo/agent/Link.java-432-		throw new AgentException
org/nlogo/agent/Link.java:433:			( "a link can't set a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Link.java-434-	}
org/nlogo/agent/Link.java-435-	public void setBreedVariable( int vn , double value )
org/nlogo/agent/Link.java-437-	{
org/nlogo/agent/Link.java-438-		throw new AgentException
org/nlogo/agent/Link.java:439:			( "a link can't set a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Link.java-440-	}
org/nlogo/agent/Link.java-441-	@Override
org/nlogo/agent/Link.java-452-	{
org/nlogo/agent/Link.java-453-		throw new AgentException
org/nlogo/agent/Link.java:454:			( "a link can't set a patch variable without specifying which turtle" ) ;
org/nlogo/agent/Link.java-455-	}
org/nlogo/agent/Link.java-456-	@Override
org/nlogo/agent/Link.java-459-	{
org/nlogo/agent/Link.java-460-		throw new AgentException
org/nlogo/agent/Link.java:461:			( "a link can't set a patch variable without specifying which turtle" ) ;
org/nlogo/agent/Link.java-462-	}
org/nlogo/agent/Link.java-463-
org/nlogo/agent/Link.java-468-		{
org/nlogo/agent/Link.java-469-			throw new AgentException
org/nlogo/agent/Link.java:470:				( getBreed().printName() + " breed does not own variable " + name ) ;
org/nlogo/agent/Link.java-471-		}
org/nlogo/agent/Link.java-472-	}
org/nlogo/agent/Link.java-556-	}
org/nlogo/agent/Link.java-557-
org/nlogo/agent/Link.java:558:	public static final String MODE_NONE = "none" ;
org/nlogo/agent/Link.java:559:	public static final String MODE_FREE = "free" ;
org/nlogo/agent/Link.java:560:	public static final String MODE_FIXED = "fixed" ;
org/nlogo/agent/Link.java-561-
org/nlogo/agent/Link.java-562-	public String mode()
org/nlogo/agent/Link.java-621-	{
org/nlogo/agent/Link.java-622-		throw new AgentException
org/nlogo/agent/Link.java:623:			( "links can't access patches via relative coordinates" ) ;
org/nlogo/agent/Link.java-624-	}
org/nlogo/agent/Link.java-625-

org/nlogo/agent/Observer.java:67:		throw new AgentException( "the observer can't access a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Observer.java-73-		throw new AgentException
org/nlogo/agent/Observer.java:80:		throw new AgentException( "the observer can't access a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Observer.java:87:			( "the observer can't access a link variable without specifying which link" ) ;
org/nlogo/agent/Observer.java:94:			( "the observer can't access a link variable without specifying which link" ) ;
org/nlogo/agent/Observer.java:100:		throw new AgentException( "the observer can't access a patch variable without specifying which patch" ) ;
org/nlogo/agent/Observer.java:133:			( "the observer can't set a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Observer.java:139:		throw new AgentException( "the observer can't set a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Observer.java:145:		throw new AgentException( "the observer can't set a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Observer.java:151:		throw new AgentException( "the observer can't set a patch variable without specifying which turtle" ) ;
org/nlogo/agent/Observer.java:157:		throw new AgentException( "the observer can't set a patch variable without specifying which turtle" ) ;
org/nlogo/agent/Observer.java:165:			( "the observer can't access a link variable without specifying which link" ) ;
org/nlogo/agent/Observer.java:172:			( "the observer can't access a link variable without specifying which link" ) ;
org/nlogo/agent/Observer.java:179:			( "the observer can't access a link variable without specifying which link" ) ;
org/nlogo/agent/Observer.java:186:			( "the observer can't access a turtle or link variable without specifying which agent" ) ;
org/nlogo/agent/Observer.java:404:			throw new AgentException( "you can't move-to a link" ) ;
org/nlogo/agent/Observer.java-540-	public String toString()
org/nlogo/agent/Observer.java:542:		return "observer" ;
org/nlogo/agent/Observer.java-543-	}
org/nlogo/agent/Observer.java-546-	public String classDisplayName()
org/nlogo/agent/Observer.java-547-	{
org/nlogo/agent/Observer.java:548:		return "observer" ;
org/nlogo/agent/Observer.java-549-	}
org/nlogo/agent/Observer.java-550-

org/nlogo/agent/Patch.java:135:			( "a patch can't access a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Patch.java:144:			( "a patch can't access a link variable without specifying which link" ) ;
org/nlogo/agent/Patch.java:151:			( "a patch can't access a turtle or link variable without specifying which agent" ) ;
org/nlogo/agent/Patch.java:159:			( "a patch can't access a link variable without specifying which link" ) ;
org/nlogo/agent/Patch.java:165:		throw new AgentException( "a patch can't access a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Patch.java:185:		throw new AgentException( "a patch can't set a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Patch.java:192:		throw new AgentException( "a patch can't set a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Patch.java:199:		throw new AgentException( "a patch can't set a turtle variable without specifying which turtle" ) ;
org/nlogo/agent/Patch.java:207:			( "a patch can't access a link variable without specifying which link" ) ;
org/nlogo/agent/Patch.java:214:			( "a patch can't access a link variable without specifying which link" ) ;
org/nlogo/agent/Patch.java:222:			( "a patch can't access a turtle or link variable without specifying which agent" ) ;
org/nlogo/agent/Patch.java:230:			( "a patch can't access a link variable without specifying which link" ) ;
org/nlogo/agent/Patch.java:290:					throw new AgentException( "you can't change a patch's coordinates" ) ;
org/nlogo/agent/Patch.java:293:					throw new IllegalStateException( "unknown variable " + vn ) ;
org/nlogo/agent/Patch.java:305:				throw new AgentException( "you can't change a patch's coordinates" ) ;
org/nlogo/agent/Patch.java:307:				throw new AgentException( "you can't change a patch's coordinates" ) ;
org/nlogo/agent/Patch.java:310:					( vn + " is not a double variable" ) ;
org/nlogo/agent/Patch.java:335:					( vn + " is not a double variable" ) ;
org/nlogo/agent/Patch.java:346:            throw new AgentException( "Cannot get patch beyond limits of current world." ) ;
org/nlogo/agent/Patch.java:395:		throw new IllegalStateException( "pcolor is not a double" ) ;
org/nlogo/agent/Patch.java:561:		return "patch " + pxcor + " " + pycor ;
org/nlogo/agent/Patch.java:567:		return "patch" ;

org/nlogo/agent/Patch3D.java:123:					throw new AgentException( "you can't change a patch's coordinates" ) ;
org/nlogo/agent/Patch3D.java:138:				throw new AgentException( "you can't change a patch's coordinates" ) ;
org/nlogo/agent/Patch3D.java:140:				throw new AgentException( "you can't change a patch's coordinates" ) ;
org/nlogo/agent/Patch3D.java:142:				throw new AgentException( "you can't change a patch's coordinates" ) ;
org/nlogo/agent/Patch3D.java:145:					( vn + " is not a double variable" ) ;
org/nlogo/agent/Patch3D.java:173:					( vn + " is not a double variable" ) ;
org/nlogo/agent/Patch3D.java:184:            throw new AgentException( "Cannot get patch beyond limits of current world." ) ;
org/nlogo/agent/Patch3D.java:195:            throw new AgentException( "Cannot get patch beyond limits of current world." ) ;
org/nlogo/agent/Patch3D.java:386:		return "patch " + pxcor + " " + pycor + " " + pzcor ;

org/nlogo/agent/Protractor.java:263:				( "no heading is defined from an agent to itself" ) ;
org/nlogo/agent/Protractor.java:318:			throw new IllegalStateException("In towards: fromAgent must not be a link") ;
org/nlogo/agent/Protractor.java:334:				( "no heading is defined from a point (" +
org/nlogo/agent/Protractor.java:335:				  fromX + "," + fromY + ") to that same point" ) ;
org/nlogo/agent/Protractor.java:365:				( "no pitch is defined from an agent to itself" ) ;
org/nlogo/agent/Protractor.java:407:			throw new IllegalStateException("In towardsPitch: fromAgent must be the observer") ;
org/nlogo/agent/Protractor.java-418-			throw new AgentException
org/nlogo/agent/Protractor.java:419:				( "no pitch is defined from a point (" +
org/nlogo/agent/Protractor.java:420:				  fromX + "," + fromY + "," + fromZ + ") to that same point" ) ;

org/nlogo/agent/Protractor3D.java:31:			throw new IllegalStateException( "you can't find distance to links" ) ;
org/nlogo/agent/Protractor3D.java:150:				( "no pitch is defined from an agent to itself" ) ;
org/nlogo/agent/Protractor3D.java:210:				( "no pitch is defined from a point (" +
org/nlogo/agent/Protractor3D.java:211:				  fromX + "," + fromY + "," + fromZ + ") to that same point" ) ;
org/nlogo/agent/Protractor3D.java:234:				( "no pitch is defined from a point (" +
org/nlogo/agent/Protractor3D.java:235:				  fromX + "," + fromY + "," + fromZ + ") to that same point" ) ;

org/nlogo/agent/SliderConstraint.scala-7-  case class Spec(fieldName: String, displayName:String)
org/nlogo/agent/SliderConstraint.scala:8:  val Min = Spec("minimumCode", "Minimum")
org/nlogo/agent/SliderConstraint.scala:9:  val Max = Spec("maximumCode", "Maximum")
org/nlogo/agent/SliderConstraint.scala:10:  val Inc = Spec("incrementCode", "Increment")
org/nlogo/agent/SliderConstraint.scala:16:    LogoException("Constraint runtime error for " + spec.displayName + ": " + message) with SliderConstraintException
org/nlogo/agent/SliderConstraint.scala:48:        try Right(thunkFactory.createReporterThunk(code, "slider '" + ownerName + "' " + spec.displayName))
org/nlogo/agent/SliderConstraint.scala:68:    if (!(o.isInstanceOf[Double])) {throw new ValueConstraint.Violation("Value must be a number.")}
org/nlogo/agent/SliderConstraint.scala:89:      case ex: ClassCastException => throw new ConstraintRuntimeException(spec, "Must be a number.")

org/nlogo/agent/Turtle.java:47:	public static final String PEN_UP = "up" ;
org/nlogo/agent/Turtle.java:48:	public static final String PEN_DOWN = "down" ;
org/nlogo/agent/Turtle.java:49:	public static final String PEN_ERASE = "erase" ;
org/nlogo/agent/Turtle.java:170:            throw new AgentException( "Cannot get patch beyond limits of current world." ) ;
org/nlogo/agent/Turtle.java:292:			throw new AgentException( getBreed().printName() + " breed does not own variable " + name ) ;
org/nlogo/agent/Turtle.java:373:					( vn + " is not a double variable" ) ;
org/nlogo/agent/Turtle.java:382:			( "a turtle can't access a link variable without specifying which link" ) ;
org/nlogo/agent/Turtle.java:414:		throw new AgentException( this + " does not own " + name + " variable.");
org/nlogo/agent/Turtle.java:422:			( "a turtle can't access a link variable without specifying which link" ) ;
org/nlogo/agent/Turtle.java:468:			   throw new AgentException( "you can't change a turtle's who number" ) ;
org/nlogo/agent/Turtle.java:471:				( vn + " is not a double variable" ) ;
org/nlogo/agent/Turtle.java:542:								( "\"" + (String) value + "\" is not a currently defined shape" ) ;
org/nlogo/agent/Turtle.java:576:							throw new AgentException( "can't set BREED to a non-breed agentset" ) ;
org/nlogo/agent/Turtle.java:634:					throw new AgentException( "you can't change a turtle's ID number" ) ;
org/nlogo/agent/Turtle.java:636:					throw new IllegalStateException( "unknown variable " + vn ) ;
org/nlogo/agent/Turtle.java:670:			( "a turtle can't set a link variable without specifying which link" ) ;
org/nlogo/agent/Turtle.java:677:			( "a turtle can't set a link variable without specifying which link" ) ;
org/nlogo/agent/Turtle.java:685:			( "a turtle can't set a link variable without specifying which link" ) ;
org/nlogo/agent/Turtle.java:829:			throw new AgentException( "you can't move-to a link" ) ;

org/nlogo/agent/Turtle3D.java:137:            throw new AgentException( "Cannot get patch beyond limits of current world." ) ;
org/nlogo/agent/Turtle3D.java:148:            throw new AgentException( "Cannot get patch beyond limits of current world." ) ;
org/nlogo/agent/Turtle3D.java:274:					( vn + " is not a double variable" ) ;
org/nlogo/agent/Turtle3D.java:309:			   throw new AgentException( "you can't change a turtle's who number" ) ;
org/nlogo/agent/Turtle3D.java:312:				( vn + " is not a double variable" ) ;
org/nlogo/agent/Turtle3D.java:383:							( "\"" + (String) value + "\" is not a currently defined shape" ) ;
org/nlogo/agent/Turtle3D.java:417:						throw new AgentException( "can't set BREED to a non-breed agentset" ) ;
org/nlogo/agent/Turtle3D.java:474:				throw new AgentException( "you can't change a turtle's ID number" ) ;
org/nlogo/agent/VertCylinder.java:31:			throw new AgentException("Cannot move turtle beyond the world's edge.") ;

org/nlogo/agent/World.java:74:		observers = new ArrayAgentSet( Observer.class , 1 , "observers" , false , this ) ;
org/nlogo/agent/World.java:304:            throw new AgentException("Cannot access patches beyond the limits of current world.") ;
org/nlogo/agent/World.java:328:			throw new AgentException("Cannot access patches beyond the limits of current world.") ;
org/nlogo/agent/World.java:393:			( "agentClass = " + agentClass ) ;
org/nlogo/agent/World.java-403-		return
org/nlogo/agent/World.java:404:			variableName.equalsIgnoreCase( "MIN-PXCOR" ) ||
org/nlogo/agent/World.java:405:			variableName.equalsIgnoreCase( "MAX-PXCOR" ) || 
org/nlogo/agent/World.java:406:			variableName.equalsIgnoreCase( "MIN-PYCOR" ) ||
org/nlogo/agent/World.java:407:			variableName.equalsIgnoreCase( "MAX-PYCOR" ) || 
org/nlogo/agent/World.java:408:			variableName.equalsIgnoreCase( "WORLD-WIDTH" ) || 
org/nlogo/agent/World.java:409:			variableName.equalsIgnoreCase( "WORLD-HEIGHT" ) ;
org/nlogo/agent/World.java-411-
org/nlogo/agent/World.java:415:		if ( variableName.equalsIgnoreCase( "MIN-PXCOR" ) )
org/nlogo/agent/World.java:419:		else if ( variableName.equalsIgnoreCase( "MAX-PXCOR" ) )
org/nlogo/agent/World.java:423:		else if( variableName.equalsIgnoreCase( "MIN-PYCOR" ) )
org/nlogo/agent/World.java:427:		else if( variableName.equalsIgnoreCase( "MAX-PYCOR" ) )
org/nlogo/agent/World.java:431:		else if( variableName.equalsIgnoreCase( "WORLD-WIDTH" ) )
org/nlogo/agent/World.java:436:		else if( variableName.equalsIgnoreCase( "WORLD-HEIGHT" ) )
org/nlogo/agent/World.java:697:		turtles = new TreeAgentSet( Turtle.class , "TURTLES" , this ) ;
org/nlogo/agent/World.java:698:		links = new TreeAgentSet( Link.class , "LINKS" , this ) ;
org/nlogo/agent/World.java:722:		patches = new ArrayAgentSet( Patch.class , patchArray , "patches" , this ) ;
org/nlogo/agent/World.java:903:			boolean directed = program.linkBreeds.get( breedName ).equals( "DIRECTED-LINK-BREED" ) ;
org/nlogo/agent/World.java:1220:			return "TURTLE" ;
org/nlogo/agent/World.java:1232:		return "TURTLE" ;
org/nlogo/agent/World.java:1239:			return "LINK" ;
org/nlogo/agent/World.java:1251:		return "LINK" ;
org/nlogo/agent/World.java:1271:		throw new IllegalStateException( "neither of the breeds exist, that's bad" ) ;
org/nlogo/agent/World.java:1391:	public final BreedShapes linkBreedShapes = new BreedShapes( "LINKS" ) ;
org/nlogo/agent/World.java:1392:	public final BreedShapes turtleBreedShapes = new BreedShapes( "TURTLES" ) ;
org/nlogo/agent/World.java:1403:				( "World.program cannot be set to null" ) ;
org/nlogo/agent/World.java:1459:			( "\"" + var + "\" not found" ) ;
org/nlogo/agent/World.java:1476:			( "\"" + var + "\" not found" ) ;
org/nlogo/agent/World3D.java:246:		turtles = new TreeAgentSet( Turtle.class , "TURTLES" , this ) ;
org/nlogo/agent/World3D.java:247:		links = new TreeAgentSet( Link.class , "LINKS" , this ) ;
org/nlogo/agent/World3D.java:277:		patches = new ArrayAgentSet( Patch.class , patchArray , "patches" , this ) ;
org/nlogo/agent/World3D.java:337:			variableName.equalsIgnoreCase( "MIN-PXCOR" ) ||
org/nlogo/agent/World3D.java:338:			variableName.equalsIgnoreCase( "MAX-PXCOR" ) ||
org/nlogo/agent/World3D.java:339:			variableName.equalsIgnoreCase( "MIN-PYCOR" ) ||
org/nlogo/agent/World3D.java:340:			variableName.equalsIgnoreCase( "MAX-PYCOR" ) ||
org/nlogo/agent/World3D.java:341:			variableName.equalsIgnoreCase( "MIN-PZCOR" ) ||
org/nlogo/agent/World3D.java:342:			variableName.equalsIgnoreCase( "MAX-PZCOR" ) ||
org/nlogo/agent/World3D.java:343:			variableName.equalsIgnoreCase( "WORLD-WIDTH" ) || 
org/nlogo/agent/World3D.java:344:			variableName.equalsIgnoreCase( "WORLD-HEIGHT" ) ||
org/nlogo/agent/World3D.java:345:			variableName.equalsIgnoreCase( "WORLD-DEPTH" ) ;
org/nlogo/agent/World3D.java:352:		if ( variableName.equalsIgnoreCase( "MIN-PXCOR" ) )
org/nlogo/agent/World3D.java:356:		else if ( variableName.equalsIgnoreCase( "MAX-PXCOR" ) )
org/nlogo/agent/World3D.java:360:		else if( variableName.equalsIgnoreCase( "MIN-PYCOR" ) )
org/nlogo/agent/World3D.java:364:		else if( variableName.equalsIgnoreCase( "MAX-PYCOR" ) )
org/nlogo/agent/World3D.java:368:		else if( variableName.equalsIgnoreCase( "MIN-PZCOR" ) )
org/nlogo/agent/World3D.java:372:		else if( variableName.equalsIgnoreCase( "MAX-PZCOR" ) )
org/nlogo/agent/World3D.java:376:		else if( variableName.equalsIgnoreCase( "WORLD-WIDTH" ) )
org/nlogo/agent/World3D.java:381:		else if( variableName.equalsIgnoreCase( "WORLD-HEIGHT" ) )
org/nlogo/agent/World3D.java:386:		else if( variableName.equalsIgnoreCase( "WORLD-DEPTH" ) )

org/nlogo/api/AgentVariables.java-67-	public static String[] getImplicitTurtleVariables( boolean is3D ) {
org/nlogo/api/AgentVariables.java-68-		return is3D
org/nlogo/api/AgentVariables.java:69:			? new String[] { "WHO","COLOR","HEADING","PITCH", "ROLL","XCOR","YCOR","ZCOR","SHAPE" ,
org/nlogo/api/AgentVariables.java:70:							 "LABEL","LABEL-COLOR","BREED","HIDDEN?","SIZE","PEN-SIZE","PEN-MODE" }
org/nlogo/api/AgentVariables.java:71:		    : new String[] { "WHO","COLOR","HEADING","XCOR","YCOR","SHAPE","LABEL","LABEL-COLOR","BREED" ,
org/nlogo/api/AgentVariables.java:72:                             "HIDDEN?","SIZE","PEN-SIZE","PEN-MODE"} ;
org/nlogo/api/AgentVariables.java-73-	}
org/nlogo/api/AgentVariables.java-74-	public static String[] getImplicitPatchVariables( boolean is3D ) {
org/nlogo/api/AgentVariables.java-75-		return is3D
org/nlogo/api/AgentVariables.java:76:		    ? new String[] { "PXCOR","PYCOR","PZCOR","PCOLOR","PLABEL","PLABEL-COLOR" }
org/nlogo/api/AgentVariables.java:77:			: new String[] { "PXCOR","PYCOR","PCOLOR","PLABEL","PLABEL-COLOR" } ;
org/nlogo/api/AgentVariables.java-78-	}
org/nlogo/api/AgentVariables.java-79-	public static String[] getImplicitLinkVariables() {
org/nlogo/api/AgentVariables.java:80:		return new String[] { "END1","END2","COLOR","LABEL","LABEL-COLOR","HIDDEN?","BREED",
org/nlogo/api/AgentVariables.java:81:							  "THICKNESS","SHAPE","TIE-MODE" } ;

org/nlogo/api/Color.java-27-	{
org/nlogo/api/Color.java-28-		// the 13 base hues
org/nlogo/api/Color.java:29:		"gray" , "red" , "orange" , "brown" ,
org/nlogo/api/Color.java:30:		"yellow" , "green" , "lime" , "turquoise" , "cyan" , "sky" ,
org/nlogo/api/Color.java:31:		"blue" , "violet" , "magenta" , "pink" ,
org/nlogo/api/Color.java-32-		// plus two special cases
org/nlogo/api/Color.java:33:		"black" , "white"
org/nlogo/api/Color.java:595:			throw new IllegalStateException( "Can't get RGB color" ) ;

org/nlogo/api/CompilerException.java:9:	public static final String RUNTIME_ERROR_AT_COMPILE_TIME_MSG_PREFIX = "Runtime error: " ;
org/nlogo/api/CompilerException.java:33:		return getMessage() + " at position " + startPos + " in " + fileName ;

org/nlogo/api/CSV.java-86-		if( s == null )
org/nlogo/api/CSV.java-87-		{
org/nlogo/api/CSV.java:88:			s = "null" ;
org/nlogo/api/CSV.java-89-		}
org/nlogo/api/CSV.java-90-

org/nlogo/api/DefaultClassManager.java-62-	{
org/nlogo/api/DefaultClassManager.java-63-		throw new IllegalStateException
org/nlogo/api/DefaultClassManager.java:64:			( "readExtensionObject not implemented for " + this ) ;
org/nlogo/api/DefaultClassManager.java-65-	}
org/nlogo/api/DefaultClassManager.java-66-

org/nlogo/api/DefaultCommand.java:17:        return "OTPL";
org/nlogo/api/DefaultReporter.java:17:        return "OTPL";

org/nlogo/api/DummyCompilerServices.scala:10:          case "true" => true:java.lang.Boolean
org/nlogo/api/DummyCompilerServices.scala:11:          case "false" => false:java.lang.Boolean
org/nlogo/api/DummyExtensionManager.scala:19:    if(filename == "aggregate") ""

org/nlogo/api/Dump.java:64:			throw new IllegalArgumentException( "Integer: " + obj ) ;
org/nlogo/api/Dump.java:78:				return "\"" + StringUtils.escapeString( (String) obj ) + "\"" ;
org/nlogo/api/Dump.java:95:			return "nobody" ;
org/nlogo/api/Dump.java:103:			return "<null>" ;
org/nlogo/api/Dump.java:107:			return "<" + obj.getClass().getName() + ">" ;
org/nlogo/api/Dump.java:115:		return "{{" + obj.getExtensionName() + ":" + obj.getNLTypeName() + " "
org/nlogo/api/Dump.java-116-			+ obj.dump( readable, exporting , reference )
org/nlogo/api/Dump.java-117-			+"}}";
org/nlogo/api/Dump.java-156-		{
org/nlogo/api/Dump.java-157-			String key=(String)e.next();
org/nlogo/api/Dump.java:158:			//buff.append(key + " = " + hm.get(key) + "\n");
org/nlogo/api/Dump.java-159-			Object value = map.get(key);
org/nlogo/api/Dump.java-160-			if(value == null)
org/nlogo/api/Dump.java-161-			{
org/nlogo/api/Dump.java:162:				buff.append(key + " = null\n");
org/nlogo/api/Dump.java-163-			}
org/nlogo/api/Dump.java-164-			else if(value instanceof AgentSet)
org/nlogo/api/Dump.java-176-			else
org/nlogo/api/Dump.java-177-			{
org/nlogo/api/Dump.java:178:				buff.append(key + " = " + value + "\n");
org/nlogo/api/Dump.java-179-			}
org/nlogo/api/Dump.java-180-		}
org/nlogo/api/Dump.java-247-				return printName ;
org/nlogo/api/Dump.java-248-			}
org/nlogo/api/Dump.java:249:			buffer.append( "(agentset, " + agentset.count() + " " ) ;
org/nlogo/api/Dump.java-250-			if( Turtle.class.isAssignableFrom( agentset.type() ) )
org/nlogo/api/Dump.java-251-			{
org/nlogo/api/Dump.java-252-				if( agentset.count() == 1 )
org/nlogo/api/Dump.java-253-				{
org/nlogo/api/Dump.java:254:					buffer.append( "turtle" ) ;
org/nlogo/api/Dump.java-255-				}
org/nlogo/api/Dump.java-256-				else
org/nlogo/api/Dump.java-257-				{
org/nlogo/api/Dump.java:258:					buffer.append( "turtles" ) ;
org/nlogo/api/Dump.java-259-				}
org/nlogo/api/Dump.java-260-			}
org/nlogo/api/Dump.java-263-				if( agentset.count() == 1 )
org/nlogo/api/Dump.java-264-				{
org/nlogo/api/Dump.java:265:					buffer.append( "patch" ) ;
org/nlogo/api/Dump.java-266-				}
org/nlogo/api/Dump.java-267-				else
org/nlogo/api/Dump.java-268-				{
org/nlogo/api/Dump.java:269:					buffer.append( "patches" ) ;
org/nlogo/api/Dump.java-270-				}
org/nlogo/api/Dump.java-271-			}
org/nlogo/api/Dump.java-272-			else if( Observer.class.isAssignableFrom( agentset.type() ) )
org/nlogo/api/Dump.java-273-			{
org/nlogo/api/Dump.java:274:				buffer.append( "observer" ) ;
org/nlogo/api/Dump.java-275-			}
org/nlogo/api/Dump.java-276-			else if( Link.class.isAssignableFrom( agentset.type() ) )
org/nlogo/api/Dump.java-278-				if( agentset.count() == 1 )
org/nlogo/api/Dump.java-279-				{
org/nlogo/api/Dump.java:280:					buffer.append( "link" ) ;
org/nlogo/api/Dump.java-281-				}
org/nlogo/api/Dump.java-282-				else
org/nlogo/api/Dump.java-283-				{
org/nlogo/api/Dump.java:284:					buffer.append( "links" ) ;
org/nlogo/api/Dump.java-285-				}				
org/nlogo/api/Dump.java-286-			}
org/nlogo/api/Dump.java-300-					if( agentset == agentset.world().turtles() )
org/nlogo/api/Dump.java-301-					{
org/nlogo/api/Dump.java:302:						buffer.append( "all-" + printName ) ;
org/nlogo/api/Dump.java-303-					}
org/nlogo/api/Dump.java-304-					else
org/nlogo/api/Dump.java-305-					{
org/nlogo/api/Dump.java:306:						buffer.append( "breed " + printName ) ;
org/nlogo/api/Dump.java-307-					}
org/nlogo/api/Dump.java-308-				}
org/nlogo/api/Dump.java-309-				else
org/nlogo/api/Dump.java-310-				{
org/nlogo/api/Dump.java:311:					buffer.append( "turtles" ) ;
org/nlogo/api/Dump.java-312-					for( Agent a : agentset.agents() )
org/nlogo/api/Dump.java-313-					{
org/nlogo/api/Dump.java-322-					if( agentset == agentset.world().links() )
org/nlogo/api/Dump.java-323-					{
org/nlogo/api/Dump.java:324:						buffer.append( "all-" + printName ) ;
org/nlogo/api/Dump.java-325-					}
org/nlogo/api/Dump.java-326-					else
org/nlogo/api/Dump.java-327-					{
org/nlogo/api/Dump.java:328:						buffer.append( "breed " + printName ) ;
org/nlogo/api/Dump.java-329-					}
org/nlogo/api/Dump.java-330-				}
org/nlogo/api/Dump.java-331-				else
org/nlogo/api/Dump.java-332-				{
org/nlogo/api/Dump.java:333:					buffer.append( "links" ) ;
org/nlogo/api/Dump.java-334-					for( Agent a : agentset.agents() )
org/nlogo/api/Dump.java-335-					{
org/nlogo/api/Dump.java-336-						Link link = (Link) a ;
org/nlogo/api/Dump.java:337:						buffer.append( " [" + link.end1().id() + " " +
org/nlogo/api/Dump.java-338-									   link.end2().id() + " " +
org/nlogo/api/Dump.java-339-									   agentset( link.getBreed() , true ) + "]" ) ;
org/nlogo/api/Dump.java-345-				if( printName != null )
org/nlogo/api/Dump.java-346-				{
org/nlogo/api/Dump.java:347:					buffer.append( "all-" + printName ) ;
org/nlogo/api/Dump.java-348-				}
org/nlogo/api/Dump.java-349-				else
org/nlogo/api/Dump.java-350-				{
org/nlogo/api/Dump.java:351:					buffer.append( "patches" ) ;
org/nlogo/api/Dump.java-352-					for( Agent a : agentset.agents() )
org/nlogo/api/Dump.java-353-					{
org/nlogo/api/Dump.java-354-						Patch patch = (Patch) a ;
org/nlogo/api/Dump.java:355:						buffer.append( " [" + patch.pxcor() + " " + patch.pycor() + "]") ;
org/nlogo/api/Dump.java-356-					}
org/nlogo/api/Dump.java-357-				}
org/nlogo/api/Dump.java-359-			else if( Observer.class.isAssignableFrom( agentset.type() ) )
org/nlogo/api/Dump.java-360-			{
org/nlogo/api/Dump.java:361:				buffer.append( "observer" ) ;
org/nlogo/api/Dump.java-362-			}
org/nlogo/api/Dump.java-363-			else
org/nlogo/api/Dump.java-382-		if( agent instanceof Observer )
org/nlogo/api/Dump.java-383-		{
org/nlogo/api/Dump.java:384:			return "observer" ;
org/nlogo/api/Dump.java-385-		}
org/nlogo/api/Dump.java-386-		else if ( agent instanceof Turtle ||
org/nlogo/api/Dump.java-390-			if( agent.id() == -1 )
org/nlogo/api/Dump.java-391-			{
org/nlogo/api/Dump.java:392:				return "nobody" ;
org/nlogo/api/Dump.java-393-			}
org/nlogo/api/Dump.java-394-			return openParen + agent.toString() + closeParen ;
org/nlogo/api/Dump.java-417-		if( theClass == Boolean.class )
org/nlogo/api/Dump.java-418-		{
org/nlogo/api/Dump.java:419:			return "true/false" ;
org/nlogo/api/Dump.java-420-		}
org/nlogo/api/Dump.java-421-		else if( theClass == Double.class )
org/nlogo/api/Dump.java-422-		{
org/nlogo/api/Dump.java:423:			return "number" ;
org/nlogo/api/Dump.java-424-		}
org/nlogo/api/Dump.java-425-		else if( theClass == String.class )
org/nlogo/api/Dump.java-426-		{
org/nlogo/api/Dump.java:427:			return "string" ;
org/nlogo/api/Dump.java-428-		}
org/nlogo/api/Dump.java-429-		else if( AgentSet.class.isAssignableFrom( theClass ) )
org/nlogo/api/Dump.java-430-		{
org/nlogo/api/Dump.java:431:			return "agentset" ;
org/nlogo/api/Dump.java-432-		}
org/nlogo/api/Dump.java-433-		else if( Turtle.class.isAssignableFrom( theClass ) )
org/nlogo/api/Dump.java-434-		{
org/nlogo/api/Dump.java:435:			return "turtle" ;
org/nlogo/api/Dump.java-436-		}
org/nlogo/api/Dump.java-437-		else if( Patch.class.isAssignableFrom( theClass ) )
org/nlogo/api/Dump.java-438-		{
org/nlogo/api/Dump.java:439:			return "patch" ;
org/nlogo/api/Dump.java-440-		}
org/nlogo/api/Dump.java-441-		else if( Link.class.isAssignableFrom( theClass ) )
org/nlogo/api/Dump.java-442-		{
org/nlogo/api/Dump.java:443:			return "link" ;
org/nlogo/api/Dump.java-444-		}
org/nlogo/api/Dump.java-445-		else if( Observer.class.isAssignableFrom( theClass ) )
org/nlogo/api/Dump.java-446-		{
org/nlogo/api/Dump.java:447:			return "observer" ;
org/nlogo/api/Dump.java-448-		}
org/nlogo/api/Dump.java-449-		else if( Agent.class.isAssignableFrom( theClass ) )
org/nlogo/api/Dump.java-450-		{
org/nlogo/api/Dump.java:451:			return "agent" ;
org/nlogo/api/Dump.java-452-		}
org/nlogo/api/Dump.java-453-		else if( LogoList.class.isAssignableFrom( theClass ) )
org/nlogo/api/Dump.java-454-		{
org/nlogo/api/Dump.java:455:			return "list" ;
org/nlogo/api/Dump.java-456-		}
org/nlogo/api/Dump.java-457-		else if( Nobody.class.isAssignableFrom( theClass ) )
org/nlogo/api/Dump.java-458-		{
org/nlogo/api/Dump.java:459:			return "nobody" ;
org/nlogo/api/Dump.java-460-		}
org/nlogo/api/Dump.java-461-		else
org/nlogo/api/ExtensionManager.java-41-	boolean anyExtensionsLoaded() ;
org/nlogo/api/ExtensionManager.java-42-	/**
org/nlogo/api/ExtensionManager.java:43:	 * Returns the identifier "name" by its imported implementation, if any,
org/nlogo/api/ExtensionManager.java-44-	 * or null, if not.
org/nlogo/api/ExtensionManager.java-45-	 */
org/nlogo/api/File.java-111-						break;
org/nlogo/api/File.java-112-					default:
org/nlogo/api/File.java:113:						throw new IllegalArgumentException( "invalid escape sequence in \"" + s + "\"" ) ;
org/nlogo/api/File.java-114-				}
org/nlogo/api/File.java-115-			}
org/nlogo/api/LocalFile.java-73-		if(w != null || buffReader != null )
org/nlogo/api/LocalFile.java-74-		{
org/nlogo/api/LocalFile.java:75:			throw new java.io.IOException("Attempted to open an already open file");
org/nlogo/api/LocalFile.java-76-		}
org/nlogo/api/LocalFile.java-77-		// Comment out this line and swich lines below to enable renaming code
org/nlogo/api/LocalFile.java-109-		if( w == null )
org/nlogo/api/LocalFile.java-110-		{
org/nlogo/api/LocalFile.java:111:			throw new java.io.IOException( "Attempted to print to an unopened File" ) ;
org/nlogo/api/LocalFile.java-112-		}
org/nlogo/api/LocalFile.java-113-		w.print( str ) ;
org/nlogo/api/LocalFile.java-120-		if( w == null )
org/nlogo/api/LocalFile.java-121-		{
org/nlogo/api/LocalFile.java:122:			throw new java.io.IOException( "Attempted to println to an unopened File" ) ;
org/nlogo/api/LocalFile.java-123-		}
org/nlogo/api/LocalFile.java-124-		w.println( line ) ;
org/nlogo/api/LocalFile.java-131-		if( w == null )
org/nlogo/api/LocalFile.java-132-		{
org/nlogo/api/LocalFile.java:133:			throw new java.io.IOException( "Attempted to println to an unopened File" ) ;
org/nlogo/api/LocalFile.java-134-		}
org/nlogo/api/LocalFile.java-135-		w.println() ;
org/nlogo/api/Options.java-54-		}
org/nlogo/api/Options.java:55:		throw new IllegalArgumentException( "not found: " + s ) ;
org/nlogo/api/Options.java-56-	}
org/nlogo/api/Options.java-57-
org/nlogo/api/Options.java-66-			}
org/nlogo/api/Options.java-67-		}
org/nlogo/api/Options.java:68:		throw new IllegalArgumentException( "not found: " + obj ) ;
org/nlogo/api/Options.java-69-	}
org/nlogo/api/Options.java-70-	

org/nlogo/api/Program.java-52-	{
org/nlogo/api/Program.java-53-		StringBuilder buf = new StringBuilder() ;
org/nlogo/api/Program.java:54:		buf.append( "globals " + Dump.list( globals ) + "\n" ) ;
org/nlogo/api/Program.java:55:		buf.append( "interfaceGlobals " +
org/nlogo/api/Program.java-56-					Dump.list( interfaceGlobals ) + "\n" ) ;
org/nlogo/api/Program.java:57:		buf.append( "turtles-own " + Dump.list( turtlesOwn ) + "\n" ) ;
org/nlogo/api/Program.java:58:		buf.append( "patches-own " + Dump.list( patchesOwn ) + "\n" ) ;
org/nlogo/api/Program.java:59:		buf.append( "links-own " + Dump.list( linksOwn ) + "\n" ) ;
org/nlogo/api/Program.java:60:		buf.append( "breeds " + Dump.map( breeds ) + "\n" ) ;
org/nlogo/api/Program.java:61:		buf.append( "breeds-own " + Dump.map( breedsOwn ) + "\n" ) ;
org/nlogo/api/Program.java:62:		buf.append( "link-breeds " + Dump.map( linkBreeds ) + "\n" ) ;
org/nlogo/api/Program.java:63:		buf.append( "link-breeds-own " + Dump.map( linkBreedsOwn ) + "\n" ) ;
org/nlogo/api/Program.java-64-		return buf.toString() ;
org/nlogo/api/Program.java-65-	}
org/nlogo/api/RemoteFile.java-85-		if(buffReader != null )
org/nlogo/api/RemoteFile.java-86-		{
org/nlogo/api/RemoteFile.java:87:			throw new java.io.IOException("Attempted to open an already open file");
org/nlogo/api/RemoteFile.java-88-		}
org/nlogo/api/RemoteFile.java-89-		// Comment out this line and switch lines below to enable renaming code
org/nlogo/api/RemoteFile.java-101-				break;
org/nlogo/api/RemoteFile.java-102-			case WRITE:
org/nlogo/api/RemoteFile.java:103:				throw new java.io.IOException("Cannot write to remote files.");
org/nlogo/api/RemoteFile.java-104-			case APPEND:
org/nlogo/api/RemoteFile.java:105:				throw new java.io.IOException("Cannot append to remote files.");
org/nlogo/api/RemoteFile.java-106-			default:
org/nlogo/api/RemoteFile.java-107-				break;
org/nlogo/api/RemoteFile.java-113-		throws java.io.IOException
org/nlogo/api/RemoteFile.java-114-	{
org/nlogo/api/RemoteFile.java:115:		throw new java.io.IOException( "Attempted to print to an unopened File" ) ;
org/nlogo/api/RemoteFile.java-116-	}
org/nlogo/api/RemoteFile.java-117-	
org/nlogo/api/RemoteFile.java-120-		throws java.io.IOException
org/nlogo/api/RemoteFile.java-121-	{
org/nlogo/api/RemoteFile.java:122:		throw new java.io.IOException( "Attempted to println to an unopened File" ) ;
org/nlogo/api/RemoteFile.java-123-	}
org/nlogo/api/RemoteFile.java-124-	
org/nlogo/api/RemoteFile.java-127-		throws java.io.IOException
org/nlogo/api/RemoteFile.java-128-	{
org/nlogo/api/RemoteFile.java:129:		throw new java.io.IOException( "Attempted to println to an unopened File" ) ;
org/nlogo/api/RemoteFile.java-130-	}
org/nlogo/api/RemoteFile.java-131-
org/nlogo/api/ScalaConversions.scala-67-
org/nlogo/api/ScalaConversions.scala-68-    // unconvertible type
org/nlogo/api/ScalaConversions.scala:69:    case _ => error("don't know how to convert: " + a)
org/nlogo/api/ScalaConversions.scala-70-  }
org/nlogo/api/ScalaConversions.scala-71-
org/nlogo/api/ShapeList.java-13-{
org/nlogo/api/ShapeList.java-14-
org/nlogo/api/ShapeList.java:15:	public static final String DEFAULT_SHAPE_NAME = "default" ;
org/nlogo/api/ShapeList.java-16-	
org/nlogo/api/ShapeList.java-17-	public static boolean isDefaultShapeName( String name )
org/nlogo/api/StringUtils.scala-29-      case _ =>
org/nlogo/api/StringUtils.scala-30-        // kludge alert: Tokenizer expects exactly this exception, so it
org/nlogo/api/StringUtils.scala:31:        // can detect the error and recover when it's in "robust" mode - ST 9/22/10
org/nlogo/api/StringUtils.scala-32-        throw new IllegalArgumentException(
org/nlogo/api/StringUtils.scala:33:          "invalid escape sequence: \\" + c)
org/nlogo/api/StringUtils.scala-34-    }
org/nlogo/api/StringUtils.scala-35-}

# ugh to this stuff.
# it might need to be globalized...but we should deprioritze it.
org/nlogo/app/AboutWindow.scala-22-  private val staticInfo =
org/nlogo/app/AboutWindow.scala-23-    Version.version() +
org/nlogo/app/AboutWindow.scala:24:      " (" + Version.buildDate() + ")\n" +
org/nlogo/app/AboutWindow.scala:25:      "Extension API version: " + APIVersion.version + "\n" +
org/nlogo/app/AboutWindow.scala-26-      SysInfo.getVMInfoString + "\n" +
org/nlogo/app/AboutWindow.scala-27-      SysInfo.getOSInfoString + "\n" +
org/nlogo/app/AboutWindow.scala-28-      SysInfo.getScalaVersionString + "\n"
org/nlogo/app/AboutWindow.scala-29-  locally {
org/nlogo/app/AboutWindow.scala:30:    setTitle("About NetLogo")
org/nlogo/app/AboutWindow.scala-31-    setResizable(false)
org/nlogo/app/AboutWindow.scala-32-    setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE)
org/nlogo/app/AboutWindow.scala-34-    val label = new JLabel(){
org/nlogo/app/AboutWindow.scala-35-      setText(
org/nlogo/app/AboutWindow.scala:36:          "<html>\n"
org/nlogo/app/AboutWindow.scala:37:          + "<center>"
org/nlogo/app/AboutWindow.scala-38-          + "<b>" + Version.version()
org/nlogo/app/AboutWindow.scala:39:          + " <font color=\"#666666\">(" + Version.buildDate()
org/nlogo/app/AboutWindow.scala:40:          + ")</font>" + "</b><br><br>\n"
org/nlogo/app/AboutWindow.scala:41:          + "<font size=-1><b>web site</b> "
org/nlogo/app/AboutWindow.scala:42:          + "<a href=\"http://ccl.northwestern.edu/netlogo/\">ccl.northwestern.edu/netlogo</a><br><br>"
org/nlogo/app/AboutWindow.scala:43:          + "<font color=\"#333333\">&copy 1999-2010 Uri Wilensky. All rights reserved.<br><br>"
org/nlogo/app/AboutWindow.scala:44:          + "Please cite as:<br>"
org/nlogo/app/AboutWindow.scala:45:          + "Wilensky, U. 1999. NetLogo. http://ccl.northwestern.edu/netlogo/.<br>"
org/nlogo/app/AboutWindow.scala:46:          + "Center for Connected Learning and Computer-Based Modeling,<br>"
org/nlogo/app/AboutWindow.scala:47:          + "Northwestern University. Evanston, IL."
org/nlogo/app/AboutWindow.scala:48:          + "</center> </html>"
org/nlogo/app/AboutWindow.scala-49-       )
org/nlogo/app/AboutWindow.scala-50-      setHorizontalAlignment(SwingConstants.CENTER)
org/nlogo/app/AboutWindow.scala-51-      addMouseListener(new MouseAdapter() {
org/nlogo/app/AboutWindow.scala-52-        override def mouseClicked(e: MouseEvent) {
org/nlogo/app/AboutWindow.scala:53:          BrowserLauncher.openURL(AboutWindow.this, "http://ccl.northwestern.edu/netlogo/", false)
org/nlogo/app/AboutWindow.scala-54-        }
org/nlogo/app/AboutWindow.scala-55-      })
org/nlogo/app/AboutWindow.scala-59-
org/nlogo/app/AboutWindow.scala-74-
org/nlogo/app/AboutWindow.scala-75-    val tabs = new JTabbedPane(){
org/nlogo/app/AboutWindow.scala:76:      add("Credits",new JScrollPane(credits){ setPreferredSize(new Dimension(200,230)) })
org/nlogo/app/AboutWindow.scala:77:      add("System",new JScrollPane(system){ setPreferredSize(new Dimension(200,230)) })
org/nlogo/app/AboutWindow.scala-78-    }
org/nlogo/app/AboutWindow.scala-79-    getContentPane.add(label,BorderLayout.CENTER)
org/nlogo/app/AboutWindow.scala-101-  private def refreshSystemText() {
org/nlogo/app/AboutWindow.scala-102-    val newGraphicsInfo = SysInfo.getMemoryInfoString + "\n\n" +
org/nlogo/app/AboutWindow.scala:103:            SysInfo.getJOGLInfoString + "\n" +SysInfo.getGLInfoString + "\n"
org/nlogo/app/AboutWindow.scala-104-    if (!newGraphicsInfo.equals(graphicsInfo)) {
org/nlogo/app/AboutWindow.scala-105-      val start = system.getSelectionStart()
org/nlogo/app/AboutWindow.scala-109-              + SysInfo.getJOGLInfoString + "\n"
org/nlogo/app/AboutWindow.scala-110-              + SysInfo.getGLInfoString + "\n"
org/nlogo/app/AboutWindow.scala:111:              + "SVN revision: " + SysInfo.getSVNInfoString + "\n")
org/nlogo/app/AboutWindow.scala-112-      graphicsInfo = newGraphicsInfo
org/nlogo/app/AboutWindow.scala-113-      system.setSelectionStart(start)

org/nlogo/app/AgentMonitor.scala-31-  private var oldVars = vars
org/nlogo/app/AgentMonitor.scala-32-  val commandLine = new CommandLine(this, false, 11, workspace) { // false = don't echo commands to output
org/nlogo/app/AgentMonitor.scala:33:    override def classDisplayName = "Agent Monitor"
org/nlogo/app/AgentMonitor.scala-34-    // we'll make an AgentSet ourselves, we don't want to use the standard O/T/P sets - ST 11/5/03
org/nlogo/app/AgentMonitor.scala-35-    override def useAgentClass = false

org/nlogo/app/AgentMonitorEditor.scala-31-    if(vars == null || vars.isEmpty) {
org/nlogo/app/AgentMonitorEditor.scala-32-      setLayout(new java.awt.FlowLayout)
org/nlogo/app/AgentMonitorEditor.scala:33:      add(new javax.swing.JLabel("(no variables defined)"))
org/nlogo/app/AgentMonitorEditor.scala-34-    }
org/nlogo/app/AgentMonitorEditor.scala-113-  // this is necessary because some strings that can be displayed
org/nlogo/app/AgentMonitorEditor.scala:114:  // in the editor can't be read back in, e.g. "(agentset: 4 turtles)",
org/nlogo/app/AgentMonitorEditor.scala-115-  // so we have to be careful not to try to evaluate anything that
org/nlogo/app/AgentMonitorEditor.scala-116-  // the user didn't actually type themselves - ST 8/19/03
org/nlogo/app/AgentMonitorEditor.scala-157-    val P = classOf[Patch];    val L = classOf[Link]
org/nlogo/app/AgentMonitorEditor.scala-158-    parent.agentClass match {
org/nlogo/app/AgentMonitorEditor.scala:159:      case O => "Globals Monitor"
org/nlogo/app/AgentMonitorEditor.scala:160:      case T => "Turtle Monitor"
org/nlogo/app/AgentMonitorEditor.scala:161:      case P => "Patch Monitor"
org/nlogo/app/AgentMonitorEditor.scala:162:      case L => "Link Monitor"
org/nlogo/app/AgentMonitorEditor.scala-163-    }
org/nlogo/app/AgentMonitorEditor.scala-164-  }
org/nlogo/app/AgentMonitorEditor.scala-187-      if(error != null) {
org/nlogo/app/AgentMonitorEditor.scala-188-        org.nlogo.swing.OptionDialog.show(
org/nlogo/app/AgentMonitorEditor.scala-190-        setEnabled(true)
org/nlogo/app/AgentMonitorEditor.scala-191-        editor.setText(get)
org/nlogo/app/AgentMonitorEditor.scala-201-    setEnabled(false)
org/nlogo/app/AgentMonitorEditor.scala-202-    this.innerSource(innerSource)
org/nlogo/app/AgentMonitorEditor.scala-275-
org/nlogo/app/AgentMonitorEditor.scala-407-        workspace.world.getTurtle(d.longValue)
org/nlogo/app/AgentMonitorEditor.scala-408-      case _ => 
org/nlogo/app/AgentMonitorEditor.scala:409:        throw new org.nlogo.api.AgentException("expected a turtle or a who number")
org/nlogo/app/AgentMonitorEditor.scala-410-    }
org/nlogo/app/AgentMonitorEditor.scala-411-  }
org/nlogo/app/AgentMonitorEditor.scala-413-  @throws(classOf[org.nlogo.api.AgentException])
org/nlogo/app/AgentMonitorEditor.scala-414-  private def parseAgentSet(text: String): AgentSet =
org/nlogo/app/AgentMonitorEditor.scala:415:    if(text.equalsIgnoreCase("LINKS"))
org/nlogo/app/AgentMonitorEditor.scala-416-      workspace.world.links()
org/nlogo/app/AgentMonitorEditor.scala-417-    else {
org/nlogo/app/AgentMonitorEditor.scala-418-      val breed = workspace.world.getLinkBreed(text.toUpperCase)
org/nlogo/app/AgentMonitorEditor.scala-419-      if(breed == null)
org/nlogo/app/AgentMonitorEditor.scala:420:        throw new org.nlogo.api.AgentException("expected a link breed")
org/nlogo/app/AgentMonitorEditor.scala-421-      breed
org/nlogo/app/AgentMonitorEditor.scala-422-    }
org/nlogo/app/AgentMonitorViewPanel.scala-44-  }
org/nlogo/app/AgentMonitorViewPanel.scala-45-
org/nlogo/app/AgentMonitorViewPanel.scala:46:  private class WatchMeAction extends javax.swing.AbstractAction("watch-me") {
org/nlogo/app/AgentMonitorViewPanel.scala-47-    override def actionPerformed(e: java.awt.event.ActionEvent) {
org/nlogo/app/AgentMonitorViewPanel.scala-48-      workspace.world.observer().setPerspective(Perspective.WATCH, view.agent)


org/nlogo/app/AgentMonitorWindow.scala:106:      case O => "Globals"
org/nlogo/app/AgentMonitorWindow.scala:107:      case T if agent == null => "(no turtle)"
org/nlogo/app/AgentMonitorWindow.scala:108:      case T if agent.id == -1 => lastAliveTitle + " (dead)"
org/nlogo/app/AgentMonitorWindow.scala-109-      case T =>
org/nlogo/app/AgentMonitorWindow.scala-110-        lastAliveTitle = agent.toString
org/nlogo/app/AgentMonitorWindow.scala-111-        lastAliveTitle
org/nlogo/app/AgentMonitorWindow.scala:112:      case L if agent == null => "(no link)"
org/nlogo/app/AgentMonitorWindow.scala:113:      case L if agent.id == -1 => lastAliveTitle + " (dead)"
org/nlogo/app/AgentMonitorWindow.scala-114-      case L =>
org/nlogo/app/AgentMonitorWindow.scala-115-        lastAliveTitle = agent.toString
org/nlogo/app/AgentMonitorWindow.scala-116-        lastAliveTitle
org/nlogo/app/AgentMonitorWindow.scala:117:      case P if agent == null => "(no patch)"
org/nlogo/app/AgentMonitorWindow.scala-118-      case P => agent.toString
org/nlogo/app/AgentMonitorWindow.scala-119-    }

org/nlogo/app/App.scala:161:        commandLineModelIsLaunch = args(i) == "--launch"
org/nlogo/app/App.scala-162-        if (commandLineModel != null || commandLineMagic != null)
org/nlogo/app/App.scala:163:          throw new IllegalStateException("Error parsing command line arguments: you can only specify one model to open at startup.")
org/nlogo/app/App.scala-180-        else JOptionPane.showConfirmDialog(null,
org/nlogo/app/App.scala:181:          "You need to initialize the logger using the --logging options before specifying a directory.",
org/nlogo/app/App.scala:182:          "NetLogo", JOptionPane.DEFAULT_OPTION)
org/nlogo/app/App.scala-183-      }
org/nlogo/app/App.scala-184-      else if (args(i).startsWith("--")) {
org/nlogo/app/App.scala-185-        //TODO: Decide: should we do System.exit() here?
org/nlogo/app/App.scala-186-        // Previously we've just ignored unknown parameters, but that seems wrong to me.  ~Forrest (2/12/2009)
org/nlogo/app/App.scala:187:        System.err.println("Error: Unknown command line argument: " + args(i));
org/nlogo/app/App.scala-188-      }
org/nlogo/app/App.scala:189:      else { // we assume it's a filename to "launch"
org/nlogo/app/App.scala-190-        commandLineModelIsLaunch = true;
org/nlogo/app/App.scala-191-        if (commandLineModel != null || commandLineMagic != null)
org/nlogo/app/App.scala:192:          throw new IllegalStateException("Error parsing command line arguments: you can only specify one model to open at startup.")
org/nlogo/app/App.scala-193-        val modelFile = new java.io.File(args(i));
org/nlogo/app/App.scala-194-        // Best to check if the file exists here, because after the GUI thread has started,
org/nlogo/app/App.scala-195-        // NetLogo just hangs with the splash screen showing if file doesn't exist. ~Forrest (2/12/2009)
org/nlogo/app/App.scala-196-        if (!modelFile.exists())
org/nlogo/app/App.scala:197:          throw new IllegalStateException("File specified to open (" + args(i) + ") was not found!")
org/nlogo/app/App.scala-198-        commandLineModel = modelFile.getAbsolutePath()
org/nlogo/app/App.scala-199-      }
org/nlogo/app/App.scala-204-    if(new java.io.File(properties).exists) {
org/nlogo/app/App.scala-205-      val username =
org/nlogo/app/App.scala:206:        JOptionPane.showInputDialog(null, "Enter your name:", "",
org/nlogo/app/App.scala-207-          JOptionPane.QUESTION_MESSAGE, null, null, "").asInstanceOf[String]
org/nlogo/app/App.scala-208-      if(username != null){
org/nlogo/app/App.scala-213-      }
org/nlogo/app/App.scala-214-    }
org/nlogo/app/App.scala:215:    else JOptionPane.showConfirmDialog(null, "The file " + properties + " does not exist.",
org/nlogo/app/App.scala:216:      "NetLogo", JOptionPane.DEFAULT_OPTION)
org/nlogo/app/App.scala-217-  }
org/nlogo/app/App.scala-218-
org/nlogo/app/App.scala-510-    val path = workspace.getModelPath
org/nlogo/app/App.scala-511-    if (modelType != ModelType.NEW && path != null) openFromSource(FileIO.file2String(path), path, modelType)
org/nlogo/app/App.scala:512:    else commandLater("print \"can't, new model\"")
org/nlogo/app/App.scala-513-  }
org/nlogo/app/App.scala-514-
org/nlogo/app/App.scala-515-  private def magicOpen(name: String) {
org/nlogo/app/App.scala-516-    val matches = org.nlogo.util.JCL.toScalaSeq(org.nlogo.workspace.ModelsLibrary.findModelsBySubstring(name))
org/nlogo/app/App.scala:517:    if (matches.isEmpty) commandLater("print \"no models matching \\\"" + name + "\\\" found\"")
org/nlogo/app/App.scala-518-    else {
org/nlogo/app/App.scala-519-      val fullName =
org/nlogo/app/App.scala-520-        if (matches.size == 1) matches(0)
org/nlogo/app/App.scala-521-        else {
org/nlogo/app/App.scala:522:          val i = org.nlogo.swing.OptionDialog.showAsList(frame, "Magic Model Matcher", "You must choose!", matches.toArray)
org/nlogo/app/App.scala-523-          if (i != -1) matches(i) else null
org/nlogo/app/App.scala-524-        }
org/nlogo/app/App.scala-532-
org/nlogo/app/App.scala-533-  private def openIndex() {
org/nlogo/app/App.scala:534:    fileMenu.openFromPath(workspace.getModelPath.replaceFirst(" \\S+.nlogo$", " Index.nlogo"), workspace.getModelType)
org/nlogo/app/App.scala-535-  }
org/nlogo/app/App.scala-536-
org/nlogo/app/App.scala-537-  private def openNext(increment: Int) {
org/nlogo/app/App.scala:538:    val path = workspace.getModelPath.replaceFirst(".nlogo$", "")
org/nlogo/app/App.scala-539-    val split = path.split(" ")
org/nlogo/app/App.scala-540-    val modelNumber = increment + split(split.length - 1).toInt
org/nlogo/app/App.scala-541-    fileMenu.openFromPath(
org/nlogo/app/App.scala:542:      workspace.getModelPath.replaceFirst(" \\d+.nlogo$", " " + modelNumber + ".nlogo"), workspace.getModelType)
org/nlogo/app/App.scala-543-  }
org/nlogo/app/App.scala-544-
org/nlogo/app/App.scala-638-   */
org/nlogo/app/App.scala-639-  private def makeFrameTitle = {
org/nlogo/app/App.scala:640:    if(workspace.getModelFileName() == null) "NetLogo"
org/nlogo/app/App.scala-643-      // on OS X, use standard window title format. otherwise use Windows convention
org/nlogo/app/App.scala:644:      if(! System.getProperty("os.name").startsWith("Mac")) title = title + " - " + "NetLogo"
org/nlogo/app/App.scala-645-      // 8212 is the unicode value for an em dash. we use the number since
org/nlogo/app/App.scala-646-      // we don't want non-ASCII characters in the source files -- AZS 6/14/2005
org/nlogo/app/App.scala:647:      else title = "NetLogo " + (8212.toChar) + " " + title
org/nlogo/app/App.scala-648-
org/nlogo/app/App.scala-649-      // OS X UI guidelines prohibit paths in title bars, but oh well...
org/nlogo/app/App.scala:650:      if (workspace.getModelType() == ModelType.NORMAL) title += " {" + workspace.getModelDir() + "}"
org/nlogo/app/App.scala-651-      title 
org/nlogo/app/App.scala-652-    }
org/nlogo/app/App.scala-672-        // important. ev 2/25/08
org/nlogo/app/App.scala-673-        if (!org.nlogo.window.RuntimeErrorDialog.alreadyVisible)
org/nlogo/app/App.scala:674:          org.nlogo.awt.Utils.invokeLater(() => RuntimeErrorDialog.show("Runtime Error", null, null, currentThread, t))
org/nlogo/app/App.scala-675-      }
org/nlogo/app/App.scala-676-      else {
org/nlogo/app/App.scala-682-          // otherwise ignore it - ST 6/10/02
org/nlogo/app/App.scala-683-          ! org.nlogo.window.RuntimeErrorDialog.alreadyVisible) {
org/nlogo/app/App.scala:684:          org.nlogo.awt.Utils.invokeLater(() => RuntimeErrorDialog.show("Internal Error", null, null, currentThread, t))
org/nlogo/app/App.scala-685-        }
org/nlogo/app/App.scala-686-      }
org/nlogo/app/App.scala-716-  def openFromSource(source:String, path:String, modelType:ModelType){
org/nlogo/app/App.scala-717-    dispatchThreadOrBust(
org/nlogo/app/App.scala:718:      try fileMenu.openFromSource(source, path, "Loading...", modelType)
org/nlogo/app/App.scala-719-      catch{ case ex:UserCancelException => org.nlogo.util.Exceptions.ignore(ex) })
org/nlogo/app/App.scala-720-  }
org/nlogo/app/App.scala-806-   */
org/nlogo/app/App.scala-807-  def pressButton(name:String) {
org/nlogo/app/App.scala:808:    if (java.awt.EventQueue.isDispatchThread()) throw new IllegalStateException("can't call on event thread")
org/nlogo/app/App.scala-809-    val button = findButton(name)
org/nlogo/app/App.scala-810-    if (button.forever) {
org/nlogo/app/App.scala-842-    iP.getComponents.collect{case bw: ButtonWidget => bw}.find(_.displayName == name) match {
org/nlogo/app/App.scala-843-      case Some(b) => b
org/nlogo/app/App.scala:844:      case _ => throw new IllegalArgumentException("button '" + name + "' not found")
org/nlogo/app/App.scala-845-    }
org/nlogo/app/App.scala-846-  }
org/nlogo/app/App.scala-912-

# oh man there is an awful lot of text in here...
org/nlogo/app/AppletSaver.scala-13-
org/nlogo/app/AppletSaver.scala:14:  val url = "http://ccl.northwestern.edu/netlogo/"
org/nlogo/app/AppletSaver.scala:15:  val siteLink = "<a target=\"_blank\" href=\"" + url + "\">NetLogo</a>"
org/nlogo/app/AppletSaver.scala:16:  val eol = System.getProperty("line.separator")
org/nlogo/app/AppletSaver.scala-17-
org/nlogo/app/AppletSaver.scala-18-  def save(frame: java.awt.Frame, iP: InterfacePanel, modelName: String,
org/nlogo/app/AppletSaver.scala-56-          FileIO.writeFile(path, buf.toString)
org/nlogo/app/AppletSaver.scala-57-          org.nlogo.swing.OptionDialog.show(
org/nlogo/app/AppletSaver.scala:58:            frame, "Applet Saved",
org/nlogo/app/AppletSaver.scala:59:            "The HTML file you have saved contains instructions for " +
org/nlogo/app/AppletSaver.scala:60:            "arranging the necessary files on your web server.  "  +
org/nlogo/app/AppletSaver.scala:61:            "You may view or edit the HTML file in any text editor.",
org/nlogo/app/AppletSaver.scala-63-        }
org/nlogo/app/AppletSaver.scala-64-        catch {
org/nlogo/app/AppletSaver.scala-65-          case ex: java.io.IOException => 
org/nlogo/app/AppletSaver.scala-66-            javax.swing.JOptionPane.showMessageDialog(
org/nlogo/app/AppletSaver.scala:67:              frame, ex.getMessage, "Error",
org/nlogo/app/AppletSaver.scala-68-              javax.swing.JOptionPane.ERROR_MESSAGE)
org/nlogo/app/AppletSaver.scala:69:        } } }, "Saving...")
org/nlogo/app/AppletSaver.scala-70-  }
org/nlogo/app/AppletSaver.scala-71-
org/nlogo/app/AppletSaver.scala-73-    buf.clear()
org/nlogo/app/AppletSaver.scala-74-    header(modelName)
org/nlogo/app/AppletSaver.scala:75:    paragraph("In order for this to work, this file and the file HubNet.jar",
org/nlogo/app/AppletSaver.scala:76:              "must be in the same directory.  (You can copy HubNet.jar",
org/nlogo/app/AppletSaver.scala:77:              "from the directory where you installed NetLogo.)")
org/nlogo/app/AppletSaver.scala:78:    paragraph("On some systems, you can test the applet locally on your computer",
org/nlogo/app/AppletSaver.scala:79:              "before uploading it to a web server.  It doesn't work on all systems,",
org/nlogo/app/AppletSaver.scala:80:              "though, so if it doesn't work from your hard drive, please try",
org/nlogo/app/AppletSaver.scala:81:              "uploading it to a web server.")
org/nlogo/app/AppletSaver.scala:82:    paragraph("You don't need to include everything in this file in your page.",
org/nlogo/app/AppletSaver.scala:83:              "If you want, you can just take the HTML code beginning with",
org/nlogo/app/AppletSaver.scala:84:              "&lt;applet&gt; and ending with &lt;/applet&gt;, and paste it into any HTML",
org/nlogo/app/AppletSaver.scala:85:              "file you want.  It's even OK to put multiple &lt;applet&gt; tags",
org/nlogo/app/AppletSaver.scala:86:              "on a single page.")
org/nlogo/app/AppletSaver.scala:87:    paragraph("If HubNet.jar is in a different directory you must",
org/nlogo/app/AppletSaver.scala:88:              "modify the archive= line in the HTML code to point",
org/nlogo/app/AppletSaver.scala:89:              "to its actual location. (For example, if you have ",
org/nlogo/app/AppletSaver.scala:90:              "multiple applets in different directories on the same", 
org/nlogo/app/AppletSaver.scala:91:              "web server, you may want to put a single copy of",
org/nlogo/app/AppletSaver.scala:92:              "HubNet.jar in one central place and change the", 
org/nlogo/app/AppletSaver.scala:93:              "archive= lines of all the HTML files to point to that",
org/nlogo/app/AppletSaver.scala:94:              "one central copy.  This will save disk space for you and",
org/nlogo/app/AppletSaver.scala:95:              "download time for your users.)")
org/nlogo/app/AppletSaver.scala:96:    paragraph("To run this activity you must run the server in NetLogo",
org/nlogo/app/AppletSaver.scala:97:              "on the same server that you are hosting the webpage. This",
org/nlogo/app/AppletSaver.scala:98:              "webpage must be accessible to the webserver user.  To login",
org/nlogo/app/AppletSaver.scala:99:              "users should navigate to this webpage and enter a user name",
org/nlogo/app/AppletSaver.scala:100:              "and the port as displayed in the HubNet Control Center.")
org/nlogo/app/AppletSaver.scala:101:    applet("org.nlogo.hubnet.client.ClientApplet", "HubNet.jar" , width, height)
org/nlogo/app/AppletSaver.scala:102:    line("<p>powered by " + siteLink + "</p>")
org/nlogo/app/AppletSaver.scala-103-    line()
org/nlogo/app/AppletSaver.scala:104:    line("</body>")
org/nlogo/app/AppletSaver.scala:105:    line("</html>")
org/nlogo/app/AppletSaver.scala-106-  }
org/nlogo/app/AppletSaver.scala-107-
org/nlogo/app/AppletSaver.scala-113-    buf.clear()    
org/nlogo/app/AppletSaver.scala-114-    header(modelName)
org/nlogo/app/AppletSaver.scala:115:    paragraph("In order for this to work, this file, your model file", 
org/nlogo/app/AppletSaver.scala:116:              "(" + fileName + "), and the file NetLogoLite.jar",
org/nlogo/app/AppletSaver.scala:117:              "must all be in the same directory.  (You can copy NetLogoLite.jar",
org/nlogo/app/AppletSaver.scala:118:              "from the directory where you installed NetLogo.)")
org/nlogo/app/AppletSaver.scala-119-    if(extensions.nonEmpty) {
org/nlogo/app/AppletSaver.scala-120-      val str = new StringBuilder()
org/nlogo/app/AppletSaver.scala-124-        i += 1
org/nlogo/app/AppletSaver.scala-125-        if(i == size && size > 1)
org/nlogo/app/AppletSaver.scala:126:          str ++= "and "
org/nlogo/app/AppletSaver.scala-127-        str ++= jar + " "
org/nlogo/app/AppletSaver.scala-128-      }
org/nlogo/app/AppletSaver.scala:129:      str ++= (if (size > 1) "extensions." else "extension.")
org/nlogo/app/AppletSaver.scala:130:      paragraph("The applet will also need access to the ", str.toString,
org/nlogo/app/AppletSaver.scala:131:                "Copy the entire directory for each required extension into the same",
org/nlogo/app/AppletSaver.scala:132:                "directory as the applet.")
org/nlogo/app/AppletSaver.scala-133-    }
org/nlogo/app/AppletSaver.scala:134:    paragraph("On some systems, you can test the applet locally on your computer",
org/nlogo/app/AppletSaver.scala:135:              "before uploading it to a web server.  It doesn't work on all systems,",
org/nlogo/app/AppletSaver.scala:136:              "though, so if it doesn't work from your hard drive, please try",
org/nlogo/app/AppletSaver.scala:137:              "uploading it to a web server.")
org/nlogo/app/AppletSaver.scala:138:    paragraph("You don't need to include everything in this file in your page.",
org/nlogo/app/AppletSaver.scala:139:              "If you want, you can just take the HTML code beginning with",
org/nlogo/app/AppletSaver.scala:140:              "&lt;applet&gt; and ending with &lt;/applet&gt;, and paste it into any HTML",
org/nlogo/app/AppletSaver.scala:141:              "file you want.  It's even OK to put multiple &lt;applet&gt; tags",
org/nlogo/app/AppletSaver.scala:142:              "on a single page.")
org/nlogo/app/AppletSaver.scala:143:    paragraph("If NetLogoLite.jar and your model are in different",
org/nlogo/app/AppletSaver.scala:144:              "directories, you must modify the archive= and value= lines",
org/nlogo/app/AppletSaver.scala:145:              "in the HTML code to point to their actual locations.",
org/nlogo/app/AppletSaver.scala:146:              "(For example, if you have multiple applets in different",
org/nlogo/app/AppletSaver.scala:147:              "directories on the same web server, you may want to put ",
org/nlogo/app/AppletSaver.scala:148:              "a single copy of NetLogoLite.jar in one central place and",
org/nlogo/app/AppletSaver.scala:149:              "change the archive= lines of all the HTML files to point",
org/nlogo/app/AppletSaver.scala:150:              "to that one central copy.  This will save disk space for",
org/nlogo/app/AppletSaver.scala:151:              "you and download time for your users.)")
org/nlogo/app/AppletSaver.scala:152:    applet("org.nlogo.lite.Applet", "NetLogoLite.jar", width, height, 
org/nlogo/app/AppletSaver.scala:153:           List(("DefaultModel", org.nlogo.util.Utils.escapeSpacesInURL(fileName))),
org/nlogo/app/AppletSaver.scala-154-           additionalJars)
org/nlogo/app/AppletSaver.scala:155:    line("<p>powered by")
org/nlogo/app/AppletSaver.scala-156-    line(siteLink + "</p>")
org/nlogo/app/AppletSaver.scala-157-    line()
org/nlogo/app/AppletSaver.scala:158:    line("<p>view/download model file:")
org/nlogo/app/AppletSaver.scala:159:    line("<a href=\"" + org.nlogo.util.Utils.escapeSpacesInURL(fileName) +
org/nlogo/app/AppletSaver.scala:160:         "\">" + fileName + "</a></p>")
org/nlogo/app/AppletSaver.scala-161-    line(InfoFormatter.toInnerHtml(infoText) + "\n")
org/nlogo/app/AppletSaver.scala:162:    line(InfoFormatter.toInnerHtml("# PROCEDURES"))
org/nlogo/app/AppletSaver.scala-163-    line(proceduresToHtml.convert(procedures))
org/nlogo/app/AppletSaver.scala:164:    line("</body>")
org/nlogo/app/AppletSaver.scala:165:    line("</html>")
org/nlogo/app/AppletSaver.scala-166-  }
org/nlogo/app/AppletSaver.scala-167-
org/nlogo/app/AppletSaver.scala-168-  private def header(modelName: String) {
org/nlogo/app/AppletSaver.scala:169:    line("<html>")
org/nlogo/app/AppletSaver.scala:170:    line("<head>")
org/nlogo/app/AppletSaver.scala:171:    line("<title>" + modelName + "</title>")
org/nlogo/app/AppletSaver.scala-172-    for(l <- InfoFormatter.styleSheet(12).split("\n"))
org/nlogo/app/AppletSaver.scala-173-      line(l)
org/nlogo/app/AppletSaver.scala:174:    line("</head>")
org/nlogo/app/AppletSaver.scala:175:    line("<body>")
org/nlogo/app/AppletSaver.scala-176-    line()
org/nlogo/app/AppletSaver.scala:177:    line("<p>This page was automatically generated by " + Version.version() + ".</p>")
org/nlogo/app/AppletSaver.scala-178-    line()
org/nlogo/app/AppletSaver.scala-179-    // note that this next paragraph is duplicated in Applet - ST 5/10/05
org/nlogo/app/AppletSaver.scala:180:    line("<p>The applet requires Java 5 or higher.")
org/nlogo/app/AppletSaver.scala:181:    line("Java must be enabled in your browser settings.")
org/nlogo/app/AppletSaver.scala:182:    line("Mac users must have Mac OS X 10.4 or higher.")
org/nlogo/app/AppletSaver.scala:183:    line("Windows and Linux users may obtain the latest Java from")
org/nlogo/app/AppletSaver.scala:184:    line("<a href=\"http://java.sun.com/getjava/download.html\">Sun's Java site</a>.</p>")
org/nlogo/app/AppletSaver.scala-185-    line()
org/nlogo/app/AppletSaver.scala:186:    line("<p><hr>")
org/nlogo/app/AppletSaver.scala-187-    line()
org/nlogo/app/AppletSaver.scala-188-  }
org/nlogo/app/AppletSaver.scala-194-  {
org/nlogo/app/AppletSaver.scala-195-    line("<p>")
org/nlogo/app/AppletSaver.scala:196:    line("<applet code=\"" + code + "\"")
org/nlogo/app/AppletSaver.scala:197:    line("        archive=" + (archive :: additionalJars.toList).mkString("\"", ",", "\""))
org/nlogo/app/AppletSaver.scala:198:    line("        width=\"" + width + "\" height=\"" + height + "\">")
org/nlogo/app/AppletSaver.scala-199-    for(param <- params) {
org/nlogo/app/AppletSaver.scala:200:      line("  <param name=\"" + param._1 + "\"")
org/nlogo/app/AppletSaver.scala:201:      line("         value=\"" + param._2 + "\">")
org/nlogo/app/AppletSaver.scala-202-    }
org/nlogo/app/AppletSaver.scala:203:    line("</applet>")
org/nlogo/app/AppletSaver.scala-204-    line("</p>")
org/nlogo/app/AppletSaver.scala-205-    line()
org/nlogo/app/AppletSaver.scala-207-
org/nlogo/app/AppletSaver.scala-208-  private def paragraph(lines: String*) {
org/nlogo/app/AppletSaver.scala:209:    line(lines.mkString("<p><font size=\"-1\">", eol, "</font></p>"))
org/nlogo/app/AppletSaver.scala-210-    line()
org/nlogo/app/AppletSaver.scala-211-  }

org/nlogo/app/CommandLine.java-78-
org/nlogo/app/CommandLine.java-79-	@Override
org/nlogo/app/CommandLine.java:80:	public String classDisplayName() { return "Command Center" ; } // for Errors tab
org/nlogo/app/CommandLine.java-81-
org/nlogo/app/CommandLine.java-241-					( false ,
org/nlogo/app/CommandLine.java-242-					  new org.nlogo.agent.OutputObject
org/nlogo/app/CommandLine.java:243:					  ( "" , "ERROR: " + error().getMessage() , true , true ) ,
org/nlogo/app/CommandLine.java-244-					  true , true ).raise( this ) ;
org/nlogo/app/CommandLine.java-245-			}

org/nlogo/app/DirtyMonitor.scala-5-object DirtyMonitor {
org/nlogo/app/DirtyMonitor.scala-6-  val autoSaveFileName = {
org/nlogo/app/DirtyMonitor.scala:7:    val df = new java.text.SimpleDateFormat("yyyy-MM-dd.HH_mm_ss",
org/nlogo/app/DirtyMonitor.scala-8-                                            java.util.Locale.US)
org/nlogo/app/DirtyMonitor.scala:9:    System.getProperty("java.io.tmpdir") +
org/nlogo/app/DirtyMonitor.scala:10:      System.getProperty("file.separator") + "autosave_" +
org/nlogo/app/DirtyMonitor.scala:11:      df.format(new java.util.Date()) + ".nlogo"
org/nlogo/app/DirtyMonitor.scala-12-  }
org/nlogo/app/DirtyMonitor.scala-13-}
org/nlogo/app/DirtyMonitor.scala-32-      // to indicate that the document has unsaved changes, as documented at
org/nlogo/app/DirtyMonitor.scala-33-      // developer.apple.com/qa/qa2001/qa1146.html - ST 7/30/04
org/nlogo/app/DirtyMonitor.scala:34:      frame.getRootPane().putClientProperty("windowModified", dirty)
org/nlogo/app/DirtyMonitor.scala-35-    }
org/nlogo/app/DirtyMonitor.scala-36-  }

org/nlogo/app/FileMenu.java-70-		{
org/nlogo/app/FileMenu.java-71-			addSeparator() ;
org/nlogo/app/FileMenu.java-103-				javax.swing.JOptionPane.showMessageDialog
org/nlogo/app/FileMenu.java-104-					( FileMenu.this , ex.getMessage() ,
org/nlogo/app/FileMenu.java:105:					  "Error", javax.swing.JOptionPane.ERROR_MESSAGE) ;
org/nlogo/app/FileMenu.java-106-			}
org/nlogo/app/FileMenu.java-107-		}
org/nlogo/app/FileMenu.java-132-				javax.swing.JOptionPane.showMessageDialog
org/nlogo/app/FileMenu.java-133-					( FileMenu.this , ex.getMessage() ,
org/nlogo/app/FileMenu.java:134:					  "Error", javax.swing.JOptionPane.ERROR_MESSAGE) ;
org/nlogo/app/FileMenu.java-135-			}
org/nlogo/app/FileMenu.java-136-		}
org/nlogo/app/FileMenu.java-168-		@Override
org/nlogo/app/FileMenu.java-169-		void action()
org/nlogo/app/FileMenu.java-175-				( org.nlogo.awt.Utils.getFrame( FileMenu.this ) ) ;
org/nlogo/app/FileMenu.java-176-			String modelPath = ModelsLibraryDialog.getModelPath() ;
org/nlogo/app/FileMenu.java:177:			openFromSource( source , modelPath , "Loading..." ,
org/nlogo/app/FileMenu.java-178-							ModelType.LIBRARY ) ;
org/nlogo/app/FileMenu.java-179-		}
org/nlogo/app/FileMenu.java-251-
org/nlogo/app/FileMenu.java-252-			// try to guess a decent file name to export to...
org/nlogo/app/FileMenu.java:253:			int suffixIndex = suggestedFileName.lastIndexOf( ".nlogo" ) ;
org/nlogo/app/FileMenu.java-254-			if( suffixIndex > 0
org/nlogo/app/FileMenu.java-255-				&& suffixIndex == suggestedFileName.length() - 6 )
org/nlogo/app/FileMenu.java-258-					suggestedFileName.length() - 6 ) ;
org/nlogo/app/FileMenu.java-259-			}
org/nlogo/app/FileMenu.java:260:			suggestedFileName = suggestedFileName + suffix + ".html" ;
org/nlogo/app/FileMenu.java-261-
org/nlogo/app/FileMenu.java-262-			// make the user choose the actual destination...
org/nlogo/app/FileMenu.java-263-			return org.nlogo.swing.FileDialog.show
org/nlogo/app/FileMenu.java:264:				( FileMenu.this , "Saving as Applet" , java.awt.FileDialog.SAVE ,
org/nlogo/app/FileMenu.java-265-				  suggestedFileName ) ;
org/nlogo/app/FileMenu.java-266-		}
org/nlogo/app/FileMenu.java-280-		{
org/nlogo/app/FileMenu.java:281:			String exportPath = getExportPath( "-client" ) ;
org/nlogo/app/FileMenu.java-282-
org/nlogo/app/FileMenu.java-304-			final String exportPath = org.nlogo.swing.FileDialog.show
org/nlogo/app/FileMenu.java:305:				( FileMenu.this , "Export World" , java.awt.FileDialog.SAVE ,
org/nlogo/app/FileMenu.java:306:				  app.workspace().guessExportName( "world.csv" ) ) ;
org/nlogo/app/FileMenu.java-307-			final java.io.IOException[] exception =
org/nlogo/app/FileMenu.java-308-				new java.io.IOException[] { null } ;
org/nlogo/app/FileMenu.java-320-						  }
org/nlogo/app/FileMenu.java-321-					  } } ,
org/nlogo/app/FileMenu.java:322:				  "Exporting..." ) ;
org/nlogo/app/FileMenu.java-337-			final String exportPath =
org/nlogo/app/FileMenu.java-338-				org.nlogo.swing.FileDialog.show
org/nlogo/app/FileMenu.java:339:				( FileMenu.this , "Export View" ,
org/nlogo/app/FileMenu.java-340-				  java.awt.FileDialog.SAVE ,
org/nlogo/app/FileMenu.java:341:				  app.workspace().guessExportName( "view.png") ) ;
org/nlogo/app/FileMenu.java-349-						  {
org/nlogo/app/FileMenu.java-350-							  app.workspace().exportView
org/nlogo/app/FileMenu.java:351:								  ( exportPath , "png" ) ;
org/nlogo/app/FileMenu.java-356-						  }
org/nlogo/app/FileMenu.java-357-					  } } ,
org/nlogo/app/FileMenu.java:358:				  "Exporting..." ) ;
org/nlogo/app/FileMenu.java-373-			final String exportPath =
org/nlogo/app/FileMenu.java-374-				org.nlogo.swing.FileDialog.show
org/nlogo/app/FileMenu.java:375:				( FileMenu.this , "Export Interface" ,
org/nlogo/app/FileMenu.java-376-				  java.awt.FileDialog.SAVE ,
org/nlogo/app/FileMenu.java:377:				  app.workspace().guessExportName( "interface.png") ) ;
org/nlogo/app/FileMenu.java-392-					  } } ,
org/nlogo/app/FileMenu.java:393:				  "Exporting..." ) ;
org/nlogo/app/FileMenu.java-407-		{
org/nlogo/app/FileMenu.java-408-			final String exportPath = org.nlogo.swing.FileDialog.show
org/nlogo/app/FileMenu.java:409:				( FileMenu.this , "Export Output" , java.awt.FileDialog.SAVE ,
org/nlogo/app/FileMenu.java:410:				  app.workspace().guessExportName("output.txt") ) ;
org/nlogo/app/FileMenu.java-411-			new org.nlogo.swing.ModalProgressTask
org/nlogo/app/FileMenu.java-412-				( org.nlogo.awt.Utils.getFrame( FileMenu.this ) ,
org/nlogo/app/FileMenu.java-416-							  .raise( FileMenu.this ) ;
org/nlogo/app/FileMenu.java-417-					  } } ,
org/nlogo/app/FileMenu.java:418:				  "Exporting..." ) ;
org/nlogo/app/FileMenu.java-419-		}
org/nlogo/app/FileMenu.java-429-			final String exportPath = org.nlogo.swing.FileDialog.show
org/nlogo/app/FileMenu.java:430:				( FileMenu.this , "Export Plot" , java.awt.FileDialog.SAVE ,
org/nlogo/app/FileMenu.java:431:				  app.workspace().guessExportName( "plot.csv" ) );
org/nlogo/app/FileMenu.java-432-			new org.nlogo.swing.ModalProgressTask
org/nlogo/app/FileMenu.java-433-				( org.nlogo.awt.Utils.getFrame( FileMenu.this ) ,
org/nlogo/app/FileMenu.java-439-							  .raise( FileMenu.this ) ;
org/nlogo/app/FileMenu.java-440-					  } } ,
org/nlogo/app/FileMenu.java:441:				  "Exporting..." ) ;
org/nlogo/app/FileMenu.java-442-		}
org/nlogo/app/FileMenu.java-452-		{
org/nlogo/app/FileMenu.java-453-			final String exportPath = org.nlogo.swing.FileDialog.show
org/nlogo/app/FileMenu.java:454:				( FileMenu.this , "Export All Plots" , java.awt.FileDialog.SAVE ,
org/nlogo/app/FileMenu.java:455:				  app.workspace().guessExportName( "plots.csv" ) ) ;
org/nlogo/app/FileMenu.java-456-			new org.nlogo.swing.ModalProgressTask
org/nlogo/app/FileMenu.java-457-				( org.nlogo.awt.Utils.getFrame( FileMenu.this ) ,
org/nlogo/app/FileMenu.java-463-							  .raise( FileMenu.this ) ;
org/nlogo/app/FileMenu.java-464-					  } } ,
org/nlogo/app/FileMenu.java:465:				  "Exporting..." ) ;
org/nlogo/app/FileMenu.java-466-		}
org/nlogo/app/FileMenu.java-476-		{
org/nlogo/app/FileMenu.java-477-			final String importPath = org.nlogo.swing.FileDialog.show(
org/nlogo/app/FileMenu.java:478:				FileMenu.this , "Import World" , java.awt.FileDialog.LOAD , null ) ;
org/nlogo/app/FileMenu.java-479-			final java.io.IOException[] exception =
org/nlogo/app/FileMenu.java-480-				new java.io.IOException[] { null } ;
org/nlogo/app/FileMenu.java-494-						  }
org/nlogo/app/FileMenu.java-495-					  } } ,
org/nlogo/app/FileMenu.java:496:				  "Importing..." ) ;
org/nlogo/app/FileMenu.java-510-		{
org/nlogo/app/FileMenu.java-511-			final String importPath = org.nlogo.swing.FileDialog.show(
org/nlogo/app/FileMenu.java:512:				FileMenu.this , "Import Patch Colors" , java.awt.FileDialog.LOAD , null ) ;
org/nlogo/app/FileMenu.java-513-			final java.io.IOException[] exception =
org/nlogo/app/FileMenu.java-514-				new java.io.IOException[] { null } ;
org/nlogo/app/FileMenu.java-534-						  }
org/nlogo/app/FileMenu.java-535-					  } } ,
org/nlogo/app/FileMenu.java:536:				  "Importing Patch Colors..." ) ;
org/nlogo/app/FileMenu.java-537-			if( exception[ 0 ] != null )
org/nlogo/app/FileMenu.java-550-		{
org/nlogo/app/FileMenu.java-551-			final String importPath = org.nlogo.swing.FileDialog.show(
org/nlogo/app/FileMenu.java:552:				FileMenu.this , "Import Patch Colors RGB" , java.awt.FileDialog.LOAD , null ) ;
org/nlogo/app/FileMenu.java-553-			final java.io.IOException[] exception =
org/nlogo/app/FileMenu.java-554-				new java.io.IOException[] { null } ;
org/nlogo/app/FileMenu.java-574-						  }
org/nlogo/app/FileMenu.java-575-					  } } ,
org/nlogo/app/FileMenu.java:576:				  "Importing Patch Colors..." ) ;
org/nlogo/app/FileMenu.java-590-		{
org/nlogo/app/FileMenu.java-591-			final String importPath = org.nlogo.swing.FileDialog.show(
org/nlogo/app/FileMenu.java:592:				FileMenu.this , "Import Drawing" , java.awt.FileDialog.LOAD , null ) ;
org/nlogo/app/FileMenu.java-593-			final java.io.IOException[] exception =
org/nlogo/app/FileMenu.java-594-				new java.io.IOException[] { null } ;
org/nlogo/app/FileMenu.java-608-						  }
org/nlogo/app/FileMenu.java-609-					  } } ,
org/nlogo/app/FileMenu.java:610:				  "Importing Drawing..." ) ;
org/nlogo/app/FileMenu.java-611-			if( exception[ 0 ] != null )
org/nlogo/app/FileMenu.java-612-			{
org/nlogo/app/FileMenu.java-625-			final String importPath = org.nlogo.swing.FileDialog.show(
org/nlogo/app/FileMenu.java:626:				FileMenu.this , "Import HubNet Client Interface" , java.awt.FileDialog.LOAD , null ) ;
org/nlogo/app/FileMenu.java-627-			final java.io.IOException[] exception =
org/nlogo/app/FileMenu.java-628-				new java.io.IOException[] { null } ;
org/nlogo/app/FileMenu.java-630-				org.nlogo.swing.OptionDialog.show
org/nlogo/app/FileMenu.java-631-				( app.workspace().getFrame() ,
org/nlogo/app/FileMenu.java:632:				  "Import HubNet Client" ,
org/nlogo/app/FileMenu.java:633:				  "Which section would you like to import from?" ,
org/nlogo/app/FileMenu.java:634:				  new String[] { "Interface Tab" , "HubNet client", "Cancel" } ) ;
org/nlogo/app/FileMenu.java-635-			
org/nlogo/app/FileMenu.java-636-			if( choice != 2 )
org/nlogo/app/FileMenu.java-650-							  }
org/nlogo/app/FileMenu.java-651-						  } } ,
org/nlogo/app/FileMenu.java:652:					  "Importing Drawing..." ) ;
org/nlogo/app/FileMenu.java-653-				if( exception[ 0 ] != null )
org/nlogo/app/FileMenu.java-654-				{
org/nlogo/app/FileMenu.java-691-	/**
org/nlogo/app/FileMenu.java-692-	 * makes a guess as to what the user would like to save this model as.
org/nlogo/app/FileMenu.java:693:	 * This is the model name if there is one, "Untitled.nlogo" otherwise.
org/nlogo/app/FileMenu.java-694-	 */
org/nlogo/app/FileMenu.java-695-	private String guessFileName()
org/nlogo/app/FileMenu.java-698-		if( fileName == null )
org/nlogo/app/FileMenu.java-699-		{
org/nlogo/app/FileMenu.java:700:			return "Untitled.nlogo" ;
org/nlogo/app/FileMenu.java-701-		}
org/nlogo/app/FileMenu.java-702-		return fileName ;
org/nlogo/app/FileMenu.java-721-		if( model.equals( NEW_MODEL ) )
org/nlogo/app/FileMenu.java-722-		{
org/nlogo/app/FileMenu.java:723:			openFromSource( source , null , "Clearing..." ,
org/nlogo/app/FileMenu.java-724-							ModelType.NEW ) ;
org/nlogo/app/FileMenu.java-725-		}
org/nlogo/app/FileMenu.java-729-			// they are read-only. This is currently never used, so I'm
org/nlogo/app/FileMenu.java-730-			// not even sure it's what we would really want...
org/nlogo/app/FileMenu.java:731:			openFromSource( source , null , "Loading..." ,
org/nlogo/app/FileMenu.java-732-							ModelType.LIBRARY ) ;
org/nlogo/app/FileMenu.java-733-		}
org/nlogo/app/FileMenu.java-758-			{
org/nlogo/app/FileMenu.java-759-				throw new IllegalStateException
org/nlogo/app/FileMenu.java:760:					( "couldn't open: '" + path + "'" ) ;
org/nlogo/app/FileMenu.java-761-			}
org/nlogo/app/FileMenu.java:762:			openFromSource( source , path , "Loading..." , modelType ) ;
org/nlogo/app/FileMenu.java-763-		}
org/nlogo/app/FileMenu.java-764-		catch( UserCancelException ex )
org/nlogo/app/FileMenu.java-777-	 * @param source the model source. May not be null.
org/nlogo/app/FileMenu.java-778-	 * @param path the full pathname of the model, including the file. For
org/nlogo/app/FileMenu.java:779:	 *     example: "/home/mmh/models/My_Model.nlogo". This may be null, if,
org/nlogo/app/FileMenu.java-780-	 *     for example, this is a new model, or the origin is unknown.
org/nlogo/app/FileMenu.java:781:	 * @param message the message to display in the "loading" modal dialog.
org/nlogo/app/FileMenu.java-782-	 * @param modelType the type of this model. Must be one of the types
org/nlogo/app/FileMenu.java-783-	 *     defined in org.nlogo.workspace.Workspace.
org/nlogo/app/FileMenu.java-795-		}
org/nlogo/app/FileMenu.java-796-		String version = org.nlogo.api.ModelReader.parseVersion( map ) ;
org/nlogo/app/FileMenu.java:797:		if( version == null || ! version.startsWith( "NetLogo" ) )
org/nlogo/app/FileMenu.java-798-		{
org/nlogo/app/FileMenu.java-799-			notifyUserNotValidFile() ;
org/nlogo/app/FileMenu.java-926-		new org.nlogo.swing.ModalProgressTask
org/nlogo/app/FileMenu.java-927-			( org.nlogo.awt.Utils.getFrame( this ) , saver ,
org/nlogo/app/FileMenu.java:928:			"Saving..." ) ;
org/nlogo/app/FileMenu.java-929-		if( saver.getException() != null )
org/nlogo/app/FileMenu.java-930-		{
org/nlogo/app/FileMenu.java-931-			javax.swing.JOptionPane.showMessageDialog
org/nlogo/app/FileMenu.java:932:				( this , "Save failed.  Error: " + saver.getException().getMessage() ,
org/nlogo/app/FileMenu.java:933:				  "NetLogo", javax.swing.JOptionPane.ERROR_MESSAGE) ;
org/nlogo/app/FileMenu.java-934-		}
org/nlogo/app/FileMenu.java-935-		if( ! saver.getResult() )
org/nlogo/app/FileMenu.java-950-		if ( app.workspace().movieEncoder != null )
org/nlogo/app/FileMenu.java-951-		{
org/nlogo/app/FileMenu.java:953:			String message = "There is a movie in progress. " +
org/nlogo/app/FileMenu.java:954:				"Are you sure you want to exit this model? " +
org/nlogo/app/FileMenu.java:955:				"You will lose the contents of your movie." ;
org/nlogo/app/FileMenu.java-956-			if ( org.nlogo.swing.OptionDialog.show
org/nlogo/app/FileMenu.java:957:					( this , "NetLogo" , message , options ) == 1 )
org/nlogo/app/FileMenu.java-958-			{
org/nlogo/app/FileMenu.java-959-				throw new UserCancelException() ;
org/nlogo/app/FileMenu.java-972-		throws UserCancelException
org/nlogo/app/FileMenu.java-973-	{
org/nlogo/app/FileMenu.java:974:		return org.nlogo.swing.FileDialog.show( this , "Open" ,
org/nlogo/app/FileMenu.java-975-			java.awt.FileDialog.LOAD , null ) ;
org/nlogo/app/FileMenu.java-976-	}
org/nlogo/app/FileMenu.java-993-			org.nlogo.swing.FileDialog.setDirectory( newDirectoryName ) ;
org/nlogo/app/FileMenu.java-994-			String path = org.nlogo.swing.FileDialog.show(
org/nlogo/app/FileMenu.java:995:				this , "Save As" , java.awt.FileDialog.SAVE ,
org/nlogo/app/FileMenu.java-996-				newFileName ) ;
org/nlogo/app/FileMenu.java-997-			java.io.File file = new java.io.File( path ) ;
org/nlogo/app/FileMenu.java-998-			newFileName = file.getName() ;
org/nlogo/app/FileMenu.java-999-			newDirectoryName = path.substring( 0 , path.lastIndexOf( newFileName ) ) ;
org/nlogo/app/FileMenu.java:1000:			int suffixIndex = newFileName.lastIndexOf( ".nlogo" ) ;
org/nlogo/app/FileMenu.java-1001-			// make sure it ends with .nlogo and there's at least one
org/nlogo/app/FileMenu.java-1002-			// character first.
org/nlogo/app/FileMenu.java-1010-				newFileName = newFileName.substring( 0 , dotIndex ) ;
org/nlogo/app/FileMenu.java-1011-			}
org/nlogo/app/FileMenu.java:1012:			newFileName = newFileName + ".nlogo" ;
org/nlogo/app/FileMenu.java:1013:			String [] options = { "Try Again" } ;
org/nlogo/app/FileMenu.java:1014:			String message = "You must choose a name ending with: .nlogo" ;
org/nlogo/app/FileMenu.java-1015-			org.nlogo.swing.OptionDialog.show
org/nlogo/app/FileMenu.java:1016:				( this , "Error" , message, options ) ;
org/nlogo/app/FileMenu.java-1017-		}
org/nlogo/app/FileMenu.java-1018-	}
org/nlogo/app/FileMenu.java-1021-		throws UserCancelException
org/nlogo/app/FileMenu.java-1022-	{
org/nlogo/app/FileMenu.java:1023:		String [] options = { "Save" , "Discard" , "Cancel" } ;
org/nlogo/app/FileMenu.java:1024:		String message = "Do you want to save the changes you made to this model?" ;
org/nlogo/app/FileMenu.java-1025-		switch( org.nlogo.swing.OptionDialog.show
org/nlogo/app/FileMenu.java:1026:				( this , "NetLogo" , message , options ) )
org/nlogo/app/FileMenu.java-1027-		{
org/nlogo/app/FileMenu.java-1028-			case 0 :
org/nlogo/app/FileMenu.java-1040-		if( ! org.nlogo.api.Version.compatibleVersion( savedVersion ) )
org/nlogo/app/FileMenu.java-1041-	    {
org/nlogo/app/FileMenu.java:1042:			String [] options = { "Save", "Cancel" } ;
org/nlogo/app/FileMenu.java:1043:			String message = "This model was made with " + savedVersion + ". "
org/nlogo/app/FileMenu.java:1044:				+ "If you save it in " + org.nlogo.api.Version.version()
org/nlogo/app/FileMenu.java:1045:				+ " it may not work in the old version anymore." ;
org/nlogo/app/FileMenu.java-1046-			if( org.nlogo.swing.OptionDialog.show
org/nlogo/app/FileMenu.java:1047:				( this, "NetLogo", message, options ) != 0 )
org/nlogo/app/FileMenu.java-1048-			{
org/nlogo/app/FileMenu.java-1049-				throw new UserCancelException() ;
org/nlogo/app/FileMenu.java-1055-		throws UserCancelException
org/nlogo/app/FileMenu.java-1056-	{
org/nlogo/app/FileMenu.java:1057:		String [] options = { "Continue", "Cancel" } ;
org/nlogo/app/FileMenu.java:1058:		String message = "You are attempting to open a model that was created" +
org/nlogo/app/FileMenu.java:1059:			" in a newer version of NetLogo.  (This is " +
org/nlogo/app/FileMenu.java-1060-			org.nlogo.api.Version.version() + "; " +
org/nlogo/app/FileMenu.java:1061:			"the model was created in " + version + ".) " +
org/nlogo/app/FileMenu.java:1062:			"NetLogo can try to open the model, but it may " +
org/nlogo/app/FileMenu.java:1063:			"or may not work." ;
org/nlogo/app/FileMenu.java-1064-		if( org.nlogo.swing.OptionDialog.show
org/nlogo/app/FileMenu.java:1065:			( this, "NetLogo", message, options ) != 0 )
org/nlogo/app/FileMenu.java-1066-		{
org/nlogo/app/FileMenu.java-1067-			throw new UserCancelException() ;
org/nlogo/app/FileMenu.java-1072-		throws UserCancelException
org/nlogo/app/FileMenu.java-1073-	{
org/nlogo/app/FileMenu.java:1074:		String [] options = { "Continue", "Cancel" } ;
org/nlogo/app/FileMenu.java:1075:		String message = "You are attempting to open a model that was created" +
org/nlogo/app/FileMenu.java:1076:			" in a 3D version of NetLogo.  (This is " +
org/nlogo/app/FileMenu.java-1077-			org.nlogo.api.Version.version() + "; " +
org/nlogo/app/FileMenu.java:1078:			"the model was created in " + version + ".) " +
org/nlogo/app/FileMenu.java:1079:			"NetLogo can try to open the model, but it may " +
org/nlogo/app/FileMenu.java:1080:			"or may not work." ;
org/nlogo/app/FileMenu.java-1081-		if( org.nlogo.swing.OptionDialog.show
org/nlogo/app/FileMenu.java:1082:			( this, "NetLogo", message, options ) != 0 )
org/nlogo/app/FileMenu.java-1083-		{
org/nlogo/app/FileMenu.java-1084-			throw new UserCancelException() ;
org/nlogo/app/FileMenu.java-1089-		throws UserCancelException
org/nlogo/app/FileMenu.java-1090-	{
org/nlogo/app/FileMenu.java:1091:		String [] options = { "Continue", "Cancel" } ;
org/nlogo/app/FileMenu.java:1092:		String message = "You are attempting to open a 2D model in " +
org/nlogo/app/FileMenu.java-1093-			org.nlogo.api.Version.version() + ". " +
org/nlogo/app/FileMenu.java:1094:			"You might need to make changes before it will work in 3D." ;
org/nlogo/app/FileMenu.java-1095-		if( org.nlogo.swing.OptionDialog.show
org/nlogo/app/FileMenu.java:1096:			( this, "NetLogo", message, options ) != 0 )
org/nlogo/app/FileMenu.java-1097-		{
org/nlogo/app/FileMenu.java-1098-			throw new UserCancelException() ;
org/nlogo/app/FileMenu.java-1103-		throws UserCancelException
org/nlogo/app/FileMenu.java-1104-	{
org/nlogo/app/FileMenu.java-1106-		org.nlogo.swing.OptionDialog.show
org/nlogo/app/FileMenu.java:1107:			( this, "NetLogo" ,
org/nlogo/app/FileMenu.java:1108:			  "The file is not a valid NetLogo model file." ,
org/nlogo/app/FileMenu.java-1109-			  options ) ;
org/nlogo/app/FileMenu.java-1110-		throw new UserCancelException() ;


org/nlogo/app/FindDialog.java-27-		if ( instance == null )
org/nlogo/app/FindDialog.java-28-		{
org/nlogo/app/FindDialog.java:29:			throw new IllegalStateException( "FindDialog was never initialized" ) ;  
org/nlogo/app/FindDialog.java-30-		}
org/nlogo/app/FindDialog.java-31-		return instance ; 
org/nlogo/app/FindDialog.java-164-		getRootPane().setDefaultButton( nextButton ) ;
org/nlogo/app/FindDialog.java-383-				if ( j > 50000 )
org/nlogo/app/FindDialog.java-384-				{
org/nlogo/app/FindDialog.java:385:					throw new IllegalStateException("Replace All replaced too many items.") ;
org/nlogo/app/FindDialog.java-386-				}
org/nlogo/app/FindDialog.java-387-			}
org/nlogo/app/HelpMenu.scala:40:  if(!System.getProperty("os.name").startsWith("Mac"))
org/nlogo/app/HelpMenu.scala-41-    addMenuItem(
org/nlogo/app/HelpMenu.scala:42:      action("About " + Version.version + "...",
org/nlogo/app/HelpMenu.scala-43-             app.showAboutWindow _))
org/nlogo/app/HelpMenu.scala-44-}
org/nlogo/app/HistoryPrompt.scala-26-
org/nlogo/app/HistoryPrompt.scala-27-  private def doPopupMenu() {
org/nlogo/app/HistoryPrompt.scala:28:    val popMenu = new javax.swing.JPopupMenu("History")
org/nlogo/app/HistoryPrompt.scala:54:      val noHistoryItem = new javax.swing.JMenuItem("<No History>")
org/nlogo/app/HistoryPrompt.scala:60:      val hintItem = new javax.swing.JMenuItem("or use up and down arrow keys")
org/nlogo/app/HistoryPrompt.scala:63:      val clearHistoryItem = new javax.swing.JMenuItem("Clear History")

org/nlogo/app/IncludesMenu.scala-4-
org/nlogo/app/IncludesMenu.scala-5-class IncludesMenu(target: ProceduresTab)
org/nlogo/app/IncludesMenu.scala:6:extends org.nlogo.swing.ToolBarMenu("Includes")
org/nlogo/app/IncludesMenu.scala:29:      val nullItem = new javax.swing.JMenuItem("<No Includes Defined>")
org/nlogo/app/IncludesMenu.scala:66:  extends javax.swing.AbstractAction("Open Source File...")
org/nlogo/app/IncludesMenu.scala-70-        val path = org.nlogo.swing.FileDialog.show(
org/nlogo/app/IncludesMenu.scala:71:            IncludesMenu.this, "Open: NetLogo Source File",
org/nlogo/app/IncludesMenu.scala:77:          javax.swing.JOptionPane.showMessageDialog(target, "Filename must end in *.nls")
org/nlogo/app/IncludesMenu.scala:87:  extends javax.swing.AbstractAction("New Source File") {


# looks like this was a """ string
org/nlogo/app/InfoTab.scala-60-
org/nlogo/app/InfoTab.scala-161-            |mean that it is formatted incorrectly. Click Help
org/nlogo/app/InfoTab.scala-162-            |to see documentation on using URLs in the Info Tab.""".stripMargin
org/nlogo/app/InfoTab.scala:163:        val selection = OptionDialog.show(Utils.getFrame(InfoTab.this), "Bad URL", message, Array("OK", "Help"))

org/nlogo/app/InterfacePanel.java-86-		menu.add( new javax.swing.JPopupMenu.Separator() ) ;
org/nlogo/app/InterfacePanel.java-87-		javax.swing.JMenuItem copyItem =
org/nlogo/app/InterfacePanel.java:88:			new javax.swing.JMenuItem( "Copy Interface" ) ;
org/nlogo/app/InterfacePanel.java-89-		copyItem.addActionListener
org/nlogo/app/InterfacePanel.java-90-			( new java.awt.event.ActionListener() {
org/nlogo/app/InterfacePanel.java-97-		menu.add( copyItem ) ;
org/nlogo/app/InterfacePanel.java-98-		javax.swing.JMenuItem exportItem =
org/nlogo/app/InterfacePanel.java:99:			new javax.swing.JMenuItem( "Export Interface..." ) ;
org/nlogo/app/InterfacePanel.java-105-							javax.swing.JOptionPane.showMessageDialog
org/nlogo/app/InterfacePanel.java-106-								( InterfacePanel.this , ex.getMessage() ,
org/nlogo/app/InterfacePanel.java:107:								  "Error", javax.swing.JOptionPane.ERROR_MESSAGE) ;
org/nlogo/app/InterfacePanel.java-202-		{
# this one looks like a devel error only.
org/nlogo/app/InterfacePanel.java-203-			throw new IllegalStateException
org/nlogo/app/InterfacePanel.java:204:				( "unknown widget type: " + type ) ;
org/nlogo/app/InterfacePanel.java-205-		}
org/nlogo/app/InterfacePanel.java-384-			final String exportPath =
org/nlogo/app/InterfacePanel.java-385-				org.nlogo.swing.FileDialog.show
org/nlogo/app/InterfacePanel.java:386:				( this , "Export Interface" ,
org/nlogo/app/InterfacePanel.java-387-				  java.awt.FileDialog.SAVE , 
org/nlogo/app/InterfacePanel.java:388:				  workspace.guessExportName( "interface.png" ) ) ;
org/nlogo/app/InterfacePanel.java-403-					  } } ,
org/nlogo/app/InterfacePanel.java:404:				  "Exporting..." ) ;

org/nlogo/app/InterfaceTab.scala:117:  private class CommandCenterLocationToggleAction extends AbstractAction("Toggle") {
org/nlogo/app/InterfaceTab.scala:118:    putValue(Action.SMALL_ICON,new ImageIcon(classOf[InterfaceTab].getResource("/images/toggle.gif")))
org/nlogo/app/InterfaceTab.scala-131-

org/nlogo/app/LinePrompt.scala:28:      val popMenu = new JPopupMenu("Ask who?")
org/nlogo/app/MacHandlers.scala:45:          "Error", javax.swing.JOptionPane.ERROR_MESSAGE)

org/nlogo/app/ModelsLibraryDialog.java-71-	javax.swing.Action toggleOrOpenAction =
org/nlogo/app/ModelsLibraryDialog.java:72:		new javax.swing.AbstractAction( "toggle-or-open" ) {
org/nlogo/app/ModelsLibraryDialog.java-73-			public void actionPerformed( java.awt.event.ActionEvent e ) {
org/nlogo/app/ModelsLibraryDialog.java-74-				if( selected.isFolder() ) 
org/nlogo/app/ModelsLibraryDialog.java-162-		inputMap.put
org/nlogo/app/ModelsLibraryDialog.java-163-			( javax.swing.KeyStroke.getKeyStroke( java.awt.event.KeyEvent.VK_SPACE , 0 ) ,
org/nlogo/app/ModelsLibraryDialog.java:164:			  "none" ) ; // don't let space bar toggle selection
org/nlogo/app/ModelsLibraryDialog.java-165-		inputMap.put
org/nlogo/app/ModelsLibraryDialog.java-166-			( javax.swing.KeyStroke.getKeyStroke( java.awt.event.KeyEvent.VK_ENTER , 0 ) ,
org/nlogo/app/ModelsLibraryDialog.java:167:			  "toggle-or-open" ) ;
org/nlogo/app/ModelsLibraryDialog.java:169:		tree.getActionMap().put( "toggle-or-open" , toggleOrOpenAction ) ;
org/nlogo/app/ModelsLibraryDialog.java-500-			textArea.setOpaque( false ) ;
org/nlogo/app/ModelsLibraryDialog.java-528-				// HTMLify the model description
org/nlogo/app/ModelsLibraryDialog.java-529-				textArea.setText( 
org/nlogo/app/ModelsLibraryDialog.java:530:						  "<html>\n"
org/nlogo/app/ModelsLibraryDialog.java:531:						+ "<head>\n"
org/nlogo/app/ModelsLibraryDialog.java:532:						+ "<style>body {font-family: Dialog; font-size: 12pt; }</style>" 
org/nlogo/app/ModelsLibraryDialog.java:533:						+ "</head>"
org/nlogo/app/ModelsLibraryDialog.java:534:						+ "<body>\n"
org/nlogo/app/ModelsLibraryDialog.java:535:						+ "<h2>" + selected.getName() + "</h2>\n" 
org/nlogo/app/ModelsLibraryDialog.java-536-						+ selected.getInfo() 
org/nlogo/app/ModelsLibraryDialog.java:537:						+ "</body>"
org/nlogo/app/ModelsLibraryDialog.java:538:						+ "</html>"
org/nlogo/app/ModelsLibraryDialog.java-539-					) ;

org/nlogo/app/ProceduresTab.scala:139:  def classDisplayName = "Procedures"

# would need to do this if we do prims
org/nlogo/app/SmartIndenter.scala-27-    if(List("e","n","d").contains(s.toLowerCase)) {
org/nlogo/app/SmartIndenter.scala-28-      val lineNum = code.offsetToLine(code.getSelectionStart)
org/nlogo/app/SmartIndenter.scala:29:      if(code.getLineOfText(lineNum).trim.equalsIgnoreCase("end"))
org/nlogo/app/SmartIndenter.scala-30-        handleCloseBracket()
org/nlogo/app/SmartIndenter.scala-31-    }
org/nlogo/app/SmartIndenter.scala-38-    val textUpToCursor = text.substring(0,code.getSelectionStart - lineStart)
org/nlogo/app/SmartIndenter.scala-39-    val wordUpToCursor = textUpToCursor.trim.toLowerCase
org/nlogo/app/SmartIndenter.scala:40:    if(List("]",")","end").contains(wordUpToCursor)) {
org/nlogo/app/SmartIndenter.scala-41-      val lineSpaceCount = countLeadingSpaces(textUpToCursor)
org/nlogo/app/SmartIndenter.scala-42-      val opener = findMatchingOpenerBackward(code.getText(0,code.getSelectionStart), 0)
org/nlogo/app/SmartIndenter.scala-68-    }
org/nlogo/app/SmartIndenter.scala-69-  }
org/nlogo/app/SmartIndenter.scala:70:  // None return means "leave it where it is"
org/nlogo/app/SmartIndenter.scala-71-  private def computeNewSpaces(currentLine:String,lineNum:Int):Option[Int] = {
org/nlogo/app/SmartIndenter.scala-72-    val token = compiler.getTokenAtPosition(currentLine, 0)
org/nlogo/app/SmartIndenter.scala-85-    // situation :) ev 1/22/08
org/nlogo/app/SmartIndenter.scala-86-    if(token != null && token.tyype == TokenType.KEYWORD ||
org/nlogo/app/SmartIndenter.scala:87:       token.name.equalsIgnoreCase("breed"))
org/nlogo/app/SmartIndenter.scala-88-      return Some(0)
org/nlogo/app/SmartIndenter.scala-89-    // if it's not one of the previous two cases the position probably depends at least one line
org/nlogo/app/SmartIndenter.scala-111-      getComment(tokens).foreach(tok => return Some(tok.startPos))
org/nlogo/app/SmartIndenter.scala-112-    var result = countLeadingSpaces(prevLine)
org/nlogo/app/SmartIndenter.scala:113:    // if there is such a previous line if it's got an "opener" that has no closer bump this line in
org/nlogo/app/SmartIndenter.scala-114-    if(totalValue(tokens) > 0)
org/nlogo/app/SmartIndenter.scala-115-      result += TAB_WIDTH
org/nlogo/app/SmartIndenter.scala-190-    t.tyype == TokenType.OPEN_BRACKET ||
org/nlogo/app/SmartIndenter.scala-191-    t.tyype == TokenType.KEYWORD &&
org/nlogo/app/SmartIndenter.scala:192:      (t.name.equalsIgnoreCase("to") || t.name.equalsIgnoreCase("to-report"))
org/nlogo/app/SmartIndenter.scala-193-  private def isCloser(t:Token) =
org/nlogo/app/SmartIndenter.scala-194-    t.tyype == TokenType.CLOSE_PAREN ||
org/nlogo/app/SmartIndenter.scala-195-    t.tyype == TokenType.CLOSE_BRACKET ||
org/nlogo/app/SmartIndenter.scala-196-    t.tyype == TokenType.KEYWORD &&
org/nlogo/app/SmartIndenter.scala:197:      t.name.equalsIgnoreCase("end")
org/nlogo/app/SmartIndenter.scala-198-}

org/nlogo/app/Splash.scala-29-      val date = Version.buildDate
org/nlogo/app/Splash.scala:30:      val version = "Version " + Version.versionNumberOnly
org/nlogo/app/Splash.scala-31-      // hopefully avoid confusion where semi-devel people report bugs in versions that aren't
org/nlogo/app/Splash.scala-32-      // finished yet -- don't foreground the version number to them - ST 2/27/06
org/nlogo/app/Splash.scala:33:      if(date.startsWith("INTERIM DEVEL BUILD"))
org/nlogo/app/Splash.scala-34-        date
org/nlogo/app/Splash.scala-35-      else version


org/nlogo/app/Tabs.scala-173-
org/nlogo/app/Tabs.scala:174:  val printAction = PimpedAction("print-current-tab") { _ =>
org/nlogo/app/Tabs.scala-175-    currentTab match {
org/nlogo/app/Tabs.scala-176-      case printable: org.nlogo.swing.Printable =>

org/nlogo/app/TemporaryProceduresTab.scala-7-
org/nlogo/app/TemporaryProceduresTab.scala-8-object TemporaryProceduresTab {
org/nlogo/app/TemporaryProceduresTab.scala:9:  val NewFile = "New File"
org/nlogo/app/TemporaryProceduresTab.scala-10-}
org/nlogo/app/TemporaryProceduresTab.scala-11-class TemporaryProceduresTab(workspace: AbstractWorkspace,
org/nlogo/app/TemporaryProceduresTab.scala-115-    while(true) {
org/nlogo/app/TemporaryProceduresTab.scala-116-      val path = org.nlogo.swing.FileDialog.show(
org/nlogo/app/TemporaryProceduresTab.scala:117:        this, "Save NetLogo Source File", java.awt.FileDialog.SAVE, newFileName)
org/nlogo/app/TemporaryProceduresTab.scala-118-      val file = new java.io.File(path)
org/nlogo/app/TemporaryProceduresTab.scala-119-      newFileName = file.getName
org/nlogo/app/TemporaryProceduresTab.scala:120:      val suffixIndex = newFileName.lastIndexOf(".nls")
org/nlogo/app/TemporaryProceduresTab.scala-121-      // make sure it ends with .nls and there's at least one character first.
org/nlogo/app/TemporaryProceduresTab.scala-122-      if(suffixIndex > 0 && suffixIndex == newFileName.size - 4)
org/nlogo/app/TemporaryProceduresTab.scala-125-      if(dotIndex != -1)
org/nlogo/app/TemporaryProceduresTab.scala-126-        newFileName = newFileName.substring(0, dotIndex)
org/nlogo/app/TemporaryProceduresTab.scala:127:      newFileName ++= ".nls"
org/nlogo/app/TemporaryProceduresTab.scala-128-      org.nlogo.swing.OptionDialog.show(
org/nlogo/app/TemporaryProceduresTab.scala:129:        this, "Error", "You must choose a name ending with: .nls",
org/nlogo/app/TemporaryProceduresTab.scala:130:        Array("Try Again"))
org/nlogo/app/TemporaryProceduresTab.scala-131-    }
org/nlogo/app/TemporaryProceduresTab.scala-132-    throw new IllegalStateException
org/nlogo/app/TemporaryProceduresTab.scala-135-  @throws(classOf[UserCancelException])
org/nlogo/app/TemporaryProceduresTab.scala-136-  private def userWantsToSaveFirst = {
org/nlogo/app/TemporaryProceduresTab.scala:137:    val options = Array[AnyRef]("Save", "Discard", "Cancel")
org/nlogo/app/TemporaryProceduresTab.scala:138:    val message = "Do you want to save the changes you made to " + filename + "?"
org/nlogo/app/TemporaryProceduresTab.scala:139:    org.nlogo.swing.OptionDialog.show(this, "Warning", message, options) match {
org/nlogo/app/TemporaryProceduresTab.scala-140-      case 0 => true
org/nlogo/app/TemporaryProceduresTab.scala-141-      case 1 => false
org/nlogo/app/TemporaryProceduresTab.scala-144-  }
org/nlogo/app/TemporaryProceduresTab.scala-145-
org/nlogo/app/TemporaryProceduresTab.scala:146:  private class FileCloseAction extends javax.swing.AbstractAction("Close") {
org/nlogo/app/TemporaryProceduresTab.scala-147-    override def actionPerformed(e: java.awt.event.ActionEvent) {
org/nlogo/app/TemporaryProceduresTab.scala-148-      close()
org/nlogo/app/ToolsMenu.scala-7-import org.nlogo.api.I18N
org/nlogo/app/ToolsMenu.scala-8-
org/nlogo/app/ToolsMenu.scala:9:class ToolsMenu(app: App) extends org.nlogo.swing.Menu(I18N.gui.get("menu.tools")) {
org/nlogo/app/ToolsMenu.scala-10-
org/nlogo/app/ToolsMenu.scala:11:  implicit val i18nName = I18N.Prefix("menu.tools")
org/nlogo/app/ToolsMenu.scala-12-  
org/nlogo/app/ToolsMenu.scala:13:  addMenuItem(I18N.gui("halt"), app.workspace.halt _)
org/nlogo/app/ToolsMenu.scala-14-  addSeparator()
org/nlogo/app/ToolsMenu.scala:15:  addMenuItem(I18N.gui("globalsMonitor"), () => app.workspace.inspectAgent(classOf[Observer]))
org/nlogo/app/ToolsMenu.scala:16:  addMenuItem(I18N.gui("turtleMonitor"), () => app.workspace.inspectAgent(classOf[Turtle]))
org/nlogo/app/ToolsMenu.scala:17:  addMenuItem(I18N.gui("patchMonitor"), () => app.workspace.inspectAgent(classOf[Patch]))
org/nlogo/app/ToolsMenu.scala:18:  addMenuItem(I18N.gui("linkMonitor"), () => app.workspace.inspectAgent(classOf[Link]))
org/nlogo/app/ToolsMenu.scala:19:  addMenuItem(I18N.gui("closeAllAgentMonitors"), app.workspace.closeAgentMonitors _)
org/nlogo/app/ToolsMenu.scala-20-  addSeparator()
org/nlogo/app/ToolsMenu.scala-21-  addMenuItem('/', app.tabs.interfaceTab.commandCenterAction)
org/nlogo/app/ToolsMenu.scala-22-  addSeparator() 
org/nlogo/app/ToolsMenu.scala:23:  addMenuItem(I18N.gui("3DView"), 'T', true, open3DView _)
org/nlogo/app/ToolsMenu.scala:24:  addMenuItem(I18N.gui("colorSwatches"), openColorDialog _)
org/nlogo/app/ToolsMenu.scala:25:  addMenuItem(I18N.gui("turtleShapesEditor"),
org/nlogo/app/ToolsMenu.scala:26:              () => app.turtleShapesManager.init(I18N.gui("turtleShapesEditor")))
org/nlogo/app/ToolsMenu.scala:27:  addMenuItem(I18N.gui("linkShapesEditor"),
org/nlogo/app/ToolsMenu.scala:28:              () => app.linkShapesManager.init(I18N.gui("linkShapesEditor")))
org/nlogo/app/ToolsMenu.scala:29:  addMenuItem(I18N.gui("behaviorSpace"), 'B', true, () => app.labManager.show())
org/nlogo/app/ToolsMenu.scala:30:  addMenuItem(I18N.gui("systemDynamicsModeler"), 'D', true, app.aggregateManager.showEditor _)
org/nlogo/app/ToolsMenu.scala-31-  addSeparator()
org/nlogo/app/ToolsMenu.scala:32:  addMenuItem(I18N.gui("hubNetClientEditor"), openHubNetClientEditor _)
org/nlogo/app/ToolsMenu.scala-33-  addMenuItem('H', true, app.workspace.hubNetControlCenterAction)
org/nlogo/app/ToolsMenu.scala-34-
org/nlogo/app/ToolsMenu.scala-52-    catch {
org/nlogo/app/ToolsMenu.scala-53-      case ex: org.nlogo.window.JOGLLoadingException =>
org/nlogo/app/ToolsMenu.scala:54:        org.nlogo.swing.Utils.alert("3D", ex.getMessage, "" + ex.getCause)     
org/nlogo/app/ToolsMenu.scala-55-    }        
org/nlogo/app/ToolsMenu.scala-56-  }
org/nlogo/app/WidgetPanel.java-152-		}
org/nlogo/app/WidgetPanel.java-153-		if( ! savingAsApplet &&
org/nlogo/app/WidgetPanel.java:154:			System.getProperty( "os.name" ).startsWith( "Mac" ) &&
org/nlogo/app/WidgetPanel.java:155:			System.getProperty( "os.version" ).startsWith( "10.2" ) )
org/nlogo/app/WidgetPanel.java-156-		{
org/nlogo/app/WidgetPanel.java-157-			// allow for the intrusion of the window grow box into the
org/nlogo/app/WidgetPanel.java-395-		javax.swing.JPopupMenu menu = new javax.swing.JPopupMenu() ;
org/nlogo/app/WidgetPanel.java-396-		menu.add( new WidgetCreationMenuItem
org/nlogo/app/WidgetPanel.java:397:				  ( "Button" , e.getX() , e.getY() ) ) ;
org/nlogo/app/WidgetPanel.java-398-		menu.add( new WidgetCreationMenuItem
org/nlogo/app/WidgetPanel.java:399:				  ( "Slider" , e.getX() , e.getY() ) ) ;
org/nlogo/app/WidgetPanel.java-400-		menu.add( new WidgetCreationMenuItem
org/nlogo/app/WidgetPanel.java:401:				  ( "Switch" , e.getX() , e.getY() ) ) ;
org/nlogo/app/WidgetPanel.java-402-		menu.add( new WidgetCreationMenuItem
org/nlogo/app/WidgetPanel.java:403:				  ( "Chooser" , e.getX() , e.getY() ) ) ;
org/nlogo/app/WidgetPanel.java-404-		menu.add( new WidgetCreationMenuItem
org/nlogo/app/WidgetPanel.java:405:				  ( "Input" , e.getX() , e.getY() ) ) ;
org/nlogo/app/WidgetPanel.java-406-		menu.add( new WidgetCreationMenuItem
org/nlogo/app/WidgetPanel.java:407:				  ( "Monitor" ,e.getX() , e.getY() ) ) ;
org/nlogo/app/WidgetPanel.java-408-		menu.add( new WidgetCreationMenuItem
org/nlogo/app/WidgetPanel.java:409:				  ( "Plot" , e.getX() , e.getY() ) ) ;
org/nlogo/app/WidgetPanel.java-410-		menu.add( new WidgetCreationMenuItem
org/nlogo/app/WidgetPanel.java:411:				  ( "Note" , e.getX() , e.getY() ) ) ;
org/nlogo/app/WidgetPanel.java-412-				  
org/nlogo/app/WidgetPanel.java-413-		menu.show( this , e.getX() , e.getY() ) ;
org/nlogo/app/WidgetPanel.java-450-	public Widget makeWidget( String type , boolean loading )
org/nlogo/app/WidgetPanel.java-451-	{
org/nlogo/app/WidgetPanel.java:452:		type = "DUMMY " + type.toUpperCase() ;
org/nlogo/app/WidgetPanel.java-453-		Widget fromRegistry = org.nlogo.window.WidgetRegistry.apply( type ) ;
org/nlogo/app/WidgetPanel.java-454-		if( fromRegistry != null )
org/nlogo/app/WidgetPanel.java-456-			return fromRegistry ;
org/nlogo/app/WidgetPanel.java-457-		}
org/nlogo/app/WidgetPanel.java:458:		else if( type.equals( "DUMMY SLIDER" ) )
org/nlogo/app/WidgetPanel.java-459-		{
org/nlogo/app/WidgetPanel.java-460-			return new org.nlogo.window.DummySliderWidget() ;
org/nlogo/app/WidgetPanel.java-461-		}
org/nlogo/app/WidgetPanel.java:462:		else if( type.equals( "DUMMY CHOOSER" ) || // current name
org/nlogo/app/WidgetPanel.java:463:				 type.equals( "DUMMY CHOICE" ) )   // old name, used in old models
org/nlogo/app/WidgetPanel.java-464-		{
org/nlogo/app/WidgetPanel.java-465-			return new org.nlogo.window.DummyChooserWidget
org/nlogo/app/WidgetPanel.java-466-				( new org.nlogo.nvm.DefaultCompilerServices( workspace.compiler() ) ) ;
org/nlogo/app/WidgetPanel.java-467-		}
org/nlogo/app/WidgetPanel.java:468:		else if( type.equals( "DUMMY BUTTON" ) )
org/nlogo/app/WidgetPanel.java-469-		{
org/nlogo/app/WidgetPanel.java-470-			return new org.nlogo.window.DummyButtonWidget() ;
org/nlogo/app/WidgetPanel.java-471-		}
org/nlogo/app/WidgetPanel.java:472:		else if( type.equals( "DUMMY PLOT" ) )
org/nlogo/app/WidgetPanel.java-473-		{
org/nlogo/app/WidgetPanel.java-474-			// note that plots on the HubNet client must have the name of a plot
org/nlogo/app/WidgetPanel.java-484-			else
org/nlogo/app/WidgetPanel.java-485-			{
org/nlogo/app/WidgetPanel.java:486:				return new DummyPlotWidget( "plot 1" , workspace.plotManager()) ;
org/nlogo/app/WidgetPanel.java-487-			}
org/nlogo/app/WidgetPanel.java-488-		}
org/nlogo/app/WidgetPanel.java:489:		else if( type.equals( "DUMMY MONITOR" ) )
org/nlogo/app/WidgetPanel.java-490-		{
org/nlogo/app/WidgetPanel.java-491-			return new org.nlogo.window.DummyMonitorWidget() ;
org/nlogo/app/WidgetPanel.java-492-		}
org/nlogo/app/WidgetPanel.java:493:		else if( type.equals( "DUMMY INPUT" ) ||  // in the GUI, it's "Input Box"
org/nlogo/app/WidgetPanel.java:494:				 type.equals( "DUMMY INPUTBOX" ) )  // in saved models, it's "INPUTBOX"
org/nlogo/app/WidgetPanel.java-495-		{	
org/nlogo/app/WidgetPanel.java-496-			java.awt.Font font = new java.awt.Font( org.nlogo.awt.Utils.platformMonospacedFont() ,
org/nlogo/app/WidgetPanel.java-503-				  this , new org.nlogo.nvm.DefaultCompilerServices( workspace.compiler() ) ) ;
org/nlogo/app/WidgetPanel.java-504-		}
org/nlogo/app/WidgetPanel.java:505:		else if( type.equals( "DUMMY OUTPUT" ) )  // currently in saved models only - ST 3/17/04
org/nlogo/app/WidgetPanel.java-506-		{
org/nlogo/app/WidgetPanel.java-507-			return new org.nlogo.window.OutputWidget() ;
org/nlogo/app/WidgetPanel.java-508-		}
org/nlogo/app/WidgetPanel.java:509:		else if( type.equals( "DUMMY CC-WINDOW" ) ) // definitely in saved models only
org/nlogo/app/WidgetPanel.java-510-		{
org/nlogo/app/WidgetPanel.java-511-			// in current NetLogo versions, the command center goes in
org/nlogo/app/WidgetPanel.java-514-			return null ;
org/nlogo/app/WidgetPanel.java-515-		}
org/nlogo/app/WidgetPanel.java:516:		else if( type.equals( "DUMMY GRAPHICS-WINDOW" ) || type.equals("DUMMY VIEW") || type.equals( "VIEW" ) )
org/nlogo/app/WidgetPanel.java-517-		{
org/nlogo/app/WidgetPanel.java-518-			view = new org.nlogo.window.DummyViewWidget( workspace.world ) ;
org/nlogo/app/WidgetPanel.java-522-		{
org/nlogo/app/WidgetPanel.java-523-			throw new IllegalStateException
org/nlogo/app/WidgetPanel.java:524:				( "unknown widget type: " + type ) ;
org/nlogo/app/WidgetPanel.java-525-		}
org/nlogo/app/WidgetPanel.java-526-	}
org/nlogo/app/WidgetPanel.java-1005-	public boolean canAddWidget( String widget )
org/nlogo/app/WidgetPanel.java-1006-	{
org/nlogo/app/WidgetPanel.java:1007:		if( widget.equals( "View" ) )
org/nlogo/app/WidgetPanel.java-1008-		{
org/nlogo/app/WidgetPanel.java-1009-			return ! hasView() ;
org/nlogo/app/WidgetPanel.java-1010-		}
org/nlogo/app/WidgetPanel.java:1011:		else if( widget.equals( "Plot" ) )
org/nlogo/app/WidgetPanel.java-1012-		{
org/nlogo/app/WidgetPanel.java-1013-			// you can't add a plot to the client interface unless
org/nlogo/app/WidgetWrapper.java-982-		{
org/nlogo/app/WidgetWrapper.java-983-			javax.swing.JMenuItem editItem = 
org/nlogo/app/WidgetWrapper.java:984:				new javax.swing.JMenuItem( "Edit..." ) ;
org/nlogo/app/WidgetWrapper.java-985-			editItem.addActionListener
org/nlogo/app/WidgetWrapper.java-986-				( new java.awt.event.ActionListener() {
org/nlogo/app/WidgetWrapper.java-996-		{
org/nlogo/app/WidgetWrapper.java-997-			javax.swing.JMenuItem unselectItem = 
org/nlogo/app/WidgetWrapper.java:998:				new javax.swing.JMenuItem( "Unselect" ) ;
org/nlogo/app/WidgetWrapper.java-999-			unselectItem.addActionListener
org/nlogo/app/WidgetWrapper.java-1000-				( new java.awt.event.ActionListener() {
org/nlogo/app/WidgetWrapper.java-1008-		{
org/nlogo/app/WidgetWrapper.java-1009-			javax.swing.JMenuItem selectItem = 
org/nlogo/app/WidgetWrapper.java:1010:				new javax.swing.JMenuItem( "Select" ) ;
org/nlogo/app/WidgetWrapper.java-1011-			selectItem.addActionListener
org/nlogo/app/WidgetWrapper.java-1012-				( new java.awt.event.ActionListener() {
org/nlogo/app/WidgetWrapper.java-1020-		{
org/nlogo/app/WidgetWrapper.java-1021-			javax.swing.JMenuItem deleteItem = 
org/nlogo/app/WidgetWrapper.java:1022:				new javax.swing.JMenuItem( "Delete" ) ;
org/nlogo/app/WidgetWrapper.java-1023-			deleteItem.addActionListener
org/nlogo/app/WidgetWrapper.java-1024-				( new java.awt.event.ActionListener() {
org/nlogo/app/WidgetWrapper.java-1036-			{
org/nlogo/app/WidgetWrapper.java-1037-				javax.swing.JMenuItem exportItem =
org/nlogo/app/WidgetWrapper.java:1038:					new javax.swing.JMenuItem( "Export..." ) ;
org/nlogo/app/WidgetWrapper.java-1039-				exportItem.addActionListener
org/nlogo/app/WidgetWrapper.java-1040-					( new java.awt.event.ActionListener() {
org/nlogo/app/WidgetWrapper.java-1043-								{
org/nlogo/app/WidgetWrapper.java-1044-									String exportPath = org.nlogo.swing.FileDialog.show
org/nlogo/app/WidgetWrapper.java:1045:										( widget() , "Export" ,
org/nlogo/app/WidgetWrapper.java-1046-										  java.awt.FileDialog.SAVE , 
org/nlogo/app/WidgetWrapper.java-1047-										  interfacePanel.workspace().guessExportName
org/nlogo/app/WindowBar.java-53-				break ;
org/nlogo/app/WindowBar.java-54-			default:
org/nlogo/app/WindowBar.java:55:				throw new IllegalStateException( "type = " + type ) ;
org/nlogo/app/WindowBar.java-56-		}
org/nlogo/app/WindowBar.java-57-	}
org/nlogo/app/ZoomMenu.scala-4-// note that multiple instances of this class may exist as there are now multiple frames that each
org/nlogo/app/ZoomMenu.scala-5-// have their own menu bar and menus  ev 8/25/05
org/nlogo/app/ZoomMenu.scala:6:private class ZoomMenu(app:App) extends org.nlogo.swing.Menu(I18N.gui.get("menu.zoom")) {
org/nlogo/app/ZoomMenu.scala-7-
org/nlogo/app/ZoomMenu.scala:8:  implicit val i18nName = I18N.Prefix("menu.zoom")
org/nlogo/app/ZoomMenu.scala-9-  
org/nlogo/app/ZoomMenu.scala:10:  addMenuItem('=',new javax.swing.AbstractAction(I18N.gui("larger")) {
org/nlogo/app/ZoomMenu.scala-11-    def actionPerformed(e:java.awt.event.ActionEvent) {
org/nlogo/app/ZoomMenu.scala-12-      app.zoomLarger()
org/nlogo/app/ZoomMenu.scala-13-    }})
org/nlogo/app/ZoomMenu.scala:14:  addMenuItem('0',new javax.swing.AbstractAction(I18N.gui("normalSize")) {
org/nlogo/app/ZoomMenu.scala-15-    def actionPerformed(e:java.awt.event.ActionEvent) {
org/nlogo/app/ZoomMenu.scala-16-      app.resetZoom()
org/nlogo/app/ZoomMenu.scala-17-    }})
org/nlogo/app/ZoomMenu.scala:18:  addMenuItem('-',new javax.swing.AbstractAction(I18N.gui("smaller")) {
org/nlogo/app/ZoomMenu.scala-19-    def actionPerformed(e:java.awt.event.ActionEvent) {
org/nlogo/app/ZoomMenu.scala-20-      app.zoomSmaller()
org/nlogo/awt/JMFMovieEncoder.java-30-* related data with or without modifications, or as part of a larger work;
org/nlogo/awt/JMFMovieEncoder.java-31-* and under patents now or hereafter owned or controlled by the Authors, to
org/nlogo/awt/JMFMovieEncoder.java:32:* make, have made, use and sell ("Utilize") all or any portion of the source
org/nlogo/awt/JMFMovieEncoder.java-33-* code or binary form of this software or related data, but solely to the
org/nlogo/awt/JMFMovieEncoder.java-34-* extent that any such patent is reasonably necessary to enable you to
org/nlogo/awt/JMFMovieEncoder.java-51-* 
org/nlogo/awt/JMFMovieEncoder.java-52-* 
org/nlogo/awt/JMFMovieEncoder.java:53:* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
org/nlogo/awt/JMFMovieEncoder.java-54-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
org/nlogo/awt/JMFMovieEncoder.java-55-* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
org/nlogo/awt/JMFMovieEncoder.java-71- * Copyright (c) 1999-2001 Sun Microsystems, Inc. All Rights Reserved.
org/nlogo/awt/JMFMovieEncoder.java-72- *
org/nlogo/awt/JMFMovieEncoder.java:73: * Sun grants you ("Licensee") a non-exclusive, royalty free, license to use,
org/nlogo/awt/JMFMovieEncoder.java-74- * modify and redistribute this software in source and binary code form,
org/nlogo/awt/JMFMovieEncoder.java-75- * provided that i) this copyright notice and license appear on all copies of
org/nlogo/awt/JMFMovieEncoder.java-77- * which is disparaging to Sun.
org/nlogo/awt/JMFMovieEncoder.java-78- *
org/nlogo/awt/JMFMovieEncoder.java:79: * This software is provided "AS IS," without a warranty of any kind. ALL
org/nlogo/awt/JMFMovieEncoder.java-80- * EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND WARRANTIES, INCLUDING ANY
org/nlogo/awt/JMFMovieEncoder.java-81- * IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
org/nlogo/awt/JMFMovieEncoder.java-173-		if ( isSetup )
org/nlogo/awt/JMFMovieEncoder.java-174-		{
org/nlogo/awt/JMFMovieEncoder.java:175:			throw new IOException("Can't set framerate after setup");
org/nlogo/awt/JMFMovieEncoder.java-176-		}
org/nlogo/awt/JMFMovieEncoder.java-177-
org/nlogo/awt/JMFMovieEncoder.java-239-			if ( !waitForState(processor, Processor.Configured) )
org/nlogo/awt/JMFMovieEncoder.java-240-			{
org/nlogo/awt/JMFMovieEncoder.java:241:				throw new IOException( "JMFMovieEncoder error: Failed to configure processor" );
org/nlogo/awt/JMFMovieEncoder.java-242-			}
org/nlogo/awt/JMFMovieEncoder.java-243-			
org/nlogo/awt/JMFMovieEncoder.java-249-			Format f[] = tcs[0].getSupportedFormats();
org/nlogo/awt/JMFMovieEncoder.java-250-			
org/nlogo/awt/JMFMovieEncoder.java:251:			//System.out.println("Supported formats:");
org/nlogo/awt/JMFMovieEncoder.java-252-			//for (int j=0;j<f.length;j++) { System.out.println(f[j]); }
org/nlogo/awt/JMFMovieEncoder.java-253-			
org/nlogo/awt/JMFMovieEncoder.java-254-			if ( f == null || f.length <= 0 )
org/nlogo/awt/JMFMovieEncoder.java-255-			{
org/nlogo/awt/JMFMovieEncoder.java:256:				throw new IOException( "The mux does not support the input format: " + tcs[0].getFormat() );
org/nlogo/awt/JMFMovieEncoder.java-257-			}
org/nlogo/awt/JMFMovieEncoder.java-258-			tcs[0].setFormat( f[0] );
org/nlogo/awt/JMFMovieEncoder.java-259-			format = f[0];
org/nlogo/awt/JMFMovieEncoder.java-260-			
org/nlogo/awt/JMFMovieEncoder.java:261:			//System.out.println("Codecs for " + format + ":");
org/nlogo/awt/JMFMovieEncoder.java-262-			//Vector v =
org/nlogo/awt/JMFMovieEncoder.java-263-			//javax.media.PlugInManager.getPlugInList(format, null,
org/nlogo/awt/JMFMovieEncoder.java-270-			if ( !waitForState( processor, Controller.Realized ) )
org/nlogo/awt/JMFMovieEncoder.java-271-			{
org/nlogo/awt/JMFMovieEncoder.java:272:				throw new IOException( "Failed to realize processor");
org/nlogo/awt/JMFMovieEncoder.java-273-			}
org/nlogo/awt/JMFMovieEncoder.java-274-			
org/nlogo/awt/JMFMovieEncoder.java-287-			// we recast all media exceptions as ioexceptions since we don't want 
org/nlogo/awt/JMFMovieEncoder.java-288-			// any other NetLogo class to have to know about JMF
org/nlogo/awt/JMFMovieEncoder.java:289:			throw new IOException( "Cannot setup movie: " + ex );
org/nlogo/awt/JMFMovieEncoder.java-290-		}
org/nlogo/awt/JMFMovieEncoder.java-291-	}
org/nlogo/awt/JMFMovieEncoder.java-480-	// so for now, at least we make this a separate method so the
org/nlogo/awt/JMFMovieEncoder.java-481-	// SuppressWarnings annotation is narrowly targeted. - ST 12/7/09
org/nlogo/awt/JMFMovieEncoder.java:482:	@SuppressWarnings("deprecation")
org/nlogo/awt/JMFMovieEncoder.java-483-	private static java.net.URL toURL( java.io.File file )
org/nlogo/awt/JMFMovieEncoder.java-484-		throws java.net.MalformedURLException
org/nlogo/awt/JMFMovieEncoder.java-635-			catch (InterruptedException e) 
org/nlogo/awt/JMFMovieEncoder.java-636-			{ 
org/nlogo/awt/JMFMovieEncoder.java:637:				System.out.println("ugh.");
org/nlogo/awt/JMFMovieEncoder.java-638-			}
org/nlogo/awt/JMFMovieEncoder.java-639-		}  
org/nlogo/awt/UserCancelException.java-5-{
org/nlogo/awt/UserCancelException.java-6-	// no implementation differences in this class, we just want
org/nlogo/awt/UserCancelException.java:7:	// to be able to do "... instanceof UserCancelException"
org/nlogo/awt/UserCancelException.java-8-	// - ST 11/27/03
org/nlogo/awt/UserCancelException.java-9-}
org/nlogo/awt/Utils.java-23-						System.out.println
org/nlogo/awt/Utils.java-24-							( indent( level * 2 ) + comp.getClass() + ", " +
org/nlogo/awt/Utils.java:25:							  "bounds: " + comp.getBounds() ) ;
org/nlogo/awt/Utils.java-26-					} } ) ;
org/nlogo/awt/Utils.java-27-	}
org/nlogo/awt/Utils.java-438-	public static String platformFont()
org/nlogo/awt/Utils.java-439-	{
org/nlogo/awt/Utils.java:440:		if( System.getProperty( "os.name" ).startsWith( "Mac" ) )
org/nlogo/awt/Utils.java-441-		{
org/nlogo/awt/Utils.java:442:			return "Lucida Grande" ;
org/nlogo/awt/Utils.java-443-		}
org/nlogo/awt/Utils.java-444-		else
org/nlogo/awt/Utils.java-445-		{
org/nlogo/awt/Utils.java:446:			return "Sans-serif" ;
org/nlogo/awt/Utils.java-447-		}
org/nlogo/awt/Utils.java-448-	}
org/nlogo/awt/Utils.java-450-	public static String platformMonospacedFont()
org/nlogo/awt/Utils.java-451-	{
org/nlogo/awt/Utils.java:452:		if( System.getProperty( "os.name" ).startsWith( "Mac" ) )
org/nlogo/awt/Utils.java-453-		{
org/nlogo/awt/Utils.java:454:			return "Monaco" ;
org/nlogo/awt/Utils.java-455-		}
org/nlogo/awt/Utils.java:456:		else if( System.getProperty( "os.name" ).startsWith( "Windows" ) )
org/nlogo/awt/Utils.java-457-		{
org/nlogo/awt/Utils.java-458-			String[] fonts =
org/nlogo/awt/Utils.java-461-			for( int i = 0 ; i < fonts.length ; i++ )
org/nlogo/awt/Utils.java-462-			{
org/nlogo/awt/Utils.java:463:				if( fonts[ i ].equalsIgnoreCase( "Lucida Console" ) )
org/nlogo/awt/Utils.java-464-				{
org/nlogo/awt/Utils.java-465-					return fonts[ i ] ;
org/nlogo/awt/Utils.java-466-				}
org/nlogo/awt/Utils.java-467-			}
org/nlogo/awt/Utils.java:468:			return "Monospaced" ;
org/nlogo/awt/Utils.java-469-		}
org/nlogo/awt/Utils.java-470-		else
org/nlogo/awt/Utils.java-471-		{
org/nlogo/awt/Utils.java:472:			return "Monospaced" ;
org/nlogo/awt/Utils.java-473-	    }
org/nlogo/awt/Utils.java-474-	}
org/nlogo/awt/Utils.java-476-	public static void adjustDefaultFont( java.awt.Component comp )
org/nlogo/awt/Utils.java-477-	{
org/nlogo/awt/Utils.java:478:		if( System.getProperty( "os.name" ).startsWith( "Mac" ) )
org/nlogo/awt/Utils.java-479-		{
org/nlogo/awt/Utils.java-480-			comp.setFont
org/nlogo/awt/Utils.java-482-				  ( platformFont() , java.awt.Font.PLAIN , 11 ) ) ;
org/nlogo/awt/Utils.java-483-		}
org/nlogo/awt/Utils.java:484:		else if( ! ( System.getProperty( "os.name" ).startsWith( "Windows" ) ) )
org/nlogo/awt/Utils.java-485-		{
org/nlogo/awt/Utils.java-486-			comp.setFont
org/nlogo/awt/Utils.java-492-	public static void adjustDefaultMonospacedFont( java.awt.Component comp )
org/nlogo/awt/Utils.java-493-	{
org/nlogo/awt/Utils.java:494:		if( System.getProperty( "os.name" ).startsWith( "Mac" ) )
org/nlogo/awt/Utils.java-495-		{
org/nlogo/awt/Utils.java-496-			comp.setFont
org/nlogo/awt/Utils.java-506-		if( ! java.awt.EventQueue.isDispatchThread() )
org/nlogo/awt/Utils.java-507-		{
org/nlogo/awt/Utils.java:508:			throw new IllegalStateException( "not event thread: " + Thread.currentThread() ) ;
org/nlogo/awt/Utils.java-509-		}
org/nlogo/awt/Utils.java-510-	}
org/nlogo/awt/Utils.java-587-			( new java.awt.event.FocusListener() {
org/nlogo/awt/Utils.java-588-					public void focusGained( java.awt.event.FocusEvent fe ) {
org/nlogo/awt/Utils.java:589:						System.out.println( comp + " gained focus at " + System.nanoTime() ) ;
org/nlogo/awt/Utils.java:590:						System.out.println( "oppositeComponent = " + fe.getOppositeComponent() ) ;
org/nlogo/awt/Utils.java-591-					}
org/nlogo/awt/Utils.java-592-					public void focusLost( java.awt.event.FocusEvent fe ) {
org/nlogo/awt/Utils.java:593:						System.out.println( comp + " lost focus at " + System.nanoTime() ) ;
org/nlogo/awt/Utils.java:594:						System.out.println( "oppositeComponent = " + fe.getOppositeComponent() ) ;
org/nlogo/awt/Utils.java-595-					} } ) ;
org/nlogo/awt/Utils.java-596-	}
org/nlogo/awt/Utils.java-608-	{
org/nlogo/awt/Utils.java-609-		String str = 
org/nlogo/awt/Utils.java:610:			"<font color=\""
org/nlogo/awt/Utils.java-611-			+ "#"
org/nlogo/awt/Utils.java-612-			+ AWTColorToHex( c )
org/nlogo/awt/Utils.java-613-			+ "\">"
org/nlogo/awt/Utils.java-614-			+ s
org/nlogo/awt/Utils.java:615:			+ "</font>" ; 
org/nlogo/awt/Utils.java-616-		return str ; 
org/nlogo/awt/Utils.java-617-	}
org/nlogo/compiler/Assembler.scala-18-      case Procedure.Type.REPORTER => new _returnreport
org/nlogo/compiler/Assembler.scala-19-    }
org/nlogo/compiler/Assembler.scala:20:    ret.token(new Token("END",TokenType.KEYWORD,ret)(proc.endPos,proc.endPos,proc.fileName))
org/nlogo/compiler/Assembler.scala-21-    code += ret
org/nlogo/compiler/Assembler.scala-22-    for((cmd,n) <- code.toList.zipWithIndex) {
org/nlogo/compiler/AstNode.scala-95-/**
org/nlogo/compiler/AstNode.scala-96- * represents a chunk of zero or more NetLogo statements. Note that this is
org/nlogo/compiler/AstNode.scala:97: * not necessarily a "block" of statements, as block means something specific
org/nlogo/compiler/AstNode.scala-98- * (enclosed in [], in particular). This class is used to represent other 
org/nlogo/compiler/AstNode.scala-99- * groups of statements as well, for instance procedure bodies.
org/nlogo/compiler/AstNode.scala-130-  def self = args  // for SeqProxy
org/nlogo/compiler/AstNode.scala-131-  def addArgument(arg:Expression) { args.append(arg) }
org/nlogo/compiler/AstNode.scala:132:  override def toString = command.toString + "[" + args.mkString(", ") + "]"
org/nlogo/compiler/AstNode.scala-133-  def accept(v:AstVisitor) { v.visitStatement(this) }
org/nlogo/compiler/AstNode.scala-134-  def replaceArg(index:Int,expr:Expression) { args(index) = expr }
org/nlogo/compiler/AstNode.scala-145-{
org/nlogo/compiler/AstNode.scala-146-  def reportedType() = Syntax.TYPE_COMMAND_BLOCK ;
org/nlogo/compiler/AstNode.scala:147:  override def toString = "[" + statements.toString + "]"
org/nlogo/compiler/AstNode.scala-148-  def accept(v:AstVisitor) { v.visitCommandBlock(this) }
org/nlogo/compiler/AstNode.scala-149-}
org/nlogo/compiler/AstNode.scala-154- * jargon. Note that this is an Expression, and as such can be an argument
org/nlogo/compiler/AstNode.scala-155- * to commands and reporters, etc. However, it is a different expression from
org/nlogo/compiler/AstNode.scala:156: * the expression it contains... Its "blockness" is significant.
org/nlogo/compiler/AstNode.scala-157- */
org/nlogo/compiler/AstNode.scala-158-private class ReporterBlock(val app:ReporterApp,var start:Int,var end:Int,val file:String) extends Expression {
org/nlogo/compiler/AstNode.scala:159:  override def toString = "[" + app.toString() + "]"
org/nlogo/compiler/AstNode.scala-160-  def accept(v:AstVisitor) { v.visitReporterBlock(this) }
org/nlogo/compiler/AstNode.scala-161-  /**
org/nlogo/compiler/AstNode.scala-179-/**
org/nlogo/compiler/AstNode.scala-180- * represents a reporter application. This is the typical kind of NetLogo 
org/nlogo/compiler/AstNode.scala:181: * expression, things like "round 5" and "3 + 4". However, this class also
org/nlogo/compiler/AstNode.scala-182- * represents things like constants, which are converted into no-arg reporter
org/nlogo/compiler/AstNode.scala-183- * applications as they're parsed.
org/nlogo/compiler/AstNode.scala-192-  def instruction = reporter // for Application
org/nlogo/compiler/AstNode.scala-193-  def addArgument(arg:Expression) { args.append(arg) }
org/nlogo/compiler/AstNode.scala:194:  override def toString = reporter.toString + "[" + args.mkString(", ") + "]"
org/nlogo/compiler/AstNode.scala-195-  def reportedType() = reporter.getSyntax.ret
org/nlogo/compiler/AstNode.scala-196-  def accept(v:AstVisitor) { v.visitReporterApp(this) }
org/nlogo/compiler/AutoConverter1.scala-101-    while(tokens.hasNext) {
org/nlogo/compiler/AutoConverter1.scala-102-      var token:Token = tokens.next()
org/nlogo/compiler/AutoConverter1.scala:103:      if(token.name.equalsIgnoreCase("locals")) {
org/nlogo/compiler/AutoConverter1.scala-104-        val start:Int = token.startPos
org/nlogo/compiler/AutoConverter1.scala-105-        var replacement:String = ""
org/nlogo/compiler/AutoConverter1.scala-107-        while(!token.name.equals("]")) {
org/nlogo/compiler/AutoConverter1.scala-108-          if(!token.name.equals("["))
org/nlogo/compiler/AutoConverter1.scala:109:            replacement += "let " + token.name + " 0\n  "
org/nlogo/compiler/AutoConverter1.scala-110-          token = tokens.next()
org/nlogo/compiler/AutoConverter1.scala-111-        }
org/nlogo/compiler/AutoConverter1.scala-125-      val token = tokens.next()
org/nlogo/compiler/AutoConverter1.scala-126-      val name = token.name.toUpperCase
org/nlogo/compiler/AutoConverter1.scala:127:      if(name.startsWith("CREATE-CUSTOM-") || name.startsWith("CCT-")) {
org/nlogo/compiler/AutoConverter1.scala:128:        val prefixLength = if(name.startsWith("CREATE-CUSTOM-")) 14 else 4
org/nlogo/compiler/AutoConverter1.scala:129:        val replacement = "create-" + token.name.substring(prefixLength)
org/nlogo/compiler/AutoConverter1.scala-130-        val start = token.startPos + offset
org/nlogo/compiler/AutoConverter1.scala-131-        val end = token.endPos + offset
org/nlogo/compiler/AutoConverter1.scala-143-      val token = tokens.next()
org/nlogo/compiler/AutoConverter1.scala-144-      val name = token.name.toUpperCase
org/nlogo/compiler/AutoConverter1.scala:145:      if(name.startsWith("OTHER-") && name.endsWith("-HERE")) {
org/nlogo/compiler/AutoConverter1.scala-146-        buf.setCharAt(token.startPos + 5, ' ')
org/nlogo/compiler/AutoConverter1.scala-147-      }
org/nlogo/compiler/AutoConverter1.scala-157-    while(tokens.hasNext) {
org/nlogo/compiler/AutoConverter1.scala-158-      val token = tokens.next()
org/nlogo/compiler/AutoConverter1.scala:159:      if(token.name.startsWith("screen-edge-")) {
org/nlogo/compiler/AutoConverter1.scala-160-        var replacement:String = null
org/nlogo/compiler/AutoConverter1.scala-161-        var start = 0
org/nlogo/compiler/AutoConverter1.scala-165-          // parenthesis means that it's negative not subtracting so don't need to add the '+' sign.
org/nlogo/compiler/AutoConverter1.scala-166-          if(lastToken2.name == "(") {
org/nlogo/compiler/AutoConverter1.scala:167:            replacement = "screen-min-" + token.name.substring(12)
org/nlogo/compiler/AutoConverter1.scala-168-            // if it's enclosed we can get rid of them; perhaps this is unnecessary but we have to
org/nlogo/compiler/AutoConverter1.scala-169-            // check for them anyway so we might as well be neat.
org/nlogo/compiler/AutoConverter1.scala-178-          }
org/nlogo/compiler/AutoConverter1.scala-179-          else {
org/nlogo/compiler/AutoConverter1.scala:180:            replacement = "+ screen-min-" + token.name.substring(12)
org/nlogo/compiler/AutoConverter1.scala-181-            start = lastToken.startPos + offset
org/nlogo/compiler/AutoConverter1.scala-182-            end = token.endPos + offset
org/nlogo/compiler/AutoConverter1.scala-184-        }
org/nlogo/compiler/AutoConverter1.scala-185-        // subtracting from 0 also means it's screen min
org/nlogo/compiler/AutoConverter1.scala:186:        else if(lastToken2.name == "0" && lastToken.name == "-") {
org/nlogo/compiler/AutoConverter1.scala:187:          replacement = "screen-min-" + token.name.substring(12)
org/nlogo/compiler/AutoConverter1.scala-188-          start = lastToken2.startPos + offset
org/nlogo/compiler/AutoConverter1.scala-189-          end = token.endPos + offset
org/nlogo/compiler/AutoConverter1.scala-192-          // even if I've not covered every single case above a simple replace with edge -> max will
org/nlogo/compiler/AutoConverter1.scala-193-          // not break old models
org/nlogo/compiler/AutoConverter1.scala:194:          replacement = "screen-max-" + token.name.substring(12)
org/nlogo/compiler/AutoConverter1.scala-195-          start = token.startPos + offset
org/nlogo/compiler/AutoConverter1.scala-196-          end = token.endPos + offset
org/nlogo/compiler/AutoConverter1.scala-213-    while(tokens.hasNext) {
org/nlogo/compiler/AutoConverter1.scala-214-      var token:Token = tokens.next()
org/nlogo/compiler/AutoConverter1.scala:215:      if(token.tyype == TokenType.IDENT && token.value.asInstanceOf[String] .equals("BREEDS")) {
org/nlogo/compiler/AutoConverter1.scala-216-        val breeds = new collection.mutable.ArrayBuffer[String]
org/nlogo/compiler/AutoConverter1.scala-217-        val start:Int = token.startPos
org/nlogo/compiler/AutoConverter1.scala-228-          var i = 0
org/nlogo/compiler/AutoConverter1.scala-229-          while(i < breeds.size) {
org/nlogo/compiler/AutoConverter1.scala:230:            var replacement:String = "breed [ " + breeds(i) + " ]\n"
org/nlogo/compiler/AutoConverter1.scala-231-            buf.insert(start + offset, replacement)
org/nlogo/compiler/AutoConverter1.scala-232-            offset += replacement.length
org/nlogo/compiler/AutoConverter1.scala-246-    while(tokens.hasNext) {
org/nlogo/compiler/AutoConverter1.scala-247-      var token:Token = tokens.next()
org/nlogo/compiler/AutoConverter1.scala:248:      if(token.tyype == TokenType.IDENT && token.value.asInstanceOf[String] .equals("__EXTENSIONS")) {
org/nlogo/compiler/AutoConverter1.scala-249-        val extensions = new collection.mutable.ArrayBuffer[String]
org/nlogo/compiler/AutoConverter1.scala-250-        val start:Int = token.startPos
org/nlogo/compiler/AutoConverter1.scala-259-          // we do it this way to remove all the spaces too
org/nlogo/compiler/AutoConverter1.scala-260-          buf.delete(start, token.endPos)
org/nlogo/compiler/AutoConverter1.scala:261:          var replacement:String = "extensions [ "
org/nlogo/compiler/AutoConverter1.scala-262-          var i:Int = 0
org/nlogo/compiler/AutoConverter1.scala-263-          while(i < extensions.size) {
org/nlogo/compiler/AutoConverter1.scala-264-            var name:String = extensions(i)
org/nlogo/compiler/AutoConverter1.scala-265-            // trim off trailing .jar and double quote
org/nlogo/compiler/AutoConverter1.scala:266:            if(name.endsWith(".jar\"")) name = name.substring(0, name.length - 5)
org/nlogo/compiler/AutoConverter1.scala-267-            // trim off leading double quote
org/nlogo/compiler/AutoConverter1.scala-268-            if(name.startsWith("\"")) name = name.substring(1)
org/nlogo/compiler/AutoConverter1.scala-286-    while(tokens.hasNext) {
org/nlogo/compiler/AutoConverter1.scala-287-      var token:Token = tokens.next()
org/nlogo/compiler/AutoConverter1.scala:288:      if(token.tyype == TokenType.IDENT && (token.value.asInstanceOf[String] .equals("NSUM") || token.value.asInstanceOf[String] .equals("NSUM4"))) {
org/nlogo/compiler/AutoConverter1.scala:289:        val neighbors:String = if(token.value.asInstanceOf[String] .equals("NSUM")) "neighbors" else "neighbors4"
org/nlogo/compiler/AutoConverter1.scala-290-        var start:Int = token.startPos + offset
org/nlogo/compiler/AutoConverter1.scala-291-        var end:Int = token.endPos + offset
org/nlogo/compiler/AutoConverter1.scala:292:        val replacement:String = "sum values-from " + neighbors
org/nlogo/compiler/AutoConverter1.scala-293-        buf.delete(start, end)
org/nlogo/compiler/AutoConverter1.scala-294-        buf.insert(start, replacement)
org/nlogo/compiler/AutoConverter1.scala-314-    while(tokens.hasNext) {
org/nlogo/compiler/AutoConverter1.scala-315-      var token:Token = tokens.next()
org/nlogo/compiler/AutoConverter1.scala:316:      if(token.tyype == TokenType.IDENT && token.value.asInstanceOf[String] .endsWith("-OF")) {
org/nlogo/compiler/AutoConverter1.scala-317-        var name:String = token.name
org/nlogo/compiler/AutoConverter1.scala-318-        name = name.substring(0, name.length - 3)
org/nlogo/compiler/AutoConverter1.scala-319-        val start:Int = token.startPos + offset
org/nlogo/compiler/AutoConverter1.scala-320-        val end:Int = token.endPos + offset
org/nlogo/compiler/AutoConverter1.scala:321:        val replacement:String = "[" + name + "] of"
org/nlogo/compiler/AutoConverter1.scala-322-        buf.delete(start, end)
org/nlogo/compiler/AutoConverter1.scala-323-        buf.insert(start, replacement)
org/nlogo/compiler/AutoConverter1.scala-327-    buf.toString
org/nlogo/compiler/AutoConverter1.scala-328-  }
org/nlogo/compiler/AutoConverter1.scala:329:  private val CONVERSIONS1 = Map("pc" -> "pcolor",
org/nlogo/compiler/AutoConverter1.scala:330:                                 "pc-of" -> "[pcolor] of",
org/nlogo/compiler/AutoConverter1.scala:331:                                 "histogram" -> "histogram-from",
org/nlogo/compiler/AutoConverter1.scala:332:                                 "set-plot-pen" -> "create-temporary-plot-pen",
org/nlogo/compiler/AutoConverter1.scala:333:                                 "random" -> "random-or-random-float")
org/nlogo/compiler/AutoConverter1.scala:334:  private val CONVERSIONS2 = Map("any" -> "any?",
org/nlogo/compiler/AutoConverter1.scala:335:                                 "user-yes-or-no" -> "user-yes-or-no?")
org/nlogo/compiler/AutoConverter1.scala:336:  private val CONVERSIONS3 = Map("cc" -> "clear-output")
org/nlogo/compiler/AutoConverter1.scala:337:  private val CONVERSIONS4 = Map("pen-down?" -> "pen-mode != \"up\"")
org/nlogo/compiler/AutoConverter1.scala:338:  private val CONVERSIONS5 = Map("cg" -> "cp ct",
org/nlogo/compiler/AutoConverter1.scala:339:                                 "clear-graphics" -> "cp ct",
org/nlogo/compiler/AutoConverter1.scala:340:                                 "export-graphics" -> "export-view",
org/nlogo/compiler/AutoConverter1.scala:341:                                 "movie-grab-graphics" -> "movie-grab-view")
org/nlogo/compiler/AutoConverter1.scala:342:  private val CONVERSIONS6 = Map("stamp" -> "set pcolor")
org/nlogo/compiler/AutoConverter1.scala:343:  private val CONVERSIONS7 = Map("get-date-and-time" -> "date-and-time")
org/nlogo/compiler/AutoConverter1.scala:344:  private val CONVERSIONS8 = Map("screen-max-x" -> "max-pxcor",
org/nlogo/compiler/AutoConverter1.scala:345:                                 "screen-min-x" -> "min-pxcor",
org/nlogo/compiler/AutoConverter1.scala:346:                                 "screen-max-y" -> "max-pycor",
org/nlogo/compiler/AutoConverter1.scala:347:                                 "screen-min-y" -> "min-pycor",
org/nlogo/compiler/AutoConverter1.scala:348:                                 "screen-size-x" -> "world-width",
org/nlogo/compiler/AutoConverter1.scala:349:                                 "screen-size-y" -> "world-height",
org/nlogo/compiler/AutoConverter1.scala:350:                                 "no-label" -> "\"\"")
org/nlogo/compiler/AutoConverter1.scala:351:  private val CONVERSIONS9 = Map("random-one-of" -> "one-of",
org/nlogo/compiler/AutoConverter1.scala:352:                                 "random-n-of" -> "n-of")
org/nlogo/compiler/AutoConverter1.scala:353:  private val CONVERSIONS10 = Map("screen-min-z" -> "min-pzcor",
org/nlogo/compiler/AutoConverter1.scala:354:                                  "screen-max-z" -> "max-pzcor",
org/nlogo/compiler/AutoConverter1.scala:355:                                  "screen-size-z" -> "world-depth",
org/nlogo/compiler/AutoConverter1.scala:356:                                  "shape3d" -> "shape",
org/nlogo/compiler/AutoConverter1.scala:357:                                  "observe" -> "reset-perspective")
org/nlogo/compiler/AutoConverter1.scala:358:  private val CONVERSIONS11 = Map("user-choose-directory" -> "user-directory",
org/nlogo/compiler/AutoConverter1.scala:359:                                  "user-choose-file" -> "user-file",
org/nlogo/compiler/AutoConverter1.scala:360:                                  "user-choose-new-file" -> "user-new-file",
org/nlogo/compiler/AutoConverter1.scala:361:                                  "user-choice" -> "user-one-of")
org/nlogo/compiler/AutoConverter1.scala:362:  private val CONVERSIONS12 = Map("left" -> "set heading heading -",
org/nlogo/compiler/AutoConverter1.scala:363:                                  "right" -> "set heading heading +",
org/nlogo/compiler/AutoConverter1.scala:364:                                  "left3d" -> "left",
org/nlogo/compiler/AutoConverter1.scala:365:                                  "right3d" -> "right",
org/nlogo/compiler/AutoConverter1.scala:366:                                  "pitch-up" -> "set pitch pitch +",
org/nlogo/compiler/AutoConverter1.scala:367:                                  "pitch-down" -> "set pitch pitch -",
org/nlogo/compiler/AutoConverter1.scala:368:                                  "pitch-up3d" -> "tilt-up",
org/nlogo/compiler/AutoConverter1.scala:369:                                  "pitch-down3d" -> "tilt-down",
org/nlogo/compiler/AutoConverter1.scala:370:                                  "diffuse3d" -> "diffuse",
org/nlogo/compiler/AutoConverter1.scala:371:                                  "at-points3d" -> "at-points",
org/nlogo/compiler/AutoConverter1.scala:372:                                  "set-gaze-xyz" -> "facexyz",
org/nlogo/compiler/AutoConverter1.scala:373:                                  "patch-ahead3d" -> "patch-ahead",
org/nlogo/compiler/AutoConverter1.scala:374:                                  "screen-size-z" -> "world-depth",
org/nlogo/compiler/AutoConverter1.scala:375:                                  "patch-left3d-and-ahead" -> "patch-left-and-ahead",
org/nlogo/compiler/AutoConverter1.scala:376:                                  "patch-right3d-and-ahead" -> "patch-right-and-ahead",
org/nlogo/compiler/AutoConverter1.scala:377:                                  "patch3d" -> "patch",
org/nlogo/compiler/AutoConverter1.scala:378:                                  "patch-at3d" -> "patch-at",
org/nlogo/compiler/AutoConverter1.scala:379:                                  "turtles-at3d" -> "turtles-at")
org/nlogo/compiler/AutoConverter1.scala:380:  private val CONVERSIONS13 = Map("cct" -> "crt",
org/nlogo/compiler/AutoConverter1.scala:381:                                  "create-custom-turtles" -> "crt")
org/nlogo/compiler/AutoConverter1.scala:382:  private val CONVERSIONS14 = Map("histogram-list" -> "histogram",
org/nlogo/compiler/AutoConverter1.scala:383:                                  "random-int-or-float" -> "random-or-random-float")
org/nlogo/compiler/AutoConverter1.scala:384:  private val CONVERSIONS15 = Map("showturtle" -> "show-turtle",
org/nlogo/compiler/AutoConverter1.scala:385:                                  "hideturtle" -> "hide-turtle",
org/nlogo/compiler/AutoConverter1.scala:386:                                  "__both-ends" -> "both-ends",
org/nlogo/compiler/AutoConverter1.scala:387:                                  "__create-link-from" -> "create-link-from",
org/nlogo/compiler/AutoConverter1.scala:388:                                  "__create-links-from" -> "create-links-from",
org/nlogo/compiler/AutoConverter1.scala:389:                                  "__create-link-to" -> "create-link-to",
org/nlogo/compiler/AutoConverter1.scala:390:                                  "__create-links-to" -> "create-links-to",
org/nlogo/compiler/AutoConverter1.scala:391:                                  "__create-link-with" -> "create-link-with",
org/nlogo/compiler/AutoConverter1.scala:392:                                  "__create-links-with" -> "create-links-with",
org/nlogo/compiler/AutoConverter1.scala:393:                                  "__end1" -> "end1",
org/nlogo/compiler/AutoConverter1.scala:394:                                  "__end2" -> "end2",
org/nlogo/compiler/AutoConverter1.scala:395:                                  "__in-link-neighbor?" -> "in-link-neighbor?",
org/nlogo/compiler/AutoConverter1.scala:396:                                  "__in-link-neighbors" -> "in-link-neighbors",
org/nlogo/compiler/AutoConverter1.scala:397:                                  "__in-link-from" -> "in-link-from",
org/nlogo/compiler/AutoConverter1.scala:398:                                  "__is-link?" -> "is-link?",
org/nlogo/compiler/AutoConverter1.scala:399:                                  "__layout-circle" -> "layout-circle",
org/nlogo/compiler/AutoConverter1.scala:400:                                  "__layout-magspring" -> "layout-magspring",
org/nlogo/compiler/AutoConverter1.scala:401:                                  "__layout-radial" -> "layout-radial",
org/nlogo/compiler/AutoConverter1.scala:402:                                  "__layout-spring" -> "layout-spring",
org/nlogo/compiler/AutoConverter1.scala:403:                                  "__layout-tutte" -> "layout-tutte",
org/nlogo/compiler/AutoConverter1.scala:404:                                  "__link-neighbor?" -> "link-neighbor?",
org/nlogo/compiler/AutoConverter1.scala:405:                                  "__link-neighbors" -> "link-neighbors",
org/nlogo/compiler/AutoConverter1.scala:406:                                  "__link-with" -> "link-with",
org/nlogo/compiler/AutoConverter1.scala:407:                                  "__my-links" -> "my-links",
org/nlogo/compiler/AutoConverter1.scala:408:                                  "__my-in-links" -> "my-in-links",
org/nlogo/compiler/AutoConverter1.scala:409:                                  "__my-out-links" -> "my-out-links",
org/nlogo/compiler/AutoConverter1.scala:410:                                  "__other-end" -> "other-end",
org/nlogo/compiler/AutoConverter1.scala:411:                                  "__out-link-neighbor?" -> "out-link-neighbor?",
org/nlogo/compiler/AutoConverter1.scala:412:                                  "__out-link-neighbors" -> "out-link-neighbors",
org/nlogo/compiler/AutoConverter1.scala:413:                                  "__out-link-to" -> "out-link-to",
org/nlogo/compiler/AutoConverter1.scala:414:                                  "__remove-link-from" -> "remove-link-from",
org/nlogo/compiler/AutoConverter1.scala:415:                                  "__remove-links-from" -> "remove-links-from",
org/nlogo/compiler/AutoConverter1.scala:416:                                  "__remove-link-to" -> "remove-link-to",
org/nlogo/compiler/AutoConverter1.scala:417:                                  "__remove-links-to" -> "remove-links-to",
org/nlogo/compiler/AutoConverter1.scala:418:                                  "__remove-link-with" -> "remove-link-with",
org/nlogo/compiler/AutoConverter1.scala:419:                                  "__remove-links-with" -> "remove-links-with")
org/nlogo/compiler/AutoConverter1.scala:420:  private val CONVERSIONS16 = Map("plot-point" -> "plotxy",
org/nlogo/compiler/AutoConverter1.scala:421:                                  "message" -> "user-message",
org/nlogo/compiler/AutoConverter1.scala:422:                                  "showturtle" -> "show-turtle",
org/nlogo/compiler/AutoConverter1.scala:423:                                  "hideturtle" -> "hide-turtle",
org/nlogo/compiler/AutoConverter1.scala:424:                                  "face-no-wrap" -> "face-nowrap",
org/nlogo/compiler/AutoConverter1.scala:425:                                  "facexy-no-wrap" -> "facexy-nowrap",
org/nlogo/compiler/AutoConverter1.scala:426:                                  "distance-no-wrap" -> "distance-nowrap",
org/nlogo/compiler/AutoConverter1.scala:427:                                  "distancexy-no-wrap" -> "distancexy-nowrap",
org/nlogo/compiler/AutoConverter1.scala:428:                                  "in-cone-no-wrap" -> "in-cone-nowrap",
org/nlogo/compiler/AutoConverter1.scala:429:                                  "in-radius-no-wrap" -> "in-radius-nowrap",
org/nlogo/compiler/AutoConverter1.scala:430:                                  "towards-no-wrap" -> "towards-nowrap",
org/nlogo/compiler/AutoConverter1.scala:431:                                  "towardsxy-no-wrap" -> "towardsxy-nowrap",
org/nlogo/compiler/AutoConverter1.scala:432:                                  "agent?" -> "is-agent?",
org/nlogo/compiler/AutoConverter1.scala:433:                                  "agentset?" -> "is-agentset?",
org/nlogo/compiler/AutoConverter1.scala:434:                                  "boolean?" -> "is-boolean?",
org/nlogo/compiler/AutoConverter1.scala:435:                                  "list?" -> "is-list?",
org/nlogo/compiler/AutoConverter1.scala:436:                                  "number?" -> "is-number?",
org/nlogo/compiler/AutoConverter1.scala:437:                                  "patch?" -> "is-patch?",
org/nlogo/compiler/AutoConverter1.scala:438:                                  "string?" -> "is-string?",
org/nlogo/compiler/AutoConverter1.scala:439:                                  "turtle?" -> "is-turtle?")
org/nlogo/compiler/AutoConverter1.scala:440:  private val CONVERSIONS17 = Map("output" -> "report",
org/nlogo/compiler/AutoConverter1.scala:441:                                  "patch-agentset?" -> "is-patch-set?",
org/nlogo/compiler/AutoConverter1.scala:442:                                  "is-patch-agentset?" -> "is-patch-set?",
org/nlogo/compiler/AutoConverter1.scala:443:                                  "turtle-agentset?" -> "is-turtle-set?",
org/nlogo/compiler/AutoConverter1.scala:444:                                  "is-turtle-agentset?" -> "is-turtle-set?",
org/nlogo/compiler/AutoConverter1.scala:445:                                  "is-link-agentset?" -> "is-link-set?")
org/nlogo/compiler/AutoConverter1.scala:446:  private val CONVERSIONS18 = Map("ppd" -> "plot-pen-down",
org/nlogo/compiler/AutoConverter1.scala:447:                                  "ppu" -> "plot-pen-up",
org/nlogo/compiler/AutoConverter1.scala:448:                                  "__hubnet-ppd" -> "__hubnet-plot-pen-down",
org/nlogo/compiler/AutoConverter1.scala:449:                                  "__hubnet-ppu" -> "__hubnet-plot-pen-up")
org/nlogo/compiler/AutoConverter1.scala:450:  private val CONVERSIONS19 = Map("rgb" -> "approximate-rgb",
org/nlogo/compiler/AutoConverter1.scala:451:                                  "hsb" -> "approximate-hsb")
org/nlogo/compiler/AutoConverter1.scala:452:  private val CONVERSIONS20 = Map("__tie" -> "tie",
org/nlogo/compiler/AutoConverter1.scala:453:                                  "__untie" -> "untie")
org/nlogo/compiler/AutoConverter1.scala-454-
org/nlogo/compiler/AutoConverter1.scala:455:  private val CONVERSIONS21 = Map("setup-plots" -> "my-setup-plots",
org/nlogo/compiler/AutoConverter1.scala:456:                                  "update-plots" -> "my-update-plots")
org/nlogo/compiler/AutoConverter1.scala-457-}
org/nlogo/compiler/AutoConverter2.scala-55-  // So here's what we do.  At the time the procedures section
org/nlogo/compiler/AutoConverter2.scala-56-  // loads, convertValueAndValuesFrom invokes IdentifierParser in
org/nlogo/compiler/AutoConverter2.scala:57:  // "forgiving" mode, which means that any unknown identifier in
org/nlogo/compiler/AutoConverter2.scala-58-  // the procedures must refer to an interface global we haven't
org/nlogo/compiler/AutoConverter2.scala-59-  // seen yet.  This is enough to partially fill the Program object
org/nlogo/compiler/AutoConverter2.scala-78-  private def runVisitor(source:String, subprogram:Boolean, reporter:Boolean):String = {
org/nlogo/compiler/AutoConverter2.scala-79-    var preamble:String = ""
org/nlogo/compiler/AutoConverter2.scala:80:    val postamble:String = "\nend"
org/nlogo/compiler/AutoConverter2.scala-81-    var wrappedSource:String = null
org/nlogo/compiler/AutoConverter2.scala-82-    if(subprogram) {
org/nlogo/compiler/AutoConverter2.scala:83:      preamble = if(reporter) "to-report __convertValueAndValuesFrom report " else "to __convertValueAndValuesFrom "
org/nlogo/compiler/AutoConverter2.scala-84-      wrappedSource = preamble + source + postamble
org/nlogo/compiler/AutoConverter2.scala-85-    }
org/nlogo/compiler/AutoConverter2.scala-91-    val identifierParser:IdentifierParser = new IdentifierParser(workspace.world.program, workspace.getProcedures,
org/nlogo/compiler/AutoConverter2.scala-92-                                                                 results.procedures, true )
org/nlogo/compiler/AutoConverter2.scala:93:                          // true = parse in "forgiving" mode, in which any
org/nlogo/compiler/AutoConverter2.scala-94-                          // unknown identifiers are assumed to be global
org/nlogo/compiler/AutoConverter2.scala-95-                          // variables (i.e., sliders/switches/choices that we
org/nlogo/compiler/AutoConverter2.scala-126-   * becomes: [color] of turtles
org/nlogo/compiler/AutoConverter2.scala-127-   * through two replacements:
org/nlogo/compiler/AutoConverter2.scala:128:   *   new Replacement( ... , "values-from" , "[color] of" )
org/nlogo/compiler/AutoConverter2.scala:129:   *   new Replacement( ... , " [color]" , "" )
org/nlogo/compiler/AutoConverter2.scala-130-
org/nlogo/compiler/AutoConverter2.scala-131-   * The reason we do it in two replacements instead of one is to avoid damage to whitespace and/or
org/nlogo/compiler/AutoConverter2.scala-148-                                          app.reporter.token.endPos,
org/nlogo/compiler/AutoConverter2.scala-149-                                          app.reporter.token.name,
org/nlogo/compiler/AutoConverter2.scala:150:                                          source.substring(arg1.start,arg1.end) + " of")
org/nlogo/compiler/AutoConverter2.scala-151-          var start = arg1.start
org/nlogo/compiler/AutoConverter2.scala-152-          if(start > 0 && source.charAt(start - 1) == ' ') start -= 1
org/nlogo/compiler/AutoConverter2.scala-157-          val arg = app(0).asInstanceOf[ReporterApp].reporter
org/nlogo/compiler/AutoConverter2.scala-158-          if(arg.isInstanceOf[_constdouble] && arg.asInstanceOf[_constdouble].report(null).isInstanceOf[java.lang.Double])
org/nlogo/compiler/AutoConverter2.scala:159:            choice = if(arg.token.name.indexOf('.') == -1) "random" else "random-float"
org/nlogo/compiler/AutoConverter2.scala:160:          else if(arg.token.name.equalsIgnoreCase("WORLD-WIDTH") ||
org/nlogo/compiler/AutoConverter2.scala:161:                  arg.token.name.equalsIgnoreCase("WORLD-HEIGHT") ||
org/nlogo/compiler/AutoConverter2.scala:162:                  arg.token.name.equalsIgnoreCase("MAX-PXCOR") ||
org/nlogo/compiler/AutoConverter2.scala:163:                  arg.token.name.equalsIgnoreCase("MAX-PYCOR") )
org/nlogo/compiler/AutoConverter2.scala:164:            choice = "random"
org/nlogo/compiler/AutoConverter2.scala-165-          if(choice != null)
org/nlogo/compiler/AutoConverter2.scala-166-            replacements += new Replacement(oldReporter.token.startPos,
org/nlogo/compiler/AutoConverter2.scala-173-    }
org/nlogo/compiler/AutoConverter2.scala-174-    // histogram-from turtles [xcor] => histogram [xcor] of turtles
org/nlogo/compiler/AutoConverter2.scala:175:    // replacement #1: "histogram-from" -> "histogram [xcor] of"
org/nlogo/compiler/AutoConverter2.scala:176:    // replacement #2: " [xcor]" -> ""
org/nlogo/compiler/AutoConverter2.scala-177-    override def visitStatement(stmt:Statement) {
org/nlogo/compiler/AutoConverter2.scala-178-      val oldCommand = stmt.command
org/nlogo/compiler/AutoConverter2.scala-183-                                        oldCommand.token.endPos,
org/nlogo/compiler/AutoConverter2.scala-184-                                        oldCommand.token.name,
org/nlogo/compiler/AutoConverter2.scala:185:                                        "histogram " + source.substring(start,arg1.end) + " of")
org/nlogo/compiler/AutoConverter2.scala-186-        if(start > 0 && source.charAt(start - 1) == ' ') start -= 1
org/nlogo/compiler/AutoConverter2.scala-187-        replacements += new Replacement(start,arg1.end,
org/nlogo/compiler/BreedIdentifierHandler.scala-20-               _.linkBreeds, _.linkBreedsSingular,
org/nlogo/compiler/BreedIdentifierHandler.scala-21-               { case a:AgentSet => a.isDirected
org/nlogo/compiler/BreedIdentifierHandler.scala:22:                case s:String => s == "DIRECTED-LINK-BREED" } )
org/nlogo/compiler/BreedIdentifierHandler.scala-23-  def undirectedLink(patternString:String,tokenType:TokenType,singular:Boolean,primClass:Class[_ <: Instruction]) =
org/nlogo/compiler/BreedIdentifierHandler.scala-24-    new Helper(patternString,tokenType,singular,primClass,
org/nlogo/compiler/BreedIdentifierHandler.scala-25-               _.linkBreeds, _.linkBreedsSingular,
org/nlogo/compiler/BreedIdentifierHandler.scala-26-               { case a:AgentSet => a.isUndirected
org/nlogo/compiler/BreedIdentifierHandler.scala:27:                case s:String => s == "UNDIRECTED-LINK-BREED" } ) 
org/nlogo/compiler/BreedIdentifierHandler.scala-28-  private val handlers2D = handlers(false)
org/nlogo/compiler/BreedIdentifierHandler.scala-29-  private val handlers3D = handlers(true)
org/nlogo/compiler/BreedIdentifierHandler.scala-30-  private def handlers(is3D:Boolean) = List(
org/nlogo/compiler/BreedIdentifierHandler.scala-31-    // prims for turtle breeds
org/nlogo/compiler/BreedIdentifierHandler.scala:32:    turtle("CREATE-*", COMMAND, false, classOf[_createturtles]),
org/nlogo/compiler/BreedIdentifierHandler.scala:33:    turtle("CREATE-ORDERED-*", COMMAND, false, classOf[_createorderedturtles]),
org/nlogo/compiler/BreedIdentifierHandler.scala:34:    turtle("HATCH-*", COMMAND, false, classOf[_hatch]),
org/nlogo/compiler/BreedIdentifierHandler.scala:35:    turtle("SPROUT-*", COMMAND, false,classOf[_sprout]),
org/nlogo/compiler/BreedIdentifierHandler.scala:36:    turtle("IS-*?", REPORTER, true,classOf[_isbreed]),
org/nlogo/compiler/BreedIdentifierHandler.scala:37:    turtle("*-HERE", REPORTER, false,classOf[_breedhere]),
org/nlogo/compiler/BreedIdentifierHandler.scala:38:    turtle("*-ON", REPORTER, false,classOf[_breedon]),
org/nlogo/compiler/BreedIdentifierHandler.scala-39-    turtle("*", REPORTER, false, classOf[_breed]),
org/nlogo/compiler/BreedIdentifierHandler.scala-40-    turtle("*", REPORTER, true, classOf[_breedsingular]),
org/nlogo/compiler/BreedIdentifierHandler.scala-41-    // if we're in 3D point to the 3D version since
org/nlogo/compiler/BreedIdentifierHandler.scala-42-    // the syntax is different in 3D ev 12/11/06
org/nlogo/compiler/BreedIdentifierHandler.scala:43:    turtle("*-AT", REPORTER, false,
org/nlogo/compiler/BreedIdentifierHandler.scala-44-           if(is3D) classOf[org.nlogo.prim.threed._breedat]
org/nlogo/compiler/BreedIdentifierHandler.scala-45-           else classOf[_breedat]),
org/nlogo/compiler/BreedIdentifierHandler.scala-49-    directedLink("*", REPORTER, false, classOf[_linkbreed]),
org/nlogo/compiler/BreedIdentifierHandler.scala-50-    undirectedLink("*", REPORTER, false, classOf[_linkbreed]),
org/nlogo/compiler/BreedIdentifierHandler.scala:51:    directedLink("IS-*?", REPORTER, true,classOf[_isbreed]),
org/nlogo/compiler/BreedIdentifierHandler.scala:52:    undirectedLink("IS-*?", REPORTER, true,classOf[_isbreed]),
org/nlogo/compiler/BreedIdentifierHandler.scala:53:    directedLink("CREATE-*-FROM", COMMAND, true,classOf[_createlinkfrom]),
org/nlogo/compiler/BreedIdentifierHandler.scala:54:    directedLink("CREATE-*-FROM", COMMAND, false,classOf[_createlinksfrom]),
org/nlogo/compiler/BreedIdentifierHandler.scala:55:    directedLink("CREATE-*-TO", COMMAND, true,classOf[_createlinkto]),
org/nlogo/compiler/BreedIdentifierHandler.scala:56:    directedLink("CREATE-*-TO", COMMAND, false,classOf[_createlinksto]),
org/nlogo/compiler/BreedIdentifierHandler.scala:57:    undirectedLink("CREATE-*-WITH", COMMAND, true,classOf[_createlinkwith]),
org/nlogo/compiler/BreedIdentifierHandler.scala:58:    undirectedLink("CREATE-*-WITH", COMMAND, false,classOf[_createlinkswith]),
org/nlogo/compiler/BreedIdentifierHandler.scala:59:    directedLink("IN-*-NEIGHBOR?", REPORTER, true,classOf[_inlinkneighbor]),
org/nlogo/compiler/BreedIdentifierHandler.scala:60:    directedLink("OUT-*-NEIGHBOR?", REPORTER, true,classOf[_outlinkneighbor]),
org/nlogo/compiler/BreedIdentifierHandler.scala:61:    directedLink("IN-*-FROM", REPORTER, true,classOf[_inlinkfrom]),
org/nlogo/compiler/BreedIdentifierHandler.scala:62:    directedLink("OUT-*-TO", REPORTER, true,classOf[_outlinkto]),
org/nlogo/compiler/BreedIdentifierHandler.scala:63:    directedLink("OUT-*-NEIGHBORS", REPORTER, true,classOf[_outlinkneighbors]),
org/nlogo/compiler/BreedIdentifierHandler.scala:64:    directedLink("IN-*-NEIGHBORS", REPORTER, true,classOf[_inlinkneighbors]),
org/nlogo/compiler/BreedIdentifierHandler.scala:65:    directedLink("MY-IN-*", REPORTER, false,classOf[_myinlinks]),
org/nlogo/compiler/BreedIdentifierHandler.scala:66:    directedLink("MY-OUT-*", REPORTER, false,classOf[_myoutlinks]),
org/nlogo/compiler/BreedIdentifierHandler.scala:67:    undirectedLink("*-NEIGHBORS", REPORTER, true,classOf[_linkneighbors]),
org/nlogo/compiler/BreedIdentifierHandler.scala:68:    undirectedLink("MY-*", REPORTER, false,classOf[_mylinks]),
org/nlogo/compiler/BreedIdentifierHandler.scala:69:    undirectedLink("*-WITH", REPORTER, true,classOf[_linkwith]),
org/nlogo/compiler/BreedIdentifierHandler.scala:70:    undirectedLink("*-NEIGHBOR?", REPORTER, true,classOf[_linkneighbor]) 
org/nlogo/compiler/BreedIdentifierHandler.scala-71-  )
org/nlogo/compiler/BreedIdentifierHandler.scala-72-  class Helper
org/nlogo/compiler/BreedIdentifierHandler.scala-76-  {
org/nlogo/compiler/BreedIdentifierHandler.scala-77-    import java.util.regex.Pattern
org/nlogo/compiler/BreedIdentifierHandler.scala:78:    val pattern = Pattern.compile("\\A"+patternString.replaceAll("\\?","\\\\?").replaceAll("\\*","(.+)")+"\\Z")
org/nlogo/compiler/BreedIdentifierHandler.scala-79-    def process(tok:Token,program:Program):Option[Token] = {
org/nlogo/compiler/BreedIdentifierHandler.scala-80-      val matcher = pattern.matcher(tok.value.asInstanceOf[String])
org/nlogo/compiler/CarefullyVisitor.scala-4-import org.nlogo.prim._
org/nlogo/compiler/CarefullyVisitor.scala-5-/**
org/nlogo/compiler/CarefullyVisitor.scala:6: * This is an AstVisitor that connects "error-message" reporters to
org/nlogo/compiler/CarefullyVisitor.scala:7: * their enclosing "carefully" commands.
org/nlogo/compiler/CarefullyVisitor.scala-8- */
org/nlogo/compiler/CarefullyVisitor.scala-9-private class CarefullyVisitor extends DefaultAstVisitor {
org/nlogo/compiler/CarefullyVisitor.scala-24-    app.reporter match {
org/nlogo/compiler/CarefullyVisitor.scala-25-      case em:_errormessage =>
org/nlogo/compiler/CarefullyVisitor.scala:26:        if(stack.isEmpty) exception(em.token.name + " cannot be used outside of CAREFULLY",app)
org/nlogo/compiler/CarefullyVisitor.scala-27-        em.let = stack.top.let
org/nlogo/compiler/CarefullyVisitor.scala-28-      case _ => super.visitReporterApp(app)
org/nlogo/compiler/Compiler.scala-8-object Compiler extends CompilerInterface {
org/nlogo/compiler/Compiler.scala-9-  // tokenizer singletons
org/nlogo/compiler/Compiler.scala:10:  val Tokenizer2D = Femto.scalaSingleton(classOf[TokenizerInterface],"org.nlogo.lex.Tokenizer2D")
org/nlogo/compiler/Compiler.scala:11:  val Tokenizer3D = Femto.scalaSingleton(classOf[TokenizerInterface],"org.nlogo.lex.Tokenizer3D")
org/nlogo/compiler/Compiler.scala:12:  val TokenMapper2D = Femto.scalaSingleton(classOf[TokenMapperInterface],"org.nlogo.lex.TokenMapper2D")
org/nlogo/compiler/Compiler.scala-13-  // some private helpers
org/nlogo/compiler/Compiler.scala-14-  private type ProceduresMap = java.util.Map[String,Procedure]
org/nlogo/compiler/Compiler.scala-28-  @throws(classOf[CompilerException])
org/nlogo/compiler/Compiler.scala-29-  def checkCommandSyntax(source:String,program:Program,procedures:ProceduresMap,extensionManager:ExtensionManager,parse:Boolean) {
org/nlogo/compiler/Compiler.scala:30:    checkSyntax("to __bogus-name " + source + "\nend",
org/nlogo/compiler/Compiler.scala-31-                true,program,procedures,extensionManager,parse)
org/nlogo/compiler/Compiler.scala-32-  }
org/nlogo/compiler/Compiler.scala-34-  @throws(classOf[CompilerException])
org/nlogo/compiler/Compiler.scala-35-  def checkReporterSyntax(source:String,program:Program,procedures:ProceduresMap,extensionManager:ExtensionManager,parse:Boolean) {
org/nlogo/compiler/Compiler.scala:36:    checkSyntax("to-report __bogus-name report " + source + "\nend",
org/nlogo/compiler/Compiler.scala-37-                true,program,procedures,extensionManager,parse)
org/nlogo/compiler/Compiler.scala-38-  }
org/nlogo/compiler/Compiler.scala-86-  def readFromFile(currFile:org.nlogo.api.File,world:World,extensionManager:ExtensionManager):AnyRef = {
org/nlogo/compiler/Compiler.scala-87-    val tokens:Iterator[Token] =
org/nlogo/compiler/Compiler.scala:88:      Femto.get(classOf[TokenReaderInterface],"org.nlogo.lex.TokenReader",
org/nlogo/compiler/Compiler.scala-89-                Array(currFile,tokenizer(world.program.is3D)))
org/nlogo/compiler/Compiler.scala-90-    val result = new ConstantParser(world.asInstanceOf[org.nlogo.agent.World],extensionManager)
org/nlogo/compiler/CompilerExceptionThrowers.scala-5-object CompilerExceptionThrowers {
org/nlogo/compiler/CompilerExceptionThrowers.scala-6-
org/nlogo/compiler/CompilerExceptionThrowers.scala:7:  // "assert" is in Predef, so...
org/nlogo/compiler/CompilerExceptionThrowers.scala-8-  def cAssert(condition: Boolean, desc: String, token: Token) =
org/nlogo/compiler/CompilerExceptionThrowers.scala-9-    if(!condition)
org/nlogo/compiler/CompilerMain.scala-51-      if(Version.useGenerator) // generate byte code
org/nlogo/compiler/CompilerMain.scala-52-        procdef.procedure.code =
org/nlogo/compiler/CompilerMain.scala:53:          Femto.get(classOf[GeneratorInterface], "org.nlogo.generator.Generator",
org/nlogo/compiler/CompilerMain.scala-54-                    Array(source, procdef.procedure,
org/nlogo/compiler/CompilerMain.scala-55-                          java.lang.Boolean.valueOf(
org/nlogo/compiler/ConstantFolder.scala-6-// report it to the user at compile-time.  But we could wait until
org/nlogo/compiler/ConstantFolder.scala-7-// runtime to deal with it.  Perhaps users will find it disconcerting
org/nlogo/compiler/ConstantFolder.scala:8:// that some of their code is being "run" at compile-time, and errors
org/nlogo/compiler/ConstantFolder.scala-9-// pop up.  Waiting evaluation would also allow us to compile division
org/nlogo/compiler/ConstantFolder.scala-10-// by zero, etc.  The problem with waiting is that right now the
org/nlogo/compiler/ConstantFolder.scala-11-// bytecode generator doesn't gracefully handle bad inputs.  Since
org/nlogo/compiler/ConstantFolder.scala:12:// impossible things like "5 - true" can make the bytecode generator
org/nlogo/compiler/ConstantFolder.scala-13-// choke, for now it's better to catch these errors here, rather than
org/nlogo/compiler/ConstantFolder.scala-14-// hand them on to the bytecode generator, where bad things will
org/nlogo/compiler/ConstantParser.scala-25-  def this() = this(null,null)  // for testing
org/nlogo/compiler/ConstantParser.scala-26-  /// all error messages used in this class
org/nlogo/compiler/ConstantParser.scala:27:  private val BAD_AGENT = "Not an agent"
org/nlogo/compiler/ConstantParser.scala:28:  private val BAD_PATCH_SET_ARGS = "Patch agentsets are given by a set of 2 element integer lists containing a patch's pxcor and pycor"
org/nlogo/compiler/ConstantParser.scala:29:  private val BAD_PATCH_ARGS = "pxcor and pycor must be floats"
org/nlogo/compiler/ConstantParser.scala:30:  private val BAD_LINK_ARGS = "end1 and end2 must be floats"
org/nlogo/compiler/ConstantParser.scala:31:  private val BAD_TURTLE_SET_ARGS = "Turtle agentsets are given by a set of turtles' who numbers"
org/nlogo/compiler/ConstantParser.scala:32:  private val BAD_LINK_SET_ARGS = "Link agentsets are given by a set of links' endpoints and breeds"
org/nlogo/compiler/ConstantParser.scala:33:  private val BAD_TURTLE_ARG = "a turtle's who number must be an integer"
org/nlogo/compiler/ConstantParser.scala:34:  private val EXPECTED_BREED = "Expected breed"
org/nlogo/compiler/ConstantParser.scala:35:  private val EXPECTED_CLOSE_BRACE = "Expected closing brace."
org/nlogo/compiler/ConstantParser.scala:36:  private val EXPECTED_CLOSE_PAREN = "Expected a closing parenthesis."
org/nlogo/compiler/ConstantParser.scala:37:  private val EXPECTED_CONSTANT = "Expected a constant."
org/nlogo/compiler/ConstantParser.scala:38:  private val EXPECTED_NUMBER = "Expected a number."
org/nlogo/compiler/ConstantParser.scala:39:  private val EXPECTED_INT_ETC = "Expected number, list, string or boolean"
org/nlogo/compiler/ConstantParser.scala:40:  private val EXPECTED_OPEN_BRACE = "Expected open brace."
org/nlogo/compiler/ConstantParser.scala:41:  private val EXPECTED_OPEN_BRACKET = "Internal error: Expected an opening bracket here."
org/nlogo/compiler/ConstantParser.scala:42:  private val EXTRA_STUFF_AFTER_CONSTANT = "Extra characters after constant."
org/nlogo/compiler/ConstantParser.scala:43:  private val EXTRA_STUFF_AFTER_NUMBER = "Extra characters after number."
org/nlogo/compiler/ConstantParser.scala:44:  private val ILLEGAL_AGENT_CONSTANT = "Can only have constant agents and agentsets if importing."
org/nlogo/compiler/ConstantParser.scala:45:  private val MISSING_CLOSE_BRACKET = "No closing bracket for this open bracket."
org/nlogo/compiler/ConstantParser.scala:46:  private val NOT_AN_AGENTSET = " is not an agentset"
org/nlogo/compiler/ConstantParser.scala:47:  private val NOT_A_BREED = " is not a breed"
org/nlogo/compiler/ConstantParser.scala-48-  /// magic keys used to identify agent set types.
org/nlogo/compiler/ConstantParser.scala:49:  private val SET_TYPE_ALLPATCHES = "ALL-PATCHES"
org/nlogo/compiler/ConstantParser.scala:50:  private val SET_TYPE_ALLTURTLES = "ALL-TURTLES"
org/nlogo/compiler/ConstantParser.scala:51:  private val SET_TYPE_ALLLINKS   = "ALL-LINKS"
org/nlogo/compiler/ConstantParser.scala:52:  private val SET_TYPE_BREED      = "BREED"
org/nlogo/compiler/ConstantParser.scala:53:  private val SET_TYPE_OBSERVER   = "OBSERVER"
org/nlogo/compiler/ConstantParser.scala-54-  // First group: extension name; second group: extension type name; last group: all the data
org/nlogo/compiler/ConstantParser.scala-55-  private val EXTENSION_TYPE_PATTERN = java.util.regex.Pattern.compile("\\{\\{(\\S*):(\\S*)\\s(.*)\\}\\}");
org/nlogo/compiler/ConstantParser.scala-142-  
org/nlogo/compiler/ConstantParser.scala-143-  /**
org/nlogo/compiler/ConstantParser.scala:144:  * parses a constant agent (e.g. "{turtle 3}" or "{patch 1 2}" or "{link 5 6}"
org/nlogo/compiler/ConstantParser.scala-145-  */
org/nlogo/compiler/ConstantParser.scala-146-  private def parseConstantAgent(token:Token,tokens:Iterator[Token]) = {
org/nlogo/compiler/ConstantParser.scala-153-      try { world.getPatchAt(pxcor,pycor) }
org/nlogo/compiler/ConstantParser.scala-154-      catch { case _:org.nlogo.api.AgentException =>
org/nlogo/compiler/ConstantParser.scala:155:                exception("Invalid patch coordinates ( " + pxcor + " , " + pycor + " ) ",token) }
org/nlogo/compiler/ConstantParser.scala-156-    }
org/nlogo/compiler/ConstantParser.scala-157-    else if(agentType.isInstanceOf[org.nlogo.prim._turtle]) {
org/nlogo/compiler/ConstantParser.scala-173-      try { world.asInstanceOf[World3D].getPatchAt(pxcor,pycor,pzcor) }
org/nlogo/compiler/ConstantParser.scala-174-      catch{ case _:org.nlogo.api.AgentException =>
org/nlogo/compiler/ConstantParser.scala:175:               exception("Invalid patch coordinates ( " + pxcor + " , " + pycor +  " , " + pzcor + " ) " ,token) }
org/nlogo/compiler/ConstantParser.scala-176-    }
org/nlogo/compiler/ConstantParser.scala-177-    else exception(BAD_AGENT,token)
org/nlogo/compiler/ConstantParser.scala-202-    cAssert(world != null,ILLEGAL_AGENT_CONSTANT,braceToken)
org/nlogo/compiler/ConstantParser.scala-203-    val token = tokens.next()
org/nlogo/compiler/ConstantParser.scala:204:    // next token should be an identifier or reporter. reporter is a special case because "turtles"
org/nlogo/compiler/ConstantParser.scala:205:    // and "patches" end up getting turned into Reporters when tokenizing, which is kind of ugly.
org/nlogo/compiler/ConstantParser.scala-206-    cAssert(List(TokenType.VARIABLE,TokenType.IDENT,TokenType.REPORTER).contains(token.tyype),
org/nlogo/compiler/ConstantParser.scala-207-            EXPECTED_BREED,token)
org/nlogo/compiler/ConstantParser.scala-243-        cAssert(closeBrace.tyype == TokenType.CLOSE_BRACE,EXPECTED_CLOSE_BRACE,closeBrace)
org/nlogo/compiler/ConstantParser.scala-244-        val agentset = new ArrayAgentSet(classOf[Observer],1,false,world)
org/nlogo/compiler/ConstantParser.scala:245:        // We should be able to just write "observer" instead of "observer()" in the next
org/nlogo/compiler/ConstantParser.scala-246-        // line, but this fails with an IllegalAccessException as of Scala 2.7.2.RC6.
org/nlogo/compiler/ConstantParser.scala-316-        catch {
org/nlogo/compiler/ConstantParser.scala-317-          case _:org.nlogo.api.AgentException =>
org/nlogo/compiler/ConstantParser.scala:318:            exception("Invalid patch coordinates in one of the agents of this set.",token)
org/nlogo/compiler/ConstantParser.scala-319-        }
org/nlogo/compiler/ConstantParser.scala-320-        token = tokens.next()
org/nlogo/compiler/ExpressionParser.scala-7- * The actual NetLogo parser.
org/nlogo/compiler/ExpressionParser.scala-8- * The jargon here is a bit different from the usual NetLogo terminology:
org/nlogo/compiler/ExpressionParser.scala:9: *  - "command" is an actual command token itself, e.g., show, run.
org/nlogo/compiler/ExpressionParser.scala:10: *  - "reporter" is an actual reporter itself, e.g., +, round, with.
org/nlogo/compiler/ExpressionParser.scala:11: *  - "statement" is a syntactic form with no value and a command as head (e.g., show 5)
org/nlogo/compiler/ExpressionParser.scala:12: *  - "expression" is a syntactic form which can occur as an argument to a command or to a
org/nlogo/compiler/ExpressionParser.scala-13- *    reporter. expressions denote values. there are two basic kinds of expression:
org/nlogo/compiler/ExpressionParser.scala-14- *     - reporter applications (infix or prefix). Note that this is reporter in the internal sense,
org/nlogo/compiler/ExpressionParser.scala-26-  // these are most of the compiler error messages. the ones actually in the code are those
org/nlogo/compiler/ExpressionParser.scala-27-  // that require some substitution, which are pretty much only type errors currently.
org/nlogo/compiler/ExpressionParser.scala:28:  private val EXPECTED_COMMAND = "Expected command."
org/nlogo/compiler/ExpressionParser.scala:29:  private val EXPECTED_CLOSE_BRACKET = "Expected closing bracket."
org/nlogo/compiler/ExpressionParser.scala:30:  private val EXPECTED_CLOSE_PAREN_HERE = "Expected a closing parenthesis here."
org/nlogo/compiler/ExpressionParser.scala:31:  private val EXPECTED_REFERENCABLE = "Expected a patch variable here."
org/nlogo/compiler/ExpressionParser.scala:32:  private val EXPECTED_REPORTER = "Expected reporter."
org/nlogo/compiler/ExpressionParser.scala:33:  private val INVALID_VARIADIC_CONTEXT = "To use a non-default number of inputs, you need to put parentheses around this."
org/nlogo/compiler/ExpressionParser.scala:34:  private val MISSING_CLOSE_BRACKET = "No closing bracket for this open bracket."
org/nlogo/compiler/ExpressionParser.scala:35:  private val MISSING_CLOSE_PAREN = "No closing parenthesis for this open parenthesis."
org/nlogo/compiler/ExpressionParser.scala:36:  private val MISSING_INPUT_ON_LEFT = "Missing input on the left."
org/nlogo/compiler/ExpressionParser.scala-37-  /**
org/nlogo/compiler/ExpressionParser.scala-38-   * parses a procedure. Procedures are a bunch of statements (not a block of statements, that's
org/nlogo/compiler/ExpressionParser.scala-147-  private def missingInput(app:Application,right:Boolean):String = {
org/nlogo/compiler/ExpressionParser.scala-148-    val syntax = app.instruction.getSyntax
org/nlogo/compiler/ExpressionParser.scala:149:    val rightArgs = syntax.right.map(Syntax.aTypeName(_).replaceFirst("anything","any input"))
org/nlogo/compiler/ExpressionParser.scala-150-    val left = syntax.left
org/nlogo/compiler/ExpressionParser.scala-151-    val result =
org/nlogo/compiler/ExpressionParser.scala-152-      if(right && isVariadic(app.instruction) && syntax.min == 0)
org/nlogo/compiler/ExpressionParser.scala:153:        app.instruction.displayName + " expected " + syntax.rightDefault + " input" + (if(syntax.rightDefault > 1) "s" else "") +
org/nlogo/compiler/ExpressionParser.scala:154:        " on the right or any number of inputs when surrounded by parentheses"
org/nlogo/compiler/ExpressionParser.scala-155-      else
org/nlogo/compiler/ExpressionParser.scala:156:        app.instruction.displayName + " expected " + (if(isVariadic(app.instruction)) "at least " else "") +
org/nlogo/compiler/ExpressionParser.scala:157:        (if(right) syntax.rightDefault + " input" + (if(syntax.rightDefault > 1) "s" else "") +
org/nlogo/compiler/ExpressionParser.scala:158:                    (if(syntax.isInfix) " on the right" else "")
org/nlogo/compiler/ExpressionParser.scala:159:         else Syntax.aTypeName(left) + " on the left.")
org/nlogo/compiler/ExpressionParser.scala-160-    if(!right)
org/nlogo/compiler/ExpressionParser.scala-161-      result
org/nlogo/compiler/ExpressionParser.scala:162:    else if(rightArgs.forall(_ == "any input"))
org/nlogo/compiler/ExpressionParser.scala-163-      result + "."
org/nlogo/compiler/ExpressionParser.scala-164-    else if(rightArgs.size == 1)
org/nlogo/compiler/ExpressionParser.scala:165:      result + ", " + rightArgs.mkString + "."
org/nlogo/compiler/ExpressionParser.scala-166-    else
org/nlogo/compiler/ExpressionParser.scala:167:      result + ", " + rightArgs.toList.dropRight(1).mkString(", ") + " and " + rightArgs.last + "." 
org/nlogo/compiler/ExpressionParser.scala-168-  }
org/nlogo/compiler/ExpressionParser.scala-233-    cAssert(Syntax.typesAreCompatible(expectedType,arg.reportedType),
org/nlogo/compiler/ExpressionParser.scala:234:            instruction + " expected this input to be " + Syntax.aTypeName(expectedType) + ", but got " +
org/nlogo/compiler/ExpressionParser.scala:235:            Syntax.aTypeName(arg.reportedType) + " instead",arg)
org/nlogo/compiler/ExpressionParser.scala-236-    if(expectedType == Syntax.TYPE_REFERENCE) {
org/nlogo/compiler/ExpressionParser.scala-237-      // we can be sure this cast will work, because otherwise the assert above would've failed (no
org/nlogo/compiler/ExpressionParser.scala-455-    }
org/nlogo/compiler/ExpressionParser.scala-456-    // we weren't actually expecting a block at all!
org/nlogo/compiler/ExpressionParser.scala:457:    else exception("Expected " + Syntax.aTypeName(goalType) + " here, rather than a list or block.",block)
org/nlogo/compiler/ExpressionParser.scala-458-  }
org/nlogo/compiler/ExpressionParser.scala-459-  private class MissingPrefixException(val token:Token) extends Exception
org/nlogo/compiler/IdentifierParser.scala-5-import org.nlogo.prim._
org/nlogo/compiler/IdentifierParser.scala-51-    // kludgy to special case this, but we only have one such prim,
org/nlogo/compiler/IdentifierParser.scala-52-    // so oh well... - ST 7/8/06
org/nlogo/compiler/IdentifierParser.scala:53:    else if(ident == "RANDOM-OR-RANDOM-FLOAT")
org/nlogo/compiler/IdentifierParser.scala-54-      exception(RANDOM_OR_RANDOM_FLOAT_ERROR,tok)
org/nlogo/compiler/IdentifierParser.scala-55-    else if(getLetFromArg(procedure,ident,tokPos).isDefined)
org/nlogo/compiler/IdentifierParser.scala-101-      new _unknownidentifier
org/nlogo/compiler/IdentifierParser.scala-102-    else
org/nlogo/compiler/IdentifierParser.scala:103:      exception("Nothing named " + varName + " has been defined",
org/nlogo/compiler/IdentifierParser.scala-104-                new Token(varName,tok.tyype,tok.value)
org/nlogo/compiler/IdentifierParser.scala-105-                         (tok.startPos,tok.startPos + varName.length,tok.fileName))
org/nlogo/compiler/IdentifierParser.scala-114-              || newVal.isInstanceOf[_callreport]
org/nlogo/compiler/IdentifierParser.scala-115-              || newVal.isInstanceOf[_unknownidentifier]),
org/nlogo/compiler/IdentifierParser.scala:116:            "Cannot use " + procedure.name + " as a procedure name.  Conflicts with: " + newVal,
org/nlogo/compiler/IdentifierParser.scala-117-            procedure.nameToken)
org/nlogo/compiler/IdentifierParser.scala-118-  }
org/nlogo/compiler/IdentifierParser.scala-124-  /// error texts
org/nlogo/compiler/IdentifierParser.scala-125-  private val INVALID_TEMPLATE_VARIABLE =
org/nlogo/compiler/IdentifierParser.scala:126:    "variables may not begin with a question mark unless they are the special variables ?, ?1, ?2, ..."
org/nlogo/compiler/IdentifierParser.scala-127-  private val RANDOM_OR_RANDOM_FLOAT_ERROR =
org/nlogo/compiler/IdentifierParser.scala:128:    "This code was written for an old version of NetLogo in which the RANDOM primitive sometimes reported " +
org/nlogo/compiler/IdentifierParser.scala:129:    "an integer (e.g. 4), other times a floating point number (e.g. 4.326), depending on its input. " +
org/nlogo/compiler/IdentifierParser.scala:130:    "That's no longer true in this version; instead, we now have two separate primitives. So you must " +
org/nlogo/compiler/IdentifierParser.scala:131:    "replace this with either RANDOM or RANDOM-FLOAT depending on whether you want an integer or " +
org/nlogo/compiler/IdentifierParser.scala:132:    "a floating point result."
org/nlogo/compiler/IdentifierParser.scala-133-}
org/nlogo/compiler/LocalsVisitor.scala-5-import org.nlogo.prim._
org/nlogo/compiler/LocalsVisitor.scala-14-private class LocalsVisitor extends DefaultAstVisitor {
org/nlogo/compiler/LocalsVisitor.scala-15-  private var procedure:Procedure = null
org/nlogo/compiler/LocalsVisitor.scala:16:  private var currentLet:_let = null  // for forbidding "let x x" and the like
org/nlogo/compiler/LocalsVisitor.scala-17-  // each Int is the position of that variable in the procedure's args list
org/nlogo/compiler/LocalsVisitor.scala-18-  private val alteredLets = new collection.mutable.HashMap[Let,Int]
org/nlogo/compiler/LocalsVisitor.scala-50-          procedure.lets.remove(r.let)
org/nlogo/compiler/LocalsVisitor.scala-51-          // actual name here doesn't really matter, I don't think - ST 11/10/05
org/nlogo/compiler/LocalsVisitor.scala:52:          procedure.args.add("_repeatlocal:" + vn)
org/nlogo/compiler/LocalsVisitor.scala-53-        }
org/nlogo/compiler/LocalsVisitor.scala-54-        super.visitStatement(stmt)
org/nlogo/compiler/LocalsVisitor.scala-66-      case l:_letvariable =>
org/nlogo/compiler/LocalsVisitor.scala-67-        cAssert(currentLet == null || (currentLet.let ne l.let),
org/nlogo/compiler/LocalsVisitor.scala:68:                "Nothing named " + l.token.name + " has been defined",l.token)
org/nlogo/compiler/LocalsVisitor.scala-69-        if(alteredLets.contains(l.let)) {
org/nlogo/compiler/LocalsVisitor.scala-70-          val oldToken = expr.reporter.token
org/nlogo/compiler/Optimizer.scala-5-import org.nlogo.nvm.{Command,Instruction,Reporter}
org/nlogo/compiler/Optimizer.scala-6-import org.nlogo.prim._
org/nlogo/compiler/Optimizer.scala:7:// "asInstanceOf" is everywhere here. Could I make it more type-safe? - ST 1/28/09
org/nlogo/compiler/Optimizer.scala-8-private class Optimizer(is3D:Boolean) extends DefaultAstVisitor {
org/nlogo/compiler/Optimizer.scala-9-  override def visitProcedureDefinition(defn:ProcedureDefinition) {
org/nlogo/compiler/SetVariableVisitor.scala-11-private class SetVariableVisitor extends DefaultAstVisitor {
org/nlogo/compiler/SetVariableVisitor.scala:12:  private val INVALID_SET = "This isn't something you can use \"set\" on"
org/nlogo/compiler/SetVariableVisitor.scala-13-  override def visitStatement(stmt:Statement) {
org/nlogo/compiler/SetVariableVisitor.scala-14-    super.visitStatement(stmt)
org/nlogo/compiler/StructureParser.scala-62-    var index = 1
org/nlogo/compiler/StructureParser.scala-63-    usingFiles += (("", null))
org/nlogo/compiler/StructureParser.scala:64:    if(!subprogram) usingFiles += (("aggregate", null))
org/nlogo/compiler/StructureParser.scala-65-    var totallyDone = false
org/nlogo/compiler/StructureParser.scala-66-    while(!totallyDone) {
org/nlogo/compiler/StructureParser.scala-74-        val token = tokenBuffer.head
org/nlogo/compiler/StructureParser.scala-75-        // kludge: special case because of naming conflict with BREED turtle variable - jrn 8/04/05
org/nlogo/compiler/StructureParser.scala:76:        if(token.tyype == TokenType.VARIABLE && token.value == "BREED") {
org/nlogo/compiler/StructureParser.scala-77-          tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala-78-          val breedList = new java.util.ArrayList[String]
org/nlogo/compiler/StructureParser.scala-79-          parseVarList(breedList,null,null)
org/nlogo/compiler/StructureParser.scala-80-          try {
org/nlogo/compiler/StructureParser.scala:81:            if(java.lang.Boolean.getBoolean("org.nlogo.lang.requireSingularBreedArgument"))
org/nlogo/compiler/StructureParser.scala-82-              cAssert(breedList.size == 2,
org/nlogo/compiler/StructureParser.scala:83:                      "breed requires a singular form since org.nlogo.lang.requireSingularBreedArgument is true",
org/nlogo/compiler/StructureParser.scala-84-                      token)
org/nlogo/compiler/StructureParser.scala-85-          }
org/nlogo/compiler/StructureParser.scala-89-          }
org/nlogo/compiler/StructureParser.scala-90-          finally { cAssert(breedList.size == 1 || breedList.size == 2,
org/nlogo/compiler/StructureParser.scala:91:                            "breed only takes 1 or 2 inputs",token) }
org/nlogo/compiler/StructureParser.scala-92-          val breedName = breedList.get(0)
org/nlogo/compiler/StructureParser.scala-93-          program.breeds.put(breedName,breedName) // will replace with agentset at realloc time
org/nlogo/compiler/StructureParser.scala-97-        }
org/nlogo/compiler/StructureParser.scala-98-        else {
org/nlogo/compiler/StructureParser.scala:99:          cAssert(token.tyype == TokenType.KEYWORD,"Expected keyword",token)
org/nlogo/compiler/StructureParser.scala-100-          val keyword = token.value.asInstanceOf[String]
org/nlogo/compiler/StructureParser.scala:101:          if(keyword == "TO" || keyword == "TO-REPORT")
org/nlogo/compiler/StructureParser.scala-102-            parseProcedure(token.fileName)
org/nlogo/compiler/StructureParser.scala:103:          else if(keyword == "DIRECTED-LINK-BREED" || keyword == "UNDIRECTED-LINK-BREED") {
org/nlogo/compiler/StructureParser.scala-104-            tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala-105-            val breedList = new java.util.ArrayList[String]
org/nlogo/compiler/StructureParser.scala-106-            parseVarList(breedList,null,null)
org/nlogo/compiler/StructureParser.scala:107:            cAssert(breedList.size == 2,keyword + " only takes 2 inputs",token)
org/nlogo/compiler/StructureParser.scala-108-            val breedName = breedList.get(0)
org/nlogo/compiler/StructureParser.scala-109-            // will replace with agentset at realloc time
org/nlogo/compiler/StructureParser.scala-113-              program.linkBreedsSingular.put(breedList.get(1),breedName)
org/nlogo/compiler/StructureParser.scala-114-          }
org/nlogo/compiler/StructureParser.scala:115:          else if(keyword == "TURTLES-OWN") {
org/nlogo/compiler/StructureParser.scala:116:            cAssert(!haveTurtlesOwn,"Redeclaration of TURTLES-OWN",token)
org/nlogo/compiler/StructureParser.scala-117-            tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala-118-            haveTurtlesOwn = true
org/nlogo/compiler/StructureParser.scala-119-            parseVarList(program.turtlesOwn,null,null)
org/nlogo/compiler/StructureParser.scala-120-          }
org/nlogo/compiler/StructureParser.scala:121:          else if(keyword == "LINKS-OWN") {
org/nlogo/compiler/StructureParser.scala:122:            cAssert(!haveLinksOwn,"Redeclaration of LINKS-OWN",token)
org/nlogo/compiler/StructureParser.scala-123-            tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala-124-            haveLinksOwn = true
org/nlogo/compiler/StructureParser.scala-125-            parseVarList(program.linksOwn,null,null)
org/nlogo/compiler/StructureParser.scala-126-          }
org/nlogo/compiler/StructureParser.scala:127:          else if(keyword == "PATCHES-OWN") {
org/nlogo/compiler/StructureParser.scala:128:            cAssert( !havePatchesOwn,"Redeclaration of PATCHES-OWN",token)
org/nlogo/compiler/StructureParser.scala-129-            tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala-130-            havePatchesOwn = true
org/nlogo/compiler/StructureParser.scala-131-            parseVarList( program.patchesOwn,null,null)
org/nlogo/compiler/StructureParser.scala-132-          }
org/nlogo/compiler/StructureParser.scala:133:          else if(keyword == "GLOBALS") {
org/nlogo/compiler/StructureParser.scala:134:            cAssert(!haveGlobals,"Redeclaration of GLOBALS",token)
org/nlogo/compiler/StructureParser.scala-135-            tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala-136-            haveGlobals = true
org/nlogo/compiler/StructureParser.scala-137-            parseVarList(program.globals,null,null)
org/nlogo/compiler/StructureParser.scala-138-          }
org/nlogo/compiler/StructureParser.scala:139:          else if(keyword.endsWith("-OWN")) {
org/nlogo/compiler/StructureParser.scala-140-            val breedName = keyword.substring(0,keyword.length - 4)
org/nlogo/compiler/StructureParser.scala-141-            cAssert(program.breeds.containsKey(breedName) || program.linkBreeds.containsKey(breedName),
org/nlogo/compiler/StructureParser.scala:142:                    "There is no breed named " + breedName,token)
org/nlogo/compiler/StructureParser.scala-143-            tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala-144-            var linkbreed = false
org/nlogo/compiler/StructureParser.scala-145-            if(program.breedsOwn.containsKey(breedName)) {
org/nlogo/compiler/StructureParser.scala-146-              cAssert(program.breedsOwn.get(breedName).isEmpty,
org/nlogo/compiler/StructureParser.scala:147:                      "Redeclaration of " + keyword,token)
org/nlogo/compiler/StructureParser.scala-148-            }
org/nlogo/compiler/StructureParser.scala-149-            else if(program.linkBreedsOwn.containsKey(breedName)) {
org/nlogo/compiler/StructureParser.scala-150-              cAssert(program.linkBreedsOwn.get(breedName).isEmpty,
org/nlogo/compiler/StructureParser.scala:151:                      "Redeclaration of " + keyword,token)
org/nlogo/compiler/StructureParser.scala-152-              linkbreed = true
org/nlogo/compiler/StructureParser.scala-153-            }
org/nlogo/compiler/StructureParser.scala-162-            }
org/nlogo/compiler/StructureParser.scala-163-          }
org/nlogo/compiler/StructureParser.scala:164:          else if(keyword == "EXTENSIONS")
org/nlogo/compiler/StructureParser.scala-165-            parseImport(tokenBuffer)
org/nlogo/compiler/StructureParser.scala:166:          else if(keyword == "__INCLUDES") {
org/nlogo/compiler/StructureParser.scala:167:            cAssert(!haveIncludes,"Redeclaration of __INCLUDES",token)
org/nlogo/compiler/StructureParser.scala-168-            haveIncludes = true
org/nlogo/compiler/StructureParser.scala-169-            var filePath:String = null
org/nlogo/compiler/StructureParser.scala-171-            // Retrieve the Using File Path
org/nlogo/compiler/StructureParser.scala-172-            cAssert(tokenBuffer.head.tyype == TokenType.OPEN_BRACKET,
org/nlogo/compiler/StructureParser.scala:173:                    "Expected [",tokenBuffer.head)
org/nlogo/compiler/StructureParser.scala-174-            tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala-175-            while(tokenBuffer.head.tyype != TokenType.CLOSE_BRACKET) {
org/nlogo/compiler/StructureParser.scala-176-              var pathToken = tokenBuffer.head
org/nlogo/compiler/StructureParser.scala-177-              cAssert(pathToken.tyype == TokenType.CONSTANT && pathToken.value.isInstanceOf[String],
org/nlogo/compiler/StructureParser.scala:178:                      "Expected string or ]",pathToken)
org/nlogo/compiler/StructureParser.scala-179-              val name = pathToken.value.asInstanceOf[String]
org/nlogo/compiler/StructureParser.scala:180:              cAssert(name.endsWith(".nls"),"Included files must end with .nls",pathToken)
org/nlogo/compiler/StructureParser.scala-181-              pathToken = tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala-182-              filePath =
org/nlogo/compiler/StructureParser.scala-192-            tokenBuffer.next() // eat close bracket
org/nlogo/compiler/StructureParser.scala-193-          }
org/nlogo/compiler/StructureParser.scala:194:          else exception("Expected procedure or variable declaration",token)
org/nlogo/compiler/StructureParser.scala-195-        }
org/nlogo/compiler/StructureParser.scala-196-      }
org/nlogo/compiler/StructureParser.scala-199-        val source:String =
org/nlogo/compiler/StructureParser.scala-200-          try { extensionManager.getSource(fileName) }
org/nlogo/compiler/StructureParser.scala:201:          catch{ case _:java.io.IOException => exception("Could not find " + fileName,usingFiles(index)._2) }
org/nlogo/compiler/StructureParser.scala-202-        tokenBuffer.appendAll(tokenizer.tokenize(source,fileName))
org/nlogo/compiler/StructureParser.scala-203-        index += 1
org/nlogo/compiler/StructureParser.scala-246-      if(token.tyype == TokenType.EOF)
org/nlogo/compiler/StructureParser.scala-247-        // non-recommended call here, but less hassle...
org/nlogo/compiler/StructureParser.scala:248:        exception("Last procedure doesn't end with END",
org/nlogo/compiler/StructureParser.scala-249-                  procedure.pos,procedure.endPos,procedure.fileName)
org/nlogo/compiler/StructureParser.scala-250-      if(!haveTo) {
org/nlogo/compiler/StructureParser.scala:251:        cAssert(token.tyype == TokenType.KEYWORD,"Expected TO or TO-REPORT",token)
org/nlogo/compiler/StructureParser.scala-252-        val keyword = token.value.asInstanceOf[String]
org/nlogo/compiler/StructureParser.scala:253:        if(keyword == "TO") {
org/nlogo/compiler/StructureParser.scala-254-          procedure = new Procedure(fileName,Procedure.Type.COMMAND)
org/nlogo/compiler/StructureParser.scala-255-          tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala-260-          procedure.endPos = token.endPos
org/nlogo/compiler/StructureParser.scala-261-        }
org/nlogo/compiler/StructureParser.scala:262:        else if(keyword == "TO-REPORT") {
org/nlogo/compiler/StructureParser.scala-263-          procedure = new Procedure(fileName,Procedure.Type.REPORTER)
org/nlogo/compiler/StructureParser.scala-264-          tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala-269-          procedure.endPos = token.endPos
org/nlogo/compiler/StructureParser.scala-270-        }
org/nlogo/compiler/StructureParser.scala:271:        else exception("Expected TO or TO-REPORT",token)
org/nlogo/compiler/StructureParser.scala-272-      }
org/nlogo/compiler/StructureParser.scala-273-      else if(!haveName) {
org/nlogo/compiler/StructureParser.scala:274:        cAssert(token.tyype == TokenType.IDENT,"You can't use " + token.name.toUpperCase + " to name a procedure", token)
org/nlogo/compiler/StructureParser.scala-275-        tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala-276-        haveName = true
org/nlogo/compiler/StructureParser.scala-278-        procedure.nameToken = token
org/nlogo/compiler/StructureParser.scala-279-        checkName(procedure.name,token,null,null)
org/nlogo/compiler/StructureParser.scala:280:        cAssert(newProcedures.get(procedure.name) == null,"Cannot redefine " + procedure.name,token)
org/nlogo/compiler/StructureParser.scala-281-        // we set this here, so that if an error occurs, the highlighting is nice.
org/nlogo/compiler/StructureParser.scala-282-        procedure.endPos = token.endPos
org/nlogo/compiler/StructureParser.scala-292-        if(token.tyype == TokenType.KEYWORD) {
org/nlogo/compiler/StructureParser.scala-293-          val keyword = token.value.asInstanceOf[String]
org/nlogo/compiler/StructureParser.scala:294:          if(keyword == "END") {
org/nlogo/compiler/StructureParser.scala-295-            if(start == 0) start = tokenBuffer.index
org/nlogo/compiler/StructureParser.scala-296-            tokensMap.put(procedure,tokenBuffer.slice(start,tokenBuffer.index).map(processTokenWithExtensionManager))
org/nlogo/compiler/StructureParser.scala-299-            done = true
org/nlogo/compiler/StructureParser.scala-300-          }
org/nlogo/compiler/StructureParser.scala:301:          else exception("This doesn't make sense here",token)
org/nlogo/compiler/StructureParser.scala-302-        }
org/nlogo/compiler/StructureParser.scala-303-        else {
org/nlogo/compiler/StructureParser.scala-311-        else if(token.tyype == TokenType.KEYWORD) {
org/nlogo/compiler/StructureParser.scala-312-          val keyword = token.value.asInstanceOf[String]
org/nlogo/compiler/StructureParser.scala:313:          if(keyword == "END") {
org/nlogo/compiler/StructureParser.scala-314-            if(start == 0) start = tokenBuffer.index
org/nlogo/compiler/StructureParser.scala-315-            procedure.endPos = token.startPos
org/nlogo/compiler/StructureParser.scala-318-            tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala-319-          }
org/nlogo/compiler/StructureParser.scala:320:          else exception("This doesn't make sense here",token)
org/nlogo/compiler/StructureParser.scala-321-        }
org/nlogo/compiler/StructureParser.scala-322-        else tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala-328-  private def parseVarList(result:java.util.List[String],owningAgentClass:Class[_ <: Agent],procedure:Procedure) {
org/nlogo/compiler/StructureParser.scala-329-    var token = tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala:330:    cAssert(token.tyype == TokenType.OPEN_BRACKET,"Expected [",token)
org/nlogo/compiler/StructureParser.scala-331-    var done = false
org/nlogo/compiler/StructureParser.scala-332-    while(!done) {
org/nlogo/compiler/StructureParser.scala-336-      else {
org/nlogo/compiler/StructureParser.scala-337-        cAssert(token.tyype != TokenType.COMMAND,
org/nlogo/compiler/StructureParser.scala:338:                "There is already a primitive with that name",token)
org/nlogo/compiler/StructureParser.scala-339-        cAssert(token.tyype != TokenType.REPORTER,
org/nlogo/compiler/StructureParser.scala:340:                "There is already a primitive with that name",token)
org/nlogo/compiler/StructureParser.scala-341-        cAssert(token.tyype != TokenType.KEYWORD,
org/nlogo/compiler/StructureParser.scala:342:                "There is already a keyword with that name",token)
org/nlogo/compiler/StructureParser.scala-343-        cAssert(token.tyype == TokenType.IDENT,
org/nlogo/compiler/StructureParser.scala:344:                "Expected name or ]",token)
org/nlogo/compiler/StructureParser.scala-345-        cAssert(newProcedures.get(token.name.toUpperCase) == null,
org/nlogo/compiler/StructureParser.scala:346:                "There is already a procedure with that name",token)
org/nlogo/compiler/StructureParser.scala-347-        cAssert(!result.contains(token.value),
org/nlogo/compiler/StructureParser.scala:348:                "The name " + token.value + " is already defined",token)
org/nlogo/compiler/StructureParser.scala-349-        checkName(token.value.asInstanceOf[String],token,owningAgentClass,procedure)
org/nlogo/compiler/StructureParser.scala-350-        result.add(token.value.asInstanceOf[String])
org/nlogo/compiler/StructureParser.scala-359-        val breedOwns = program.breedsOwn.get(breedName)
org/nlogo/compiler/StructureParser.scala-360-        cAssert(!breedOwns.contains(varName),
org/nlogo/compiler/StructureParser.scala:361:                "You already defined " + varName + " as a " + breedName + " variable",token)
org/nlogo/compiler/StructureParser.scala-362-      }
org/nlogo/compiler/StructureParser.scala-363-    }
org/nlogo/compiler/StructureParser.scala-368-        val breedOwns = program.linkBreedsOwn.get(breedName)
org/nlogo/compiler/StructureParser.scala-369-        cAssert(!breedOwns.contains(varName),
org/nlogo/compiler/StructureParser.scala:370:                "You already defined " + varName + " as a " + breedName + " variable",token)
org/nlogo/compiler/StructureParser.scala-371-      }
org/nlogo/compiler/StructureParser.scala-372-    }
org/nlogo/compiler/StructureParser.scala-373-    cAssert(!program.turtlesOwn.contains(varName),
org/nlogo/compiler/StructureParser.scala:374:            "There is already a turtle variable called " + varName,token)
org/nlogo/compiler/StructureParser.scala-375-    cAssert(!program.patchesOwn.contains(varName),
org/nlogo/compiler/StructureParser.scala:376:            "There is already a patch variable called " + varName,token)
org/nlogo/compiler/StructureParser.scala-377-    cAssert(!program.globals.contains(varName),
org/nlogo/compiler/StructureParser.scala:378:            "There is already a global variable called " + varName,token)
org/nlogo/compiler/StructureParser.scala-379-    cAssert(!program.breeds.containsKey(varName),
org/nlogo/compiler/StructureParser.scala:380:            "There is already a breed called " + varName,token)
org/nlogo/compiler/StructureParser.scala-381-    cAssert(!program.linkBreeds.containsKey(varName),
org/nlogo/compiler/StructureParser.scala:382:            "There is already a link breed called " + varName,token)
org/nlogo/compiler/StructureParser.scala-383-    if(procedure != null)
org/nlogo/compiler/StructureParser.scala-384-      {
org/nlogo/compiler/StructureParser.scala-385-        cAssert(varName != procedure.name,
org/nlogo/compiler/StructureParser.scala:386:                "There is already a procedure with that name",token)
org/nlogo/compiler/StructureParser.scala-387-        cAssert(!procedure.args.contains(varName),
org/nlogo/compiler/StructureParser.scala:388:                "There is already a local variable called " + varName + " here",token)
org/nlogo/compiler/StructureParser.scala-389-      }
org/nlogo/compiler/StructureParser.scala-390-    checkNameAgainstProceduresMap(varName,token,oldProcedures,procedure != null)
org/nlogo/compiler/StructureParser.scala-393-
org/nlogo/compiler/StructureParser.scala-394-  private def checkNameAgainstProceduresMap(varName:String,token:Token,procedures:java.util.Map[String,Procedure],isLocal:Boolean) {
org/nlogo/compiler/StructureParser.scala:395:    cAssert(!procedures.containsKey(varName),"There is already a procedure with that name",token)
org/nlogo/compiler/StructureParser.scala-396-    if(!isLocal) {
org/nlogo/compiler/StructureParser.scala-397-      val iter = procedures.keySet.iterator()
org/nlogo/compiler/StructureParser.scala-399-        val proc = procedures.get(iter.next())
org/nlogo/compiler/StructureParser.scala-400-        cAssert(!proc.args.contains(varName),
org/nlogo/compiler/StructureParser.scala:401:                "There is already a local variable called " + varName + " in the " + proc.name + " procedure",token)
org/nlogo/compiler/StructureParser.scala-402-        val iter2 = proc.lets.iterator()
org/nlogo/compiler/StructureParser.scala-403-        while(iter2.hasNext)
org/nlogo/compiler/StructureParser.scala-404-          cAssert(varName != iter2.next().varName,
org/nlogo/compiler/StructureParser.scala:405:                  "There is already a local variable called " + varName + " in the " +
org/nlogo/compiler/StructureParser.scala:406:                  proc.name + " procedure",token)
org/nlogo/compiler/StructureParser.scala-407-      }
org/nlogo/compiler/StructureParser.scala-408-    }
org/nlogo/compiler/StructureParser.scala-409-  }
org/nlogo/compiler/StructureParser.scala-410-  /**
org/nlogo/compiler/StructureParser.scala:411:   * parses the "import" special form
org/nlogo/compiler/StructureParser.scala-412-   */
org/nlogo/compiler/StructureParser.scala-413-  private def parseImport(tokenBuffer:TokenBuffer) {
org/nlogo/compiler/StructureParser.scala-414-    tokenBuffer.next() // skip the __extensions
org/nlogo/compiler/StructureParser.scala-415-    val token = tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala:416:    cAssert(token.tyype == TokenType.OPEN_BRACKET,"Expected [",token)
org/nlogo/compiler/StructureParser.scala-417-    var done = false
org/nlogo/compiler/StructureParser.scala-418-    while(!done) {
org/nlogo/compiler/StructureParser.scala-421-        done = true
org/nlogo/compiler/StructureParser.scala-422-      else {
org/nlogo/compiler/StructureParser.scala:423:        cAssert(token.tyype == TokenType.IDENT && token.name != null,"Expected identifier or ]",token)
org/nlogo/compiler/StructureParser.scala-424-        extensionManager.importExtension(token.value.asInstanceOf[String].toLowerCase,
org/nlogo/compiler/StructureParser.scala-425-                                         new ErrorSource(token))
org/nlogo/compiler/StructureParser.scala-431-    val letToken = tokenBuffer.next()
org/nlogo/compiler/StructureParser.scala-432-    val nameToken = tokenBuffer.head
org/nlogo/compiler/StructureParser.scala:433:    cAssert(nameToken.tyype == TokenType.IDENT,"Expected variable name here",nameToken)
org/nlogo/compiler/StructureParser.scala-434-    val name = nameToken.value.asInstanceOf[String]
org/nlogo/compiler/StructureParser.scala-435-    val startPos = tokenBuffer.index - offset
org/nlogo/compiler/StructureParser.scala-436-    cAssert(!ancestorNames.contains(name),
org/nlogo/compiler/StructureParser.scala:437:            "There is already a local variable called " + name + " here",nameToken)
org/nlogo/compiler/StructureParser.scala-438-    checkName(name,nameToken,null,procedure)
org/nlogo/compiler/StructureParser.scala-439-    var level = 1
org/nlogo/compiler/StructureParser.scala-446-    }
org/nlogo/compiler/StructureParser.scala-447-    while(true) {
org/nlogo/compiler/StructureParser.scala:448:      if(!tokenBuffer.hasNext) exception("Expected ] or END",tokenBuffer.head)
org/nlogo/compiler/StructureParser.scala-449-      val token = tokenBuffer.head
org/nlogo/compiler/StructureParser.scala-450-      if(token.tyype == TokenType.OPEN_BRACKET) {
org/nlogo/compiler/StructureParser.scala-464-      else if(token.tyype == TokenType.KEYWORD) {
org/nlogo/compiler/StructureParser.scala-465-        val keyword = token.value.asInstanceOf[String]
org/nlogo/compiler/StructureParser.scala:466:        if(keyword != "END") exception("Expected ] or END",token)
org/nlogo/compiler/StructureParser.scala-467-        return newLet(tokenBuffer.index - offset)
org/nlogo/compiler/StructureParser.scala-468-      }
org/nlogo/compiler/StructureParser.scala-491-      if(token.tyype == TokenType.KEYWORD) {
org/nlogo/compiler/StructureParser.scala-492-        val keyword = token.value.asInstanceOf[String]
org/nlogo/compiler/StructureParser.scala:493:        if(keyword == "TO" || keyword == "TO-REPORT") {
org/nlogo/compiler/StructureParser.scala-494-          // position of to/to-report
org/nlogo/compiler/StructureParser.scala-495-          val toPos = token.startPos
org/nlogo/compiler/StructureParser.scala-503-            while(!done && tokens.hasNext) {
org/nlogo/compiler/StructureParser.scala-504-              token = tokens.next()
org/nlogo/compiler/StructureParser.scala:505:              if(token.tyype == TokenType.KEYWORD && token.value == "END")
org/nlogo/compiler/StructureParser.scala-506-                done = true
org/nlogo/compiler/StructureParser.scala-507-            }
org/nlogo/compiler/StructureParser.scala-528-      if(token.tyype == TokenType.KEYWORD) {
org/nlogo/compiler/StructureParser.scala-529-        val keyword = token.value.asInstanceOf[String]
org/nlogo/compiler/StructureParser.scala:530:        if(keyword == "__INCLUDES") {
org/nlogo/compiler/StructureParser.scala-531-          while(true) {
org/nlogo/compiler/StructureParser.scala-532-            var filePath:String = null
org/nlogo/compiler/TemplateVisitor.scala-12-private object TemplateVisitor {
org/nlogo/compiler/TemplateVisitor.scala-13-  // package visibility, for unit testing
org/nlogo/compiler/TemplateVisitor.scala:14:  val OUT_OF_SCOPE = "this special variable is not defined here"
org/nlogo/compiler/TemplateVisitor.scala-15-}
org/nlogo/compiler/TemplateVisitor.scala-16-private class TemplateVisitor extends DefaultAstVisitor {
org/nlogo/compiler/TypeParser.scala-1-package org.nlogo.compiler
org/nlogo/compiler/TypeParser.scala-69-    val oldUsables = usables
org/nlogo/compiler/TypeParser.scala-70-    for(procdef <- defs)
org/nlogo/compiler/TypeParser.scala:71:      procdef.accept(new TypeParserVisitor(procdef.procedure,"OTPL"))
org/nlogo/compiler/TypeParser.scala-72-    if(usables != oldUsables) parse()
org/nlogo/compiler/TypeParser.scala-73-  }
org/nlogo/compiler/TypeParser.scala-74-  class TypeParserVisitor(currentProcedure:Procedure,var usableBy:String) extends DefaultAstVisitor {
org/nlogo/compiler/TypeParser.scala:75:    // usableBy is "var" because it's where we accumulate our result.
org/nlogo/compiler/TypeParser.scala-76-    // it starts out as OTPL and the more code we see the more restricted
org/nlogo/compiler/TypeParser.scala-77-    // it may grow.  The use of mutable state in this way is characteristic
org/nlogo/compiler/TypeParser.scala-111-                else exps match {
org/nlogo/compiler/TypeParser.scala-112-                  case Seq(app:ReporterApp,_*) => getReportedAgentType(app)
org/nlogo/compiler/TypeParser.scala:113:                  case _ => "-TPL"
org/nlogo/compiler/TypeParser.scala-114-                }
org/nlogo/compiler/TypeParser.scala-115-              new TypeParserVisitor(currentProcedure,argsAgentClassString)
org/nlogo/compiler/TypeParser.scala-122-        case Syntax.TYPE_LINK   | Syntax.TYPE_LINKSET   => "---L"
org/nlogo/compiler/TypeParser.scala-123-        // This is kludgy.  We assume the agent type is the same as that
org/nlogo/compiler/TypeParser.scala:124:        // reported by the first argument to the command. ("with" and "at-points"
org/nlogo/compiler/TypeParser.scala:125:        // are examples of this, also "one-of".)   Careful, this assumption
org/nlogo/compiler/TypeParser.scala-126-        // could break someday. - ST 12/8/02, 12/15/05, 2/21/08
org/nlogo/compiler/TypeParser.scala-127-        case Syntax.TYPE_AGENT  | Syntax.TYPE_AGENTSET  =>
org/nlogo/compiler/TypeParser.scala-128-          app.args match {
org/nlogo/compiler/TypeParser.scala-129-            case Seq(app:ReporterApp,_*) => getReportedAgentType(app)
org/nlogo/compiler/TypeParser.scala:130:            case _ => "-TPL"
org/nlogo/compiler/TypeParser.scala-131-          }
org/nlogo/compiler/TypeParser.scala:132:        case _ => "-TPL"
org/nlogo/compiler/TypeParser.scala-133-      }
org/nlogo/compiler/TypeParser.scala-134-    }
org/nlogo/compiler/TypeParser.scala-152-        if(result == "----") {
org/nlogo/compiler/TypeParser.scala-153-          val name = instruction.tokenLimitingType.name
org/nlogo/compiler/TypeParser.scala:154:          exception("You can't use " + name + " in " + usableByToEnglish(usableBy,true) +
org/nlogo/compiler/TypeParser.scala:155:                    " context, because " + name + " is " + usableByToEnglish(instructionUsableBy,false) +
org/nlogo/compiler/TypeParser.scala:156:                    "-only." , instruction.tokenLimitingType)
org/nlogo/compiler/TypeParser.scala-157-        }
org/nlogo/compiler/TypeParser.scala-158-        result
org/nlogo/compiler/TypeParser.scala-159-      }
org/nlogo/compiler/TypeParser.scala-160-    }
org/nlogo/compiler/TypeParser.scala-170-    def usableByToEnglish(usableBy:String,addAOrAn:Boolean):String = {
org/nlogo/compiler/TypeParser.scala:171:      val abbreviations = Map('O' -> "observer", 'T' -> "turtle",
org/nlogo/compiler/TypeParser.scala:172:                              'P' -> "patch", 'L' -> "link")
org/nlogo/compiler/TypeParser.scala-173-      val english = usableBy.filter(_ != '-').map(abbreviations(_)).mkString("/")
org/nlogo/compiler/TypeParser.scala-174-      if(!addAOrAn) english
org/nlogo/compiler/TypeParser.scala:175:      else if(english.charAt(0) == 'o') "an " + english
org/nlogo/compiler/TypeParser.scala-176-      else "a " + english
org/nlogo/compiler/TypeParser.scala-177-    }
org/nlogo/editor/Actions.scala-29-  }
org/nlogo/editor/Actions.scala-30-
org/nlogo/editor/Actions.scala:31:  class TabKeyAction extends MyTextAction("tab-key", _.indentSelection() )
org/nlogo/editor/Actions.scala:32:  class ShiftTabKeyAction extends MyTextAction("shift-tab-key", e => { e.shiftLeft(); e.shiftLeft() })
org/nlogo/editor/Actions.scala:33:  class CommentAction extends MyTextAction("comment-line", _.insertBeforeEachSelectedLine(";"))
org/nlogo/editor/Actions.scala:34:  class UncommentAction extends MyTextAction("uncomment-line", _.uncomment())
org/nlogo/editor/Actions.scala:35:  class ShiftLeftAction extends MyTextAction("shift-line-left", _.shiftLeft() )
org/nlogo/editor/Actions.scala:36:  class ShiftRightAction extends MyTextAction("shift-line-right", _.insertBeforeEachSelectedLine(" ") )
org/nlogo/editor/Actions.scala:37:  class QuickHelpAction(colorizer:Colorizer[_]) extends MyTextAction(I18N.gui.get("tabs.code.rightclick.quickhelp"), e => {
org/nlogo/editor/Actions.scala-38-    colorizer.doHelp(e, e.getHelpTarget(e.getSelectionStart))
org/nlogo/editor/Actions.scala-39-  })
org/nlogo/editor/Actions.scala:40:  class MouseQuickHelpAction(colorizer:Colorizer[_]) extends MyTextAction(I18N.gui.get("tabs.code.rightclick.quickhelp"),
org/nlogo/editor/Actions.scala-41-    e => { colorizer.doHelp(e, e.getHelpTarget(e.getMousePos)) }
org/nlogo/editor/Actions.scala-42-  )
org/nlogo/editor/EditorArea.java-96-			  UndoManager.redoAction() ) ;
org/nlogo/editor/EditorArea.java-97-
org/nlogo/editor/EditorArea.java-100-		getInputMap().put
org/nlogo/editor/EditorArea.java-139-		EnterAction()
org/nlogo/editor/EditorArea.java-140-		{
org/nlogo/editor/EditorArea.java:141:			super( "enter" ) ;
org/nlogo/editor/EditorArea.java-142-		}
org/nlogo/editor/EditorArea.java-143-		public void actionPerformed( java.awt.event.ActionEvent e )
org/nlogo/editor/EditorArea.java-152-		CloseBracketAction()
org/nlogo/editor/EditorArea.java-153-		{
org/nlogo/editor/EditorArea.java:154:			super( "close-bracket" ) ;
org/nlogo/editor/EditorArea.java-155-		}
org/nlogo/editor/EditorArea.java-156-		public void actionPerformed( java.awt.event.ActionEvent e )
org/nlogo/editor/EditorArea.java-461-		javax.swing.JPopupMenu menu = new javax.swing.JPopupMenu() ;
org/nlogo/editor/EditorArea.java-462-		menu.add( new javax.swing.JMenuItem( Actions.COPY_ACTION()) ) ;
org/nlogo/editor/EditorArea.java:463:		Actions.COPY_ACTION().putValue( javax.swing.Action.NAME , I18N.gui().get("menu.edit.copy") ) ;
org/nlogo/editor/EditorArea.java-464-		menu.add( new javax.swing.JMenuItem( Actions.CUT_ACTION() ) ) ;
org/nlogo/editor/EditorArea.java:465:		Actions.CUT_ACTION().putValue( javax.swing.Action.NAME , I18N.gui().get("menu.edit.cut") ) ;
org/nlogo/editor/EditorArea.java-466-		menu.add( new javax.swing.JMenuItem( Actions.PASTE_ACTION() ) ) ;
org/nlogo/editor/EditorArea.java:467:		Actions.PASTE_ACTION().putValue( javax.swing.Action.NAME , I18N.gui().get("menu.edit.paste") ) ;
org/nlogo/editor/EditorArea.java-468-		menu.addSeparator() ;
org/nlogo/editor/EditorArea.java-469-		menu.add( new javax.swing.JMenuItem( new Actions.MouseQuickHelpAction( colorizer ) ) ) ;
org/nlogo/editor/EditorArea.java-517-	String getHelpTarget( int startPosition )
org/nlogo/editor/EditorArea.java-518-	{
org/nlogo/editor/EditorArea.java:519:		// determine the current "word" that the cursor is on
org/nlogo/editor/EditorArea.java-520-		javax.swing.text.PlainDocument doc = (javax.swing.text.PlainDocument) getDocument() ;
org/nlogo/editor/EditorArea.java-521-		try
org/nlogo/editor/HighlightView.java-72-
org/nlogo/editor/HighlightView.java-73-	private static final boolean LEAVE_COLORS_ALONE = 
org/nlogo/editor/HighlightView.java:74:		System.getProperty( "os.name" ).startsWith( "Mac" ) ;
org/nlogo/editor/HighlightView.java-75-	private int drawText( java.awt.Graphics g ,
org/nlogo/editor/HighlightView.java-76-						  int x , int y ,
org/nlogo/editor/HighlightView.java-112-
org/nlogo/editor/HighlightView.java-113-	private static final java.awt.Color SELECTED_BACKGROUND_COLOR =
org/nlogo/editor/HighlightView.java:114:		retrieveDefaultUIColor( "textHighlight" , java.awt.Color.BLUE ) ;
org/nlogo/editor/HighlightView.java-115-	private static final java.awt.Color UNSELECTED_TEXT_COLOR =  
org/nlogo/editor/HighlightView.java:116:		retrieveDefaultUIColor( "textText" , java.awt.Color.BLACK ) ;
org/nlogo/editor/HighlightView.java-117-	private static final java.awt.Color SELECTED_TEXT_COLOR =  
org/nlogo/editor/HighlightView.java:118:		retrieveDefaultUIColor( "textHighlightText" , java.awt.Color.WHITE ) ;
org/nlogo/editor/HighlightView.java-119-
org/nlogo/editor/HighlightView.java-120-	private java.awt.Color selectedColor( java.awt.Color color )
org/nlogo/editor/UndoManager.java-154-		public UndoAction()
org/nlogo/editor/UndoManager.java-155-		{
org/nlogo/editor/UndoManager.java:156:			super( "Undo" ) ;
org/nlogo/editor/UndoManager.java-157-			setEnabled( false ) ;
org/nlogo/editor/UndoManager.java-158-		}
org/nlogo/editor/UndoManager.java-175-			{
org/nlogo/editor/UndoManager.java-176-				setEnabled( false ) ;
org/nlogo/editor/UndoManager.java:177:				putValue( NAME , "Undo" ) ;
org/nlogo/editor/UndoManager.java-178-			}
org/nlogo/editor/UndoManager.java-179-		}
org/nlogo/editor/UndoManager.java-185-		public RedoAction()
org/nlogo/editor/UndoManager.java-186-		{
org/nlogo/editor/UndoManager.java:187:			super( "Redo" ) ;
org/nlogo/editor/UndoManager.java-188-			setEnabled( false ) ;
org/nlogo/editor/UndoManager.java-189-		}
org/nlogo/editor/UndoManager.java-206-			{
org/nlogo/editor/UndoManager.java-207-				setEnabled( false ) ;
org/nlogo/editor/UndoManager.java:208:				putValue( NAME , "Redo" ) ;
org/nlogo/editor/UndoManager.java-209-			}
org/nlogo/editor/UndoManager.java-210-		}
org/nlogo/generator/BytecodeUtils.scala-17-      val result = getMethods(instr.getClass).nonEmpty
org/nlogo/generator/BytecodeUtils.scala-18-      if(!result && DEBUG_LOG_NOT_REJIGGERED)
org/nlogo/generator/BytecodeUtils.scala:19:        println("debug: not rejiggered: " + instr.getClass.getName)
org/nlogo/generator/BytecodeUtils.scala-20-      result
org/nlogo/generator/BytecodeUtils.scala-21-    }
org/nlogo/generator/BytecodeUtils.scala-22-
org/nlogo/generator/BytecodeUtils.scala-23-  def getUnrejiggeredMethod(i:Instruction):Method = {
org/nlogo/generator/BytecodeUtils.scala:24:    val name = i match { case _:Command => "perform"; case _:Reporter => "report" }
org/nlogo/generator/BytecodeUtils.scala-25-    i.getClass.getMethods.find(_.getName == name).get
org/nlogo/generator/BytecodeUtils.scala-26-  }
org/nlogo/generator/BytecodeUtils.scala-33-    val profilingMethods =
org/nlogo/generator/BytecodeUtils.scala-34-      if(profilingEnabled)
org/nlogo/generator/BytecodeUtils.scala:35:        allMethods.filter(m => m.getName.startsWith("profiling_report") ||
org/nlogo/generator/BytecodeUtils.scala:36:                               m.getName.startsWith("profiling_perform"))
org/nlogo/generator/BytecodeUtils.scala-37-      else Nil
org/nlogo/generator/BytecodeUtils.scala-38-    if(!profilingMethods.isEmpty)
org/nlogo/generator/BytecodeUtils.scala-39-      profilingMethods
org/nlogo/generator/BytecodeUtils.scala:40:    else allMethods.filter(m => m.getName.startsWith("report_") ||
org/nlogo/generator/BytecodeUtils.scala:41:                                m.getName.startsWith("perform_"))
org/nlogo/generator/BytecodeUtils.scala-42-  }
org/nlogo/generator/BytecodeUtils.scala-43-
org/nlogo/generator/CustomGenerator.scala-75-   */
org/nlogo/generator/CustomGenerator.scala-76-  private def generateCall(instr:_call,mv:GeneratorAdapter,thisInstrUID:Int) {
org/nlogo/generator/CustomGenerator.scala:77:    mv.keepField("procedure",instr.procedure,thisInstrUID)
org/nlogo/generator/CustomGenerator.scala:78:    mv.visitTypeInsn(NEW,"org/nlogo/nvm/Activation")
org/nlogo/generator/CustomGenerator.scala-79-    // stack: Activation
org/nlogo/generator/CustomGenerator.scala-80-    mv.visitInsn(DUP)
org/nlogo/generator/CustomGenerator.scala-81-    // stack: Activation Activation
org/nlogo/generator/CustomGenerator.scala:82:    mv.loadKeptField("procedure",thisInstrUID)
org/nlogo/generator/CustomGenerator.scala-83-    // stack: Activation Activation Procedure
org/nlogo/generator/CustomGenerator.scala-84-    mv.visitVarInsn(ALOAD,1)
org/nlogo/generator/CustomGenerator.scala-85-    // stack: Activation Activation Procedure Context
org/nlogo/generator/CustomGenerator.scala:86:    mv.visitFieldInsn(GETFIELD,"org/nlogo/nvm/Context","activation","Lorg/nlogo/nvm/Activation;")
org/nlogo/generator/CustomGenerator.scala-87-    // stack: Activation Activation Procedure Activation
org/nlogo/generator/CustomGenerator.scala-88-    mv.push(instr.next)
org/nlogo/generator/CustomGenerator.scala-89-    // stack: Activation Activation Procedure Activation int
org/nlogo/generator/CustomGenerator.scala:90:    mv.visitMethodInsn(INVOKESPECIAL,"org/nlogo/nvm/Activation","<init>","(Lorg/nlogo/nvm/Procedure;Lorg/nlogo/nvm/Activation;I)V")
org/nlogo/generator/CustomGenerator.scala-91-    // operand stack: Activation
org/nlogo/generator/CustomGenerator.scala-92-    for(i <- 0 until (instr.procedure.args.size - instr.procedure.localsCount)) {
org/nlogo/generator/CustomGenerator.scala-93-      // newActivation.args[ i ] = args[ i ].report(context) 
org/nlogo/generator/CustomGenerator.scala-94-      mv.visitInsn(DUP)
org/nlogo/generator/CustomGenerator.scala:95:      mv.visitFieldInsn(GETFIELD,"org/nlogo/nvm/Activation","args","[Ljava/lang/Object;")
org/nlogo/generator/CustomGenerator.scala-96-      mv.push(i)
org/nlogo/generator/CustomGenerator.scala-97-      // operand stack: Activation Args[] i
org/nlogo/generator/CustomGenerator.scala-106-    mv.visitInsn(SWAP)
org/nlogo/generator/CustomGenerator.scala-107-    // operand stack: [Activation] Context Activation  
org/nlogo/generator/CustomGenerator.scala:108:    mv.visitFieldInsn(PUTFIELD,"org/nlogo/nvm/Context","activation","Lorg/nlogo/nvm/Activation;")
org/nlogo/generator/CustomGenerator.scala-109-    // operand stack: [Activation]  
org/nlogo/generator/CustomGenerator.scala-110-    mv.visitVarInsn(ALOAD,1)
org/nlogo/generator/CustomGenerator.scala-111-    mv.visitInsn(ICONST_0)
org/nlogo/generator/CustomGenerator.scala-112-    // operand stack: [Activation] Context 0
org/nlogo/generator/CustomGenerator.scala:113:    mv.visitFieldInsn(PUTFIELD,"org/nlogo/nvm/Context","ip","I")
org/nlogo/generator/CustomGenerator.scala-114-    // operand stack: [Activation]  
org/nlogo/generator/CustomGenerator.scala-115-    if(profilingEnabled) {
org/nlogo/generator/CustomGenerator.scala-117-      mv.visitVarInsn(ALOAD,0)
org/nlogo/generator/CustomGenerator.scala-118-      // operand stack: Activation Instruction
org/nlogo/generator/CustomGenerator.scala:119:      mv.visitFieldInsn(GETFIELD, "org/nlogo/nvm/Instruction","workspace","Lorg/nlogo/nvm/Workspace;")
org/nlogo/generator/CustomGenerator.scala-120-      // operand stack: Activation Workspace
org/nlogo/generator/CustomGenerator.scala:121:      mv.visitMethodInsn(INVOKEINTERFACE,"org/nlogo/nvm/Workspace","profilingTracer","()Lorg/nlogo/nvm/Tracer;")
org/nlogo/generator/CustomGenerator.scala-122-      // operand stack: Activation Tracer
org/nlogo/generator/CustomGenerator.scala-123-      mv.visitInsn(SWAP)
org/nlogo/generator/CustomGenerator.scala-126-      mv.visitInsn(SWAP)
org/nlogo/generator/CustomGenerator.scala-127-      // operand stack: Tracer Context Activation  
org/nlogo/generator/CustomGenerator.scala:128:      mv.visitMethodInsn(INVOKEVIRTUAL,"org/nlogo/nvm/Tracer","openCallRecord",
org/nlogo/generator/CustomGenerator.scala:129:                         "(Lorg/nlogo/nvm/Context;Lorg/nlogo/nvm/Activation;)V")
org/nlogo/generator/CustomGenerator.scala-130-    }
org/nlogo/generator/CustomGenerator.scala-131-  }
org/nlogo/generator/CustomGenerator.scala-145-   */
org/nlogo/generator/CustomGenerator.scala-146-  private def generateCallReport(instr:_callreport,mv:GeneratorAdapter,thisInstrUID:Int,ip:Int) {
org/nlogo/generator/CustomGenerator.scala:147:    mv.keepField("procedure",instr.procedure,thisInstrUID)
org/nlogo/generator/CustomGenerator.scala:148:    mv.visitTypeInsn(NEW,"org/nlogo/nvm/Activation")
org/nlogo/generator/CustomGenerator.scala-149-    // stack: Activation
org/nlogo/generator/CustomGenerator.scala-150-    mv.visitInsn(DUP)
org/nlogo/generator/CustomGenerator.scala-151-    // stack: Activation Activation
org/nlogo/generator/CustomGenerator.scala:152:    mv.loadKeptField("procedure",thisInstrUID)
org/nlogo/generator/CustomGenerator.scala-153-    // stack: Activation Activation Procedure
org/nlogo/generator/CustomGenerator.scala-154-    mv.visitVarInsn(ALOAD,1)
org/nlogo/generator/CustomGenerator.scala-155-    // stack: Activation Activation Procedure Context
org/nlogo/generator/CustomGenerator.scala:156:    mv.visitFieldInsn(GETFIELD,"org/nlogo/nvm/Context","activation","Lorg/nlogo/nvm/Activation;")
org/nlogo/generator/CustomGenerator.scala-157-    // stack: Activation Activation Procedure Activation
org/nlogo/generator/CustomGenerator.scala-158-    mv.push(ip)
org/nlogo/generator/CustomGenerator.scala-159-    // stack: Activation Activation Procedure Activation int
org/nlogo/generator/CustomGenerator.scala:160:    mv.visitMethodInsn(INVOKESPECIAL,"org/nlogo/nvm/Activation","<init>","(Lorg/nlogo/nvm/Procedure;Lorg/nlogo/nvm/Activation;I)V")
org/nlogo/generator/CustomGenerator.scala-161-    // operand stack:  Activation
org/nlogo/generator/CustomGenerator.scala-162-    for(i <- 0 until (instr.procedure.args.size - instr.procedure.localsCount)) {
org/nlogo/generator/CustomGenerator.scala-163-      // newActivation.args[ i ] = args[ i ].report(context)
org/nlogo/generator/CustomGenerator.scala-164-      mv.visitInsn(DUP)
org/nlogo/generator/CustomGenerator.scala:165:      mv.visitFieldInsn(GETFIELD,"org/nlogo/nvm/Activation","args","[Ljava/lang/Object;")
org/nlogo/generator/CustomGenerator.scala-166-      mv.push(i)
org/nlogo/generator/CustomGenerator.scala-167-      // operand stack: Activation Args[] i
org/nlogo/generator/CustomGenerator.scala-178-      mv.visitVarInsn(ALOAD,0)
org/nlogo/generator/CustomGenerator.scala-179-      // operand stack: Activation Activation Activation Instruction
org/nlogo/generator/CustomGenerator.scala:180:      mv.visitFieldInsn(GETFIELD, "org/nlogo/nvm/Instruction","workspace","Lorg/nlogo/nvm/Workspace;")
org/nlogo/generator/CustomGenerator.scala-181-      // operand stack: Activation Activation Activation Workspace
org/nlogo/generator/CustomGenerator.scala:182:      mv.visitMethodInsn(INVOKEINTERFACE,"org/nlogo/nvm/Workspace","profilingTracer","()Lorg/nlogo/nvm/Tracer;") ;
org/nlogo/generator/CustomGenerator.scala-183-      // operand stack: Activation Activation Activation Tracer
org/nlogo/generator/CustomGenerator.scala-184-      mv.visitInsn(SWAP)
org/nlogo/generator/CustomGenerator.scala-187-      mv.visitInsn(SWAP)
org/nlogo/generator/CustomGenerator.scala-188-      // operand stack: Activation Activation Tracer Context Activation  
org/nlogo/generator/CustomGenerator.scala:189:      mv.visitMethodInsn(INVOKEVIRTUAL,"org/nlogo/nvm/Tracer","openCallRecord",
org/nlogo/generator/CustomGenerator.scala:190:                         "(Lorg/nlogo/nvm/Context;Lorg/nlogo/nvm/Activation;)V")
org/nlogo/generator/CustomGenerator.scala-191-    }
org/nlogo/generator/CustomGenerator.scala-192-    // operand stack: [Activation] Activation  
org/nlogo/generator/CustomGenerator.scala-193-    mv.visitVarInsn(ALOAD,1)
org/nlogo/generator/CustomGenerator.scala-194-    mv.visitInsn(SWAP)
org/nlogo/generator/CustomGenerator.scala:195:    mv.visitMethodInsn(INVOKEVIRTUAL,"org/nlogo/nvm/Context","callReporterProcedure",
org/nlogo/generator/CustomGenerator.scala:196:                       "(Lorg/nlogo/nvm/Activation;)Ljava/lang/Object;")
org/nlogo/generator/CustomGenerator.scala-197-    // operand stack: [Activation] resultObj
org/nlogo/generator/CustomGenerator.scala-198-    if(profilingEnabled) {
org/nlogo/generator/CustomGenerator.scala-200-      mv.visitVarInsn(ALOAD,0)
org/nlogo/generator/CustomGenerator.scala-201-      // operand stack: resultObj Activation Instruction
org/nlogo/generator/CustomGenerator.scala:202:      mv.visitFieldInsn(GETFIELD, "org/nlogo/nvm/Instruction","workspace","Lorg/nlogo/nvm/Workspace;")
org/nlogo/generator/CustomGenerator.scala-203-      // operand stack: resultObj Activation Workspace
org/nlogo/generator/CustomGenerator.scala:204:      mv.visitMethodInsn(INVOKEINTERFACE,"org/nlogo/nvm/Workspace","profilingTracer","()Lorg/nlogo/nvm/Tracer;")
org/nlogo/generator/CustomGenerator.scala-205-      // operand stack: resultObj Activation Tracer
org/nlogo/generator/CustomGenerator.scala-206-      mv.visitInsn(SWAP)
org/nlogo/generator/CustomGenerator.scala-209-      mv.visitInsn(SWAP)
org/nlogo/generator/CustomGenerator.scala-210-      // operand stack: resultObj Tracer Context Activation  
org/nlogo/generator/CustomGenerator.scala:211:      mv.visitMethodInsn(INVOKEVIRTUAL,"org/nlogo/nvm/Tracer","closeCallRecord",
org/nlogo/generator/CustomGenerator.scala:212:                         "(Lorg/nlogo/nvm/Context;Lorg/nlogo/nvm/Activation;)V")
org/nlogo/generator/CustomGenerator.scala-213-    }
org/nlogo/generator/CustomGenerator.scala-214-    // operand stack: resultObj  
org/nlogo/generator/CustomGenerator.scala-216-    val lSkip = new Label
org/nlogo/generator/CustomGenerator.scala-217-    mv.visitJumpInsn(IFNONNULL,lSkip)
org/nlogo/generator/CustomGenerator.scala:218:    mv.visitTypeInsn(NEW,"org/nlogo/nvm/EngineException")
org/nlogo/generator/CustomGenerator.scala-219-    mv.visitInsn(DUP)
org/nlogo/generator/CustomGenerator.scala-220-    mv.visitVarInsn(ALOAD,1)
org/nlogo/generator/CustomGenerator.scala-221-    mv.visitVarInsn(ALOAD,0)
org/nlogo/generator/CustomGenerator.scala:222:    mv.visitLdcInsn("the " + instr.procedure.name + " procedure failed to report a result")
org/nlogo/generator/CustomGenerator.scala:223:    mv.visitMethodInsn(INVOKESPECIAL,"org/nlogo/nvm/EngineException","<init>",
org/nlogo/generator/CustomGenerator.scala:224:                       "(Lorg/nlogo/nvm/Context;Lorg/nlogo/nvm/Instruction;Ljava/lang/String;)V")
org/nlogo/generator/CustomGenerator.scala-225-    mv.visitInsn(ATHROW)
org/nlogo/generator/CustomGenerator.scala-226-    mv.visitLabel(lSkip)
org/nlogo/generator/CustomGenerator.scala-237-   */
org/nlogo/generator/CustomGenerator.scala-238-  private def generateList(instr:_list,mv:GeneratorAdapter,thisInstrUID:Int) {
org/nlogo/generator/CustomGenerator.scala:239:    mv.visitTypeInsn(NEW,"org/nlogo/api/LogoList")
org/nlogo/generator/CustomGenerator.scala-240-    mv.visitInsn(DUP)
org/nlogo/generator/CustomGenerator.scala:241:    mv.visitMethodInsn(INVOKESPECIAL,"org/nlogo/api/LogoList","<init>","()V")
org/nlogo/generator/CustomGenerator.scala-242-    for(i <- 0 until instr.args.length) {
org/nlogo/generator/CustomGenerator.scala-243-      mv.visitInsn(DUP)
org/nlogo/generator/CustomGenerator.scala-245-      mv.generateArgument(instr,i,classOf[Object],thisInstrUID)
org/nlogo/generator/CustomGenerator.scala-246-      mv.markLineNumber(thisInstrUID)
org/nlogo/generator/CustomGenerator.scala:247:      mv.visitMethodInsn(INVOKEVIRTUAL,"org/nlogo/api/LogoList","add","(Ljava/lang/Object;)Z")
org/nlogo/generator/CustomGenerator.scala-248-      mv.visitInsn(POP)
org/nlogo/generator/CustomGenerator.scala-249-    }
org/nlogo/generator/CustomGenerator.scala-269-   */
org/nlogo/generator/CustomGenerator.scala-270-  private def generateSentence(instr:_sentence,mv:GeneratorAdapter,thisInstrUID:Int) {
org/nlogo/generator/CustomGenerator.scala:271:    mv.visitTypeInsn(NEW,"org/nlogo/api/LogoList")
org/nlogo/generator/CustomGenerator.scala-272-    mv.visitInsn(DUP)
org/nlogo/generator/CustomGenerator.scala:273:    mv.visitMethodInsn(INVOKESPECIAL,"org/nlogo/api/LogoList","<init>","()V")
org/nlogo/generator/CustomGenerator.scala-274-    // operand stack: LIST
org/nlogo/generator/CustomGenerator.scala-275-    for(i <- 0 until instr.args.length) {
org/nlogo/generator/CustomGenerator.scala-279-      mv.visitInsn(DUP)
org/nlogo/generator/CustomGenerator.scala-280-      // operand stack: LIST LIST OBJ OBJ
org/nlogo/generator/CustomGenerator.scala:281:      mv.visitTypeInsn(INSTANCEOF,"org/nlogo/api/LogoList")
org/nlogo/generator/CustomGenerator.scala-282-      val l1 = new Label
org/nlogo/generator/CustomGenerator.scala-283-      mv.visitJumpInsn(IFEQ,l1)
org/nlogo/generator/CustomGenerator.scala-284-      // operand stack: LIST LIST OBJ
org/nlogo/generator/CustomGenerator.scala:285:      //mv.visitTypeInsn(CHECKCAST,"org/nlogo/api/LogoList")
org/nlogo/generator/CustomGenerator.scala:286:      mv.visitMethodInsn(INVOKEVIRTUAL,"org/nlogo/api/LogoList","addAll","(Ljava/util/Collection;)Z")
org/nlogo/generator/CustomGenerator.scala-287-      mv.visitInsn(POP)
org/nlogo/generator/CustomGenerator.scala-288-      // operand stack: LIST
org/nlogo/generator/CustomGenerator.scala-291-      mv.visitLabel(l1)
org/nlogo/generator/CustomGenerator.scala-292-      // operand stack: LIST LIST OBJ
org/nlogo/generator/CustomGenerator.scala:293:      mv.visitMethodInsn(INVOKEVIRTUAL,"org/nlogo/api/LogoList","add","(Ljava/lang/Object;)Z")
org/nlogo/generator/CustomGenerator.scala-294-      mv.visitInsn(POP)
org/nlogo/generator/CustomGenerator.scala-295-      // operand stack: LIST
org/nlogo/generator/CustomGenerator.scala-308-   }*/
org/nlogo/generator/CustomGenerator.scala-309-  private def generateWord(instr:_word,mv:GeneratorAdapter,thisInstrUID:Int) {
org/nlogo/generator/CustomGenerator.scala:310:    mv.visitTypeInsn(NEW,"java/lang/StringBuilder")
org/nlogo/generator/CustomGenerator.scala-311-    mv.visitInsn(DUP)
org/nlogo/generator/CustomGenerator.scala:312:    mv.visitMethodInsn(INVOKESPECIAL,"java/lang/StringBuilder","<init>","()V")
org/nlogo/generator/CustomGenerator.scala-313-    // operand stack: SB
org/nlogo/generator/CustomGenerator.scala-314-    for(i <- 0 until instr.args.length) {
org/nlogo/generator/CustomGenerator.scala-315-      mv.generateArgument(instr,i,classOf[Object],thisInstrUID)
org/nlogo/generator/CustomGenerator.scala-316-      // operand stack: SB OBJ
org/nlogo/generator/CustomGenerator.scala:317:      mv.visitMethodInsn(INVOKESTATIC,"org/nlogo/api/Dump","logoObject",
org/nlogo/generator/CustomGenerator.scala:318:                         "(Ljava/lang/Object;)Ljava/lang/String;")
org/nlogo/generator/CustomGenerator.scala-319-      // operand stack: SB STR
org/nlogo/generator/CustomGenerator.scala:320:      mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/StringBuilder","append",
org/nlogo/generator/CustomGenerator.scala:321:                         "(Ljava/lang/String;)Ljava/lang/StringBuilder;")
org/nlogo/generator/CustomGenerator.scala-322-      // operand stack: SB
org/nlogo/generator/CustomGenerator.scala-323-    }
org/nlogo/generator/CustomGenerator.scala:324:    mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/StringBuilder","toString",
org/nlogo/generator/CustomGenerator.scala:325:                       "()Ljava/lang/String;")
org/nlogo/generator/CustomGenerator.scala-326-  }
org/nlogo/generator/CustomGenerator.scala-327-}
org/nlogo/generator/GeneratedInstruction.scala-16-      catch { case _: NoSuchFieldException => None }
org/nlogo/generator/GeneratedInstruction.scala-17-    for{elem <- ex.getStackTrace
org/nlogo/generator/GeneratedInstruction.scala:18:        if elem.getClassName.containsSlice("_asm_")
org/nlogo/generator/GeneratedInstruction.scala-19-        val id = elem.getLineNumber  // in bytecode LineNumbers delineate instruction boundaries
org/nlogo/generator/GeneratedInstruction.scala-20-        if id > 0
org/nlogo/generator/GeneratedInstruction.scala-30-    val spaceString = List.fill(indentLevel * 2)(' ').mkString
org/nlogo/generator/GeneratedInstruction.scala-31-    val bytecode = disassembly.value
org/nlogo/generator/GeneratedInstruction.scala:32:    if(bytecode != "") buf ++= spaceString + disassembly.value.replaceAll("\n","\n" + spaceString)
org/nlogo/generator/GeneratedInstruction.scala-33-    buf.toString
org/nlogo/generator/GeneratedInstruction.scala-34-  }
org/nlogo/generator/Generator.scala-2-import org.nlogo.nvm.{Command,CustomGenerated,GeneratorInterface,Instruction,Procedure,Reporter,Syntax}
org/nlogo/generator/Generator.scala-3-object Generator {
org/nlogo/generator/Generator.scala:4:  private[generator] val KEPT_INSTRUCTION_PREFIX = "keptinstr"
org/nlogo/generator/Generator.scala-5-  // If this is set to true, then it will slow down the compiler IMMENSELY.  What it does, is write
org/nlogo/generator/Generator.scala:6:  // out the bytecode of all the GeneratedInstructions to the "tmp/" folder.
org/nlogo/generator/Generator.scala-7-  private val DEBUG_DUMP_CLASS_FILES = false
org/nlogo/generator/Generator.scala-8-  // If a generated method exceeds this size in bytes, a warning will be printed to stderr
org/nlogo/generator/Generator.scala-46-    var nlgen:GeneratorAdapter = null
org/nlogo/generator/Generator.scala-47-    val superClassFullName = original match {
org/nlogo/generator/Generator.scala:48:      case _:Command => "org/nlogo/generator/GeneratedCommand"
org/nlogo/generator/Generator.scala:49:      case _:Reporter => "org/nlogo/generator/GeneratedReporter"
org/nlogo/generator/Generator.scala-50-    }
org/nlogo/generator/Generator.scala:51:    // keep track of the "number" of the instruction we are processing useful for uniquely naming
org/nlogo/generator/Generator.scala-52-    // fields that were inlined/kept, and used to drop fake linenumbers into the bytecode, to use to
org/nlogo/generator/Generator.scala-53-    // tell what instruction was being executed, during error handling later.  ~Forrest (6/5/06)
org/nlogo/generator/Generator.scala-56-      val cName = original.getClass.getName
org/nlogo/generator/Generator.scala-57-      val pName = procedure.name.toLowerCase.filter(_.isLetterOrDigit).mkString
org/nlogo/generator/Generator.scala:58:      "_asm" + "_" + pName + cName.substring(cName.lastIndexOf('.') + 1) + "_" + nextCustomClassNumUID()
org/nlogo/generator/Generator.scala-59-    }
org/nlogo/generator/Generator.scala:60:    val fullClassName = "org/nlogo/prim/" + className
org/nlogo/generator/Generator.scala-61-    def generate():A = {
org/nlogo/generator/Generator.scala-62-      cw.visit(V1_5,ACC_PUBLIC + ACC_SUPER,fullClassName,null,superClassFullName,null)
org/nlogo/generator/Generator.scala-64-      generateConstructor()
org/nlogo/generator/Generator.scala-65-      val methodName = original match {
org/nlogo/generator/Generator.scala:66:        case _:Command => "perform"
org/nlogo/generator/Generator.scala:67:        case _:Reporter => "report"
org/nlogo/generator/Generator.scala-68-      }
org/nlogo/generator/Generator.scala-69-      val methodDescriptor = original match {
org/nlogo/generator/Generator.scala:70:        case _:Command => "(Lorg/nlogo/nvm/Context;)V"
org/nlogo/generator/Generator.scala:71:        case _:Reporter => "(Lorg/nlogo/nvm/Context;)Ljava/lang/Object;"
org/nlogo/generator/Generator.scala-72-      }
org/nlogo/generator/Generator.scala-73-      var mv = cw.visitMethod(REPORT_PERFORM_ACCESS_CODES,methodName,methodDescriptor,
org/nlogo/generator/Generator.scala:74:                              null,Array("org/nlogo/api/LogoException"))
org/nlogo/generator/Generator.scala-75-      mv = new PeepholeOptimizer3B(mv) // order is important for 3B/3
org/nlogo/generator/Generator.scala-76-      mv = new PeepholeOptimizer3(mv)
org/nlogo/generator/Generator.scala-89-    }
org/nlogo/generator/Generator.scala-90-    def generateConstructor() {
org/nlogo/generator/Generator.scala:91:      val constructor = cw.visitMethod(ACC_PUBLIC,"<init>","()V",null,null)
org/nlogo/generator/Generator.scala-92-      constructor.visitCode()
org/nlogo/generator/Generator.scala-93-      constructor.visitVarInsn(ALOAD,0)
org/nlogo/generator/Generator.scala:94:      constructor.visitMethodInsn(INVOKESPECIAL,superClassFullName,"<init>","()V")
org/nlogo/generator/Generator.scala-95-      constructor.visitInsn(RETURN)
org/nlogo/generator/Generator.scala-96-      constructor.visitMaxs(0,0)
org/nlogo/generator/Generator.scala-193-        case _:Reporter =>
org/nlogo/generator/Generator.scala-194-          nlgen.visitMethodInsn(INVOKEVIRTUAL,Type.getInternalName(instr.getClass),
org/nlogo/generator/Generator.scala:195:                                "report","(Lorg/nlogo/nvm/Context;)Ljava/lang/Object;")
org/nlogo/generator/Generator.scala-196-          nlgen.markLineNumber(parentInstrUID)
org/nlogo/generator/Generator.scala-197-          nlgen.generateConversion(classOf[Object],retTypeWanted,parentInstr,argIndex)
org/nlogo/generator/Generator.scala-198-        case _:Command =>
org/nlogo/generator/Generator.scala-199-          nlgen.visitMethodInsn(INVOKEVIRTUAL,Type.getInternalName(instr.getClass),
org/nlogo/generator/Generator.scala:200:                                "perform","(Lorg/nlogo/nvm/Context;)V")
org/nlogo/generator/Generator.scala-201-      }
org/nlogo/generator/Generator.scala-202-      // now, we want to recursively try to generate all args[] of instr
org/nlogo/generator/Generator.scala-204-    }
org/nlogo/generator/Generator.scala-212-    def generateInitMethod() {
org/nlogo/generator/Generator.scala:213:      val mv = cw.visitMethod(ACC_PUBLIC,"init","(Lorg/nlogo/nvm/Workspace;)V",null,null)
org/nlogo/generator/Generator.scala-214-      mv.visitCode()
org/nlogo/generator/Generator.scala-215-      // first invoke super.init()
org/nlogo/generator/Generator.scala-216-      mv.visitVarInsn(ALOAD,0)
org/nlogo/generator/Generator.scala-217-      mv.visitVarInsn(ALOAD,1)
org/nlogo/generator/Generator.scala:218:      mv.visitMethodInsn(INVOKESPECIAL,superClassFullName,"init","(Lorg/nlogo/nvm/Workspace;)V")
org/nlogo/generator/Generator.scala-219-      // push the original instruction onto the stack...
org/nlogo/generator/Generator.scala-220-      val fieldName = Generator.KEPT_INSTRUCTION_PREFIX + "1"
org/nlogo/generator/Generator.scala-225-      // String cName = Type.getInternalName(original.getClass())
org/nlogo/generator/Generator.scala-226-      mv.visitVarInsn(ALOAD,1)
org/nlogo/generator/Generator.scala:227:      mv.visitMethodInsn(INVOKEVIRTUAL,"org/nlogo/nvm/Instruction","init","(Lorg/nlogo/nvm/Workspace;)V")
org/nlogo/generator/Generator.scala-228-      mv.visitInsn(RETURN)
org/nlogo/generator/Generator.scala-229-      mv.visitMaxs(0,0)
org/nlogo/generator/Generator.scala-245-      // disassembly is stored as a thunk, so it's not generated unless used
org/nlogo/generator/Generator.scala-246-      def isBoring(line:String) =
org/nlogo/generator/Generator.scala:247:        List("\\s*LINENUMBER.*","\\s*MAXSTACK.*","\\s*MAXLOCALS.*").exists(line.matches(_))
org/nlogo/generator/Generator.scala-248-      result.disassembly = new org.nlogo.util.Thunk[String] { def compute = {
org/nlogo/generator/Generator.scala-249-        val sw = new java.io.StringWriter
org/nlogo/generator/Generator.scala-250-        new ClassReader(bytecode).accept(new TraceClassVisitor(new java.io.PrintWriter(sw)),0)
org/nlogo/generator/Generator.scala-251-        // (?s) = let dot match newlines. match until blank line (don't include init method)
org/nlogo/generator/Generator.scala:252:        """(?s)public final strictfp (?:perform|report).*?\n(.*?)\n\s*\n""".r
org/nlogo/generator/Generator.scala-253-          .findFirstMatchIn(sw.getBuffer.toString).get.subgroups.head
org/nlogo/generator/Generator.scala:254:          .split("\n").filter(!isBoring(_)).mkString("\n")
org/nlogo/generator/Generator.scala-255-      }}
org/nlogo/generator/Generator.scala-256-      if(debugEndOfMethodLabel.getOffset > Generator.METHOD_SIZE_WARNING_THRESHOLD) {
org/nlogo/generator/Generator.scala-257-        System.err.println
org/nlogo/generator/Generator.scala:258:        System.err.println("WARNING: method size=" + debugEndOfMethodLabel.getOffset +
org/nlogo/generator/Generator.scala:259:                           " for " + fullClassName)
org/nlogo/generator/Generator.scala-260-      }
org/nlogo/generator/Generator.scala-261-      // for debugging, we could dump the created bytecode to a file...
org/nlogo/generator/Generator.scala-262-      if(Generator.DEBUG_DUMP_CLASS_FILES) {
org/nlogo/generator/Generator.scala:263:        val fout = new java.io.FileOutputStream("tmp/" + className + ".class")
org/nlogo/generator/Generator.scala-264-        fout.write(bytecode)
org/nlogo/generator/Generator.scala-265-        fout.close()
org/nlogo/generator/Generator.scala-301-    }
org/nlogo/generator/Generator.scala-302-    def remapFieldName(originalName:String,instrUID:Int) =
org/nlogo/generator/Generator.scala:303:      "kept" + instrUID + "_" + originalName
org/nlogo/generator/Generator.scala-304-    def translateGetField(origFieldName:String,instrUID:Int,obj:Object,tyype:Type,accessCode:Int) {
org/nlogo/generator/Generator.scala-305-      // Note: The POPs are generated to cancel out the ALOAD 0 which preceded the GETFIELD
org/nlogo/generator/Generator.scala-332-        val descriptor = keptThingsTypes.get(fieldName).getDescriptor
org/nlogo/generator/Generator.scala-333-        var accessCode = keptThingsAccessCodes.get(fieldName).intValue
org/nlogo/generator/Generator.scala:334:        // remove "final" flag, so we can set the fields after construction.
org/nlogo/generator/Generator.scala-335-        accessCode &= ~ACC_FINAL
org/nlogo/generator/Generator.scala-336-        cw.visitField(accessCode,fieldName,descriptor,null,null).visitEnd()
org/nlogo/generator/Generator.scala-351-    var staticClassMethodAlreadyGenerated = false
org/nlogo/generator/Generator.scala-354-      if(staticClassMethodAlreadyGenerated) return
org/nlogo/generator/Generator.scala-355-      staticClassMethodAlreadyGenerated = true
org/nlogo/generator/Generator.scala:356:      val mv = cw.visitMethod(ACC_STATIC + ACC_SYNTHETIC,"class$",
org/nlogo/generator/Generator.scala:357:                              "(Ljava/lang/String;)Ljava/lang/Class;",null,null)
org/nlogo/generator/Generator.scala-358-      mv.visitCode()
org/nlogo/generator/Generator.scala-359-      val (l0,l1,l2) = (new Label,new Label,new Label)
org/nlogo/generator/Generator.scala:360:      mv.visitTryCatchBlock(l0,l1,l2,"java/lang/ClassNotFoundException")
org/nlogo/generator/Generator.scala-361-      mv.visitLabel(l0)
org/nlogo/generator/Generator.scala-362-      mv.visitVarInsn(ALOAD,0)
org/nlogo/generator/Generator.scala:363:      mv.visitMethodInsn(INVOKESTATIC,"java/lang/Class","forName",
org/nlogo/generator/Generator.scala:364:                         "(Ljava/lang/String;)Ljava/lang/Class;")
org/nlogo/generator/Generator.scala-365-      mv.visitLabel(l1)
org/nlogo/generator/Generator.scala-366-      mv.visitInsn(ARETURN)
org/nlogo/generator/Generator.scala-367-      mv.visitLabel(l2)
org/nlogo/generator/Generator.scala-368-      mv.visitVarInsn(ASTORE,1)
org/nlogo/generator/Generator.scala:369:      mv.visitTypeInsn(NEW,"java/lang/NoClassDefFoundError")
org/nlogo/generator/Generator.scala-370-      mv.visitInsn(DUP)
org/nlogo/generator/Generator.scala:371:      mv.visitMethodInsn(INVOKESPECIAL,"java/lang/NoClassDefFoundError","<init>","()V")
org/nlogo/generator/Generator.scala-372-      mv.visitVarInsn(ALOAD,1)
org/nlogo/generator/Generator.scala:373:      mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/NoClassDefFoundError","initCause",
org/nlogo/generator/Generator.scala:374:                         "(Ljava/lang/Throwable;)Ljava/lang/Throwable;")
org/nlogo/generator/Generator.scala-375-      mv.visitInsn(ATHROW)
org/nlogo/generator/Generator.scala-376-      mv.visitMaxs(2,2)
org/nlogo/generator/GeneratorAdapter.scala-7-  extends org.objectweb.asm.commons.GeneratorAdapter(mv,access,name,desc)
org/nlogo/generator/GeneratorAdapter.scala-8-{
org/nlogo/generator/GeneratorAdapter.scala-41-  override def visitLineNumber(line:Int,start:Label) {
org/nlogo/generator/GeneratorAdapter.scala:42:    throw new IllegalStateException("Don't write line numbers to the NetLogoGeneratorAdapter -- line number info " +
org/nlogo/generator/GeneratorAdapter.scala:43:                                    "is reserved for runtime error handling uses.")
org/nlogo/generator/GeneratorAdapter.scala-44-  }
org/nlogo/generator/GeneratorAdapter.scala-45-  def generateConversion(typeFrom:Class[_],typeTo:Class[_],parentInstr:Instruction,argIndex:Int) {
org/nlogo/generator/GeneratorAdapter.scala-47-  }
org/nlogo/generator/MethodRipper.scala-27-      else opcode match {
org/nlogo/generator/MethodRipper.scala-28-        case GETFIELD =>
org/nlogo/generator/MethodRipper.scala:29:          if(List("workspace","world").contains(name)) 
org/nlogo/generator/MethodRipper.scala-30-            super.visitFieldInsn(opcode,bgen.fullClassName,name,desc)
org/nlogo/generator/MethodRipper.scala-31-          else try {
org/nlogo/generator/MethodRipper.scala-41-          }
org/nlogo/generator/MethodRipper.scala-42-          catch {
org/nlogo/generator/MethodRipper.scala:43:            case ex:NoSuchFieldException => errorLog.append("MethodRipper says: " + ex)
org/nlogo/generator/MethodRipper.scala:44:            case ex:IllegalAccessException => errorLog.append("MethodRipper says: " + ex)
org/nlogo/generator/MethodRipper.scala-45-          }
org/nlogo/generator/MethodRipper.scala-46-        case PUTFIELD =>
org/nlogo/generator/MethodRipper.scala-50-          // Let's just leave it as an error until we find a primitive with a strong reason to want
org/nlogo/generator/MethodRipper.scala-51-          // to set member fields.  ~Forrest (7/16/2006)
org/nlogo/generator/MethodRipper.scala:52:          errorLog.append("MethodRipper says: Java class " + instr.getClass +
org/nlogo/generator/MethodRipper.scala:53:                          " not allowed to set member fields in a report/perform method!")
org/nlogo/generator/MethodRipper.scala-54-        case GETSTATIC =>
org/nlogo/generator/MethodRipper.scala:55:          // Why translate static fields?  Well, one reason is because java code like "Turtle.class"
org/nlogo/generator/MethodRipper.scala-56-          // gets compiled into fancy JVM code that caches the result of Class.forName() in a static
org/nlogo/generator/MethodRipper.scala-57-          // field of the enclosing class.  To make that caching run smoothly, we need to translate
org/nlogo/generator/MethodRipper.scala-65-          }
org/nlogo/generator/MethodRipper.scala-66-          catch {
org/nlogo/generator/MethodRipper.scala:67:            case ex:NoSuchFieldException => errorLog.append("MethodRipper says: " + ex)
org/nlogo/generator/MethodRipper.scala:68:            case ex:IllegalAccessException => errorLog.append("MethodRipper says: " + ex)
org/nlogo/generator/MethodRipper.scala-69-          }
org/nlogo/generator/MethodRipper.scala-70-        case PUTSTATIC =>
org/nlogo/generator/MethodRipper.scala-75-    }
org/nlogo/generator/MethodRipper.scala-76-    override def visitMethodInsn(opcode:Int,owner:String,name:String,desc:String) {
org/nlogo/generator/MethodRipper.scala:77:      if(name == "displayName") {
org/nlogo/generator/MethodRipper.scala-78-        super.visitInsn(POP)
org/nlogo/generator/MethodRipper.scala-79-        super.visitLdcInsn(instr.displayName)
org/nlogo/generator/MethodRipper.scala-82-        super.visitMethodInsn(opcode,owner,name,desc)
org/nlogo/generator/MethodRipper.scala-83-      else if(opcode == INVOKESTATIC) {
org/nlogo/generator/MethodRipper.scala:84:        if(name == "class$") {
org/nlogo/generator/MethodRipper.scala:85:          bgen.generateStaticClassMethod("class$")
org/nlogo/generator/MethodRipper.scala:86:          // handle things like "Turtle.class"
org/nlogo/generator/MethodRipper.scala-87-          super.visitMethodInsn(opcode,bgen.fullClassName,name,desc)
org/nlogo/generator/MethodRipper.scala-88-        }
org/nlogo/generator/MethodRipper.scala-89-        else
org/nlogo/generator/MethodRipper.scala-90-          // for now, I just want to know if static methods are ever called
org/nlogo/generator/MethodRipper.scala:91:          errorLog.append("debug: MethodRipper noticed that class " + instr.getClass() +
org/nlogo/generator/MethodRipper.scala:92:                          " contained a static method invocation to method '" + name +
org/nlogo/generator/MethodRipper.scala:93:                          "' in a report_X()/perform_X() method.\n")
org/nlogo/generator/MethodRipper.scala-97-      }
org/nlogo/generator/MethodRipper.scala-101-      else
org/nlogo/generator/MethodRipper.scala-102-        // probably calling helper function inside same class -- we don't allow that
org/nlogo/generator/MethodRipper.scala:103:        errorLog.append("MethodRipper says: Java class " + instr.getClass() +
org/nlogo/generator/MethodRipper.scala:104:                        " not allowed to call method '" + name + "' in a report_X()/perform_X() method.\n")
org/nlogo/generator/MethodRipper.scala-105-    }
org/nlogo/generator/MethodRipper.scala-106-    override def visitInsn(opcode:Int) {
org/nlogo/generator/MethodRipper.scala:107:      // We need to change "returns" to "jump-to-end-method"
org/nlogo/generator/MethodRipper.scala-108-      opcode match {
org/nlogo/generator/MethodRipper.scala-109-        case RETURN | ARETURN | IRETURN | DRETURN | FRETURN | LRETURN =>
org/nlogo/generator/PrimitiveCache.scala-16-        val in = currentThread
org/nlogo/generator/PrimitiveCache.scala-17-                   .getContextClassLoader
org/nlogo/generator/PrimitiveCache.scala:18:                   .getResourceAsStream(c.getName.replace('.','/') + ".class")
org/nlogo/generator/PrimitiveCache.scala-19-        require(in != null)
org/nlogo/generator/PrimitiveCache.scala-20-        try new ClassReader(in)
org/nlogo/generator/TypeConverter.scala-50-  //   ~Forrest (5/16/2006)
org/nlogo/generator/TypeConverter.scala-51-  private def from_Double_to_double(mv:MethodVisitor) {
org/nlogo/generator/TypeConverter.scala:52:    mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/Double","doubleValue","()D")
org/nlogo/generator/TypeConverter.scala-53-  }
org/nlogo/generator/TypeConverter.scala-54-  private def from_Object_to_double(mv:MethodVisitor,firstFreeJVMLocal:Int,argIndex:Int) {
org/nlogo/generator/TypeConverter.scala-56-    val l0 = new Label
org/nlogo/generator/TypeConverter.scala-57-    val l1 = new Label
org/nlogo/generator/TypeConverter.scala:58:    mv.visitTryCatchBlock(l0,l1,l1,"java/lang/ClassCastException")
org/nlogo/generator/TypeConverter.scala-59-    mv.visitLabel(l0)
org/nlogo/generator/TypeConverter.scala-60-    mv.visitVarInsn(ALOAD,firstFreeJVMLocal)
org/nlogo/generator/TypeConverter.scala:61:    mv.visitTypeInsn(CHECKCAST,"java/lang/Double")
org/nlogo/generator/TypeConverter.scala:62:    mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/Double","doubleValue","()D")
org/nlogo/generator/TypeConverter.scala-63-    val lEnd = new Label
org/nlogo/generator/TypeConverter.scala-64-    mv.visitJumpInsn(GOTO,lEnd)
org/nlogo/generator/TypeConverter.scala-65-    mv.visitLabel(l1)
org/nlogo/generator/TypeConverter.scala-66-    mv.visitInsn(POP) // throw away the ClassCastException
org/nlogo/generator/TypeConverter.scala:67:    mv.visitTypeInsn(NEW,"org/nlogo/nvm/ArgumentTypeException")
org/nlogo/generator/TypeConverter.scala-68-    mv.visitInsn(DUP)
org/nlogo/generator/TypeConverter.scala-69-    mv.visitVarInsn(ALOAD,1) // context
org/nlogo/generator/TypeConverter.scala-72-    mv.visitLdcInsn(Syntax.TYPE_NUMBER.toInt)
org/nlogo/generator/TypeConverter.scala-73-    mv.visitVarInsn(ALOAD,firstFreeJVMLocal)
org/nlogo/generator/TypeConverter.scala:74:    mv.visitMethodInsn(INVOKESPECIAL,"org/nlogo/nvm/ArgumentTypeException","<init>",
org/nlogo/generator/TypeConverter.scala:75:                       "(Lorg/nlogo/nvm/Context;Lorg/nlogo/nvm/Instruction;IILjava/lang/Object;)V")
org/nlogo/generator/TypeConverter.scala-76-    mv.visitInsn(ATHROW)
org/nlogo/generator/TypeConverter.scala-77-    mv.visitLabel(lEnd)
org/nlogo/generator/TypeConverter.scala-78-  }
org/nlogo/generator/TypeConverter.scala-79-  private def from_Boolean_to_boolean(mv:MethodVisitor) {
org/nlogo/generator/TypeConverter.scala:80:    mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/Boolean","booleanValue","()Z")
org/nlogo/generator/TypeConverter.scala-81-  }
org/nlogo/generator/TypeConverter.scala-82-  private def from_Object_to_boolean(mv:MethodVisitor,firstFreeJVMLocal:Int,argIndex:Int) {
org/nlogo/generator/TypeConverter.scala-84-    val l0 = new Label
org/nlogo/generator/TypeConverter.scala-85-    val l1 = new Label
org/nlogo/generator/TypeConverter.scala:86:    mv.visitTryCatchBlock(l0,l1,l1,"java/lang/ClassCastException")
org/nlogo/generator/TypeConverter.scala-87-    mv.visitLabel(l0)
org/nlogo/generator/TypeConverter.scala-88-    mv.visitVarInsn(ALOAD,firstFreeJVMLocal)
org/nlogo/generator/TypeConverter.scala:89:    mv.visitTypeInsn(CHECKCAST,"java/lang/Boolean")
org/nlogo/generator/TypeConverter.scala:90:    mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/Boolean","booleanValue","()Z")
org/nlogo/generator/TypeConverter.scala-91-    val lEnd = new Label
org/nlogo/generator/TypeConverter.scala-92-    mv.visitJumpInsn(GOTO,lEnd)
org/nlogo/generator/TypeConverter.scala-93-    mv.visitLabel(l1)
org/nlogo/generator/TypeConverter.scala-94-    mv.visitInsn(POP) // throw away the ClassCastException
org/nlogo/generator/TypeConverter.scala:95:    mv.visitTypeInsn(NEW,"org/nlogo/nvm/ArgumentTypeException")
org/nlogo/generator/TypeConverter.scala-96-    mv.visitInsn(DUP)
org/nlogo/generator/TypeConverter.scala-97-    mv.visitVarInsn(ALOAD,1) // context
org/nlogo/generator/TypeConverter.scala-100-    mv.visitLdcInsn(Integer.valueOf(Syntax.TYPE_BOOLEAN))
org/nlogo/generator/TypeConverter.scala-101-    mv.visitVarInsn(ALOAD,firstFreeJVMLocal)
org/nlogo/generator/TypeConverter.scala:102:    mv.visitMethodInsn(INVOKESPECIAL,"org/nlogo/nvm/ArgumentTypeException","<init>",
org/nlogo/generator/TypeConverter.scala:103:                       "(Lorg/nlogo/nvm/Context;Lorg/nlogo/nvm/Instruction;IILjava/lang/Object;)V")
org/nlogo/generator/TypeConverter.scala-104-    mv.visitInsn(ATHROW)
org/nlogo/generator/TypeConverter.scala-105-    mv.visitLabel(lEnd)
org/nlogo/generator/TypeConverter.scala-107-  private def from_double_to_Object(mv:MethodVisitor,firstFreeJVMLocal:Int) {
org/nlogo/generator/TypeConverter.scala-108-    mv.visitVarInsn(DSTORE,firstFreeJVMLocal)
org/nlogo/generator/TypeConverter.scala:109:    mv.visitTypeInsn(NEW,"java/lang/Double")
org/nlogo/generator/TypeConverter.scala-110-    mv.visitInsn(DUP)
org/nlogo/generator/TypeConverter.scala-111-    mv.visitVarInsn(DLOAD,firstFreeJVMLocal)
org/nlogo/generator/TypeConverter.scala:112:    mv.visitMethodInsn(INVOKESPECIAL,"java/lang/Double","<init>","(D)V")
org/nlogo/generator/TypeConverter.scala-113-  }
org/nlogo/generator/TypeConverter.scala-114-  private def from_boolean_to_Object(mv:MethodVisitor) {
org/nlogo/generator/TypeConverter.scala-116-    val l1 = new Label
org/nlogo/generator/TypeConverter.scala-117-    mv.visitJumpInsn(IFEQ,l1)
org/nlogo/generator/TypeConverter.scala:118:    mv.visitFieldInsn(GETSTATIC,"java/lang/Boolean","TRUE","Ljava/lang/Boolean;")
org/nlogo/generator/TypeConverter.scala-119-    val l2 = new Label
org/nlogo/generator/TypeConverter.scala-120-    mv.visitJumpInsn(GOTO,l2)
org/nlogo/generator/TypeConverter.scala-121-    mv.visitLabel(l1)
org/nlogo/generator/TypeConverter.scala:122:    mv.visitFieldInsn(GETSTATIC,"java/lang/Boolean","FALSE","Ljava/lang/Boolean;")
org/nlogo/generator/TypeConverter.scala-123-    mv.visitLabel(l2)
org/nlogo/generator/TypeConverter.scala-124-  }
org/nlogo/generator/TypeConverter.scala-127-    val l0 = new Label
org/nlogo/generator/TypeConverter.scala-128-    val l1 = new Label
org/nlogo/generator/TypeConverter.scala:129:    mv.visitTryCatchBlock(l0,l1,l1,"java/lang/ClassCastException")
org/nlogo/generator/TypeConverter.scala-130-    mv.visitLabel(l0)
org/nlogo/generator/TypeConverter.scala-131-    mv.visitVarInsn(ALOAD,firstFreeJVMLocal)
org/nlogo/generator/TypeConverter.scala-135-    mv.visitLabel(l1)
org/nlogo/generator/TypeConverter.scala-136-    mv.visitInsn(POP) // throw away the ClassCastException
org/nlogo/generator/TypeConverter.scala:137:    mv.visitTypeInsn(NEW,"org/nlogo/nvm/ArgumentTypeException")
org/nlogo/generator/TypeConverter.scala-138-    mv.visitInsn(DUP)
org/nlogo/generator/TypeConverter.scala-139-    mv.visitVarInsn(ALOAD,1) // context
org/nlogo/generator/TypeConverter.scala-142-    mv.visitLdcInsn(Integer.valueOf(Syntax.getTypeConstant(typeTo)))
org/nlogo/generator/TypeConverter.scala-143-    mv.visitVarInsn(ALOAD,firstFreeJVMLocal)
org/nlogo/generator/TypeConverter.scala:144:    mv.visitMethodInsn(INVOKESPECIAL,"org/nlogo/nvm/ArgumentTypeException","<init>",
org/nlogo/generator/TypeConverter.scala:145:                       "(Lorg/nlogo/nvm/Context;Lorg/nlogo/nvm/Instruction;IILjava/lang/Object;)V");
org/nlogo/generator/TypeConverter.scala-146-    mv.visitInsn(ATHROW)
org/nlogo/generator/TypeConverter.scala-147-    mv.visitLabel(lEnd)
org/nlogo/gl/render/GLRenderer.java-163-		ClassLoader classLoader = getClass().getClassLoader();
org/nlogo/gl/render/GLRenderer.java-164-		org.nlogo.util.SysInfo.getJOGLInfoString_$eq
org/nlogo/gl/render/GLRenderer.java:165:			( "JOGL: " + Utils.getJOGLImplementationVersion( classLoader ) ) ;
org/nlogo/gl/render/GLRenderer.java-166-		
org/nlogo/gl/render/GLRenderer.java-167-		org.nlogo.util.SysInfo.getGLInfoString_$eq(
org/nlogo/gl/render/GLRenderer.java:168:			"OpenGL graphics: " + gl.glGetString(GL.GL_RENDERER) + "\n"
org/nlogo/gl/render/GLRenderer.java:169:        		+ "OpenGL version: " + gl.glGetString(GL.GL_VERSION) + "\n" 
org/nlogo/gl/render/GLRenderer.java:170:			+ "OpenGL vendor: " + gl.glGetString(GL.GL_VENDOR)
org/nlogo/gl/render/GLRenderer.java-171-        ) ; 
org/nlogo/gl/render/GLRenderer.java-172-		
org/nlogo/gl/render/GLShapeManager.java-81-		else
org/nlogo/gl/render/GLShapeManager.java-82-		{
org/nlogo/gl/render/GLShapeManager.java:83:			return shapes.get( "default" ) ;
org/nlogo/gl/render/GLShapeManager.java-84-		}	
org/nlogo/gl/render/GLShapeManager.java-85-	}
org/nlogo/gl/render/GLShapeManager.java-134-			String next = shapeReader.readLine() ;
org/nlogo/gl/render/GLShapeManager.java-135-			CustomShapeDescription shape = new CustomShapeDescription( shapeName ) ;
org/nlogo/gl/render/GLShapeManager.java:136:			while ( ! next.equals( "end-shape" ) )
org/nlogo/gl/render/GLShapeManager.java-137-			{
org/nlogo/gl/render/GLShapeManager.java:138:				if ( next.equals( "tris" ) ||
org/nlogo/gl/render/GLShapeManager.java:139:					 next.equals( "quads" ) ||
org/nlogo/gl/render/GLShapeManager.java:140:					 next.equals( "stop" ) ||
org/nlogo/gl/render/GLShapeManager.java:141:					 next.startsWith( "normal:" ) ||
org/nlogo/gl/render/GLShapeManager.java-142-					 isVertex( next ) )
org/nlogo/gl/render/GLShapeManager.java-143-				{
org/nlogo/gl/render/GLShapeManager.java-351-			  ( 300 - corners[ 1 ].y ) * .001f - 0.15f } ;
org/nlogo/gl/render/GLShapeManager.java-352-		
org/nlogo/gl/render/GLShapeManager.java:353:		// no need to "pancake" if it is always facing the user
org/nlogo/gl/render/GLShapeManager.java-354-		renderRectangle
org/nlogo/gl/render/GLShapeManager.java-355-			( gl , coords[ 0 ] , coords[ 2 ] , coords[ 3 ] , coords[ 1 ] , 
org/nlogo/gl/render/GLShapeManager.java-376-		
org/nlogo/gl/render/GLShapeManager.java-377-		// this is more complex than it looks, primarily because OpenGL cannot 
org/nlogo/gl/render/GLShapeManager.java:378:		// render concave polygons directly but must "tesselate" the polygon 
org/nlogo/gl/render/GLShapeManager.java-379-		// into simple convex triangles first - jrn 6/13/05
org/nlogo/gl/render/GLShapeManager.java-380-			
org/nlogo/gl/render/GLShapeManager.java-410-		}
org/nlogo/gl/render/GLShapeManager.java-411-		
org/nlogo/gl/render/GLShapeManager.java:412:		// no need to "pancake" if it is always facing the user
org/nlogo/gl/render/GLShapeManager.java-413-		if ( rotatable )
org/nlogo/gl/render/GLShapeManager.java-414-		{
org/nlogo/gl/render/GLShapeManager.java-494-		}
org/nlogo/gl/render/GLShapeManager.java-495-		
org/nlogo/gl/render/GLShapeManager.java:496:		// no need to "pancake" if it is always facing the user
org/nlogo/gl/render/GLShapeManager.java-497-		if ( rotatable )
org/nlogo/gl/render/GLShapeManager.java-498-		{			
org/nlogo/gl/render/GLShapeManager.java-567-		gl.glEnd() ;
org/nlogo/gl/render/GLShapeManager.java-568-		
org/nlogo/gl/render/GLShapeManager.java:569:		// we don't "pancake" line because we don't really need to,
org/nlogo/gl/render/GLShapeManager.java-570-		// by default the line tilts to always show the user
org/nlogo/gl/render/GLShapeManager.java-571-		// a flat face, and this way we can scale all lines
org/nlogo/gl/render/GLShapeManager.java-584-
org/nlogo/gl/render/GLShapeManager.java-585-		// Compile default shape
org/nlogo/gl/render/GLShapeManager.java:586:		shapes.put( "default" , new GLShape( "default" , lastList ) ) ; 
org/nlogo/gl/render/GLShapeManager.java-587-		gl.glNewList( lastList , GL.GL_COMPILE ) ;
org/nlogo/gl/render/GLShapeManager.java-588-			gl.glBegin(GL.GL_TRIANGLES) ;
org/nlogo/gl/render/GLShapeManager.java-621-
org/nlogo/gl/render/GLShapeManager.java-622-		// Compile car shape
org/nlogo/gl/render/GLShapeManager.java:623:		shapes.put( "car" , new GLShape( "car" , ++lastList ) ) ;
org/nlogo/gl/render/GLShapeManager.java-624-		gl.glNewList( lastList , GL.GL_COMPILE ) ;
org/nlogo/gl/render/GLShapeManager.java-625-		gl.glTranslatef( 0.0f, 0.0f,  0.14f * -0.6f ) ;
org/nlogo/gl/render/GLShapeManager.java-755-
org/nlogo/gl/render/GLShapeManager.java-756-		// Compile cube shape
org/nlogo/gl/render/GLShapeManager.java:757:		shapes.put( "cube" , new GLShape( "cube" , ++lastList ) ) ;
org/nlogo/gl/render/GLShapeManager.java-758-		gl.glNewList( lastList , GL.GL_COMPILE ) ;
org/nlogo/gl/render/GLShapeManager.java-759-			renderRectangularPrism( gl , 0.14f , 0.14f , 0.14f , false ) ;
org/nlogo/gl/render/GLShapeManager.java-761-        
org/nlogo/gl/render/GLShapeManager.java-762-		// Compile plane shape
org/nlogo/gl/render/GLShapeManager.java:763:		shapes.put( "plane" , new GLShape( "plane" , ++lastList ) ) ;
org/nlogo/gl/render/GLShapeManager.java-764-		gl.glNewList( lastList , GL.GL_COMPILE ) ;
org/nlogo/gl/render/GLShapeManager.java-765-			gl.glBegin( GL.GL_QUADS ) ;
org/nlogo/gl/render/GLShapeManager.java-779-        
org/nlogo/gl/render/GLShapeManager.java-780-		// Compile cube shape
org/nlogo/gl/render/GLShapeManager.java:781:		shapes.put( "@@@PATCH@@@" , 
org/nlogo/gl/render/GLShapeManager.java:782:			new GLShape( "@@@PATCH@@@" , ++lastList ) ) ;
org/nlogo/gl/render/GLShapeManager.java-783-		gl.glNewList( lastList , GL.GL_COMPILE ) ;
org/nlogo/gl/render/GLShapeManager.java-784-			renderRectangularPrism( gl , ( GLRenderer.WORLD_SCALE / 2 ) ,
org/nlogo/gl/render/GLShapeManager.java-789-        
org/nlogo/gl/render/GLShapeManager.java-790-		// Compile wire frame shape
org/nlogo/gl/render/GLShapeManager.java:791:		shapes.put( "@@@WIREFRAME@@@" , 
org/nlogo/gl/render/GLShapeManager.java:792:			new GLShape( "@@@WIREFRAME@@@" , ++lastList ) ) ;
org/nlogo/gl/render/GLShapeManager.java-793-    	gl.glNewList( lastList , GL.GL_COMPILE ) ;
org/nlogo/gl/render/GLShapeManager.java-794-			renderRectangularPrism( gl , ( GLRenderer.WORLD_SCALE / 2 ) ,
org/nlogo/gl/render/GLShapeManager.java-799-		
org/nlogo/gl/render/GLShapeManager.java-800-		// Compile cross-hairs shape
org/nlogo/gl/render/GLShapeManager.java:801:		shapes.put( "@@@CROSSHAIRS@@@" , 
org/nlogo/gl/render/GLShapeManager.java:802:			new GLShape( "@@@CROSSHAIRS@@@" , ++lastList ) ) ;
org/nlogo/gl/render/GLShapeManager.java-803-		gl.glNewList( lastList , GL.GL_COMPILE ) ;
org/nlogo/gl/render/GLShapeManager.java-804-			gl.glPushAttrib( GL.GL_ENABLE_BIT ) ;
org/nlogo/gl/render/GLShapeManager.java-835-
org/nlogo/gl/render/GLShapeManager.java-836-		// Compile halo shape
org/nlogo/gl/render/GLShapeManager.java:837:		shapes.put( "@@@HALO@@@" , new GLShape( "@@@HALO@@@" , ++lastList , false ) ) ;
org/nlogo/gl/render/GLShapeManager.java-838-		gl.glNewList( lastList , GL.GL_COMPILE ) ;
org/nlogo/gl/render/GLShapeManager.java-839-			gl.glPushAttrib( GL.GL_ENABLE_BIT ) ;
org/nlogo/gl/render/GLShapeManager.java-871-
org/nlogo/gl/render/GLShapeManager.java-872-        // Compile sphere shape
org/nlogo/gl/render/GLShapeManager.java:873:		shapes.put( "sphere" , new GLShape( "sphere" , ++lastList ) ) ;
org/nlogo/gl/render/GLShapeManager.java-874-    	gl.glNewList( lastList , GL.GL_COMPILE ) ;
org/nlogo/gl/render/GLShapeManager.java-875-			glu.gluSphere( quadric , 0.15f , SMOOTHNESS , SMOOTHNESS ) ;
org/nlogo/gl/render/GLShapeManager.java-877-        
org/nlogo/gl/render/GLShapeManager.java-878-        // Compile dot shape
org/nlogo/gl/render/GLShapeManager.java:879:		shapes.put( "dot" , new GLShape( "dot" , ++lastList ) ) ;
org/nlogo/gl/render/GLShapeManager.java-880-    	gl.glNewList( lastList , GL.GL_COMPILE ) ;
org/nlogo/gl/render/GLShapeManager.java-881-			glu.gluSphere( quadric ,
org/nlogo/gl/render/GLShapeManager.java-882-						   // 2D dot shape, at least at present, is 40% the size
org/nlogo/gl/render/GLShapeManager.java:883:						   // of "circle", so use 40% here too
org/nlogo/gl/render/GLShapeManager.java-884-						   0.15f * 0.40f ,
org/nlogo/gl/render/GLShapeManager.java-885-						   SMOOTHNESS , SMOOTHNESS ) ;
org/nlogo/gl/render/GLShapeManager.java-887-        
org/nlogo/gl/render/GLShapeManager.java-888-        // Compile stoplight shape
org/nlogo/gl/render/GLShapeManager.java:889:		shapes.put( "stoplight" , new GLShape( "stoplight" , ++lastList ) ) ;
org/nlogo/gl/render/GLShapeManager.java-890-    	gl.glNewList( lastList , GL.GL_COMPILE ) ;
org/nlogo/gl/render/GLShapeManager.java-891-			gl.glTranslatef( 0.0f , 0.0f , ( GLRenderer.WORLD_SCALE ) ) ;
org/nlogo/gl/render/GLShapeManager.java-900-
org/nlogo/gl/render/GLShapeManager.java-901-        // Compile cylinder shape
org/nlogo/gl/render/GLShapeManager.java:902:		shapes.put( "cylinder" , new GLShape( "cylinder" , ++lastList ) ) ;
org/nlogo/gl/render/GLShapeManager.java-903-		gl.glNewList( lastList , GL.GL_COMPILE ) ;
org/nlogo/gl/render/GLShapeManager.java-904-		gl.glTranslatef( 0.0f , 0.0f , (-GLRenderer.WORLD_SCALE / 2 ) + 0.01f  ) ;
org/nlogo/gl/render/GLShapeManager.java-913-        
org/nlogo/gl/render/GLShapeManager.java-914-        // Compile cone shape
org/nlogo/gl/render/GLShapeManager.java:915:		shapes.put( "cone" , new GLShape( "cone" , ++lastList ) ) ;
org/nlogo/gl/render/GLShapeManager.java-916-		gl.glNewList( lastList , GL.GL_COMPILE ) ;
org/nlogo/gl/render/GLShapeManager.java-917-			gl.glRotatef( -90.0f , 1.0f , 0.0f , 0.0f ) ;
org/nlogo/gl/render/GLShapeManager.java-924-        gl.glEndList() ;
org/nlogo/gl/render/GLShapeManager.java-925-
org/nlogo/gl/render/GLShapeManager.java:926:		shapeMap.put( "square" , "cube" ) ; 
org/nlogo/gl/render/GLShapeManager.java:927:		shapeMap.put( "triangle" , "cone" ) ;
org/nlogo/gl/render/GLShapeManager.java:928:		shapeMap.put( "circle" , "sphere" ) ;
org/nlogo/gl/render/GLShapeManager.java-929-	}
org/nlogo/gl/render/GLShapeManager.java-930-
org/nlogo/gl/render/GLShapeManager.java-940-			for( String next : lines )
org/nlogo/gl/render/GLShapeManager.java-941-			{
org/nlogo/gl/render/GLShapeManager.java:942:				if ( next.equals( "tris" ) )
org/nlogo/gl/render/GLShapeManager.java-943-				{
org/nlogo/gl/render/GLShapeManager.java-944-					gl.glBegin( GL.GL_TRIANGLES ) ;
org/nlogo/gl/render/GLShapeManager.java-945-				}
org/nlogo/gl/render/GLShapeManager.java:946:				else if ( next.equals( "quads" ) )
org/nlogo/gl/render/GLShapeManager.java-947-				{
org/nlogo/gl/render/GLShapeManager.java-948-					gl.glBegin(GL.GL_QUADS ) ;
org/nlogo/gl/render/GLShapeManager.java-949-				}
org/nlogo/gl/render/GLShapeManager.java:950:				else if ( next.equals( "stop" ) )
org/nlogo/gl/render/GLShapeManager.java-951-				{
org/nlogo/gl/render/GLShapeManager.java-952-					gl.glEnd() ;
org/nlogo/gl/render/GLShapeManager.java-953-				}
org/nlogo/gl/render/GLShapeManager.java:954:				else if ( next.startsWith( "normal: " ) )
org/nlogo/gl/render/GLShapeManager.java-955-				{
org/nlogo/gl/render/GLShapeManager.java-956-					String[] floats = next.substring( 8 ).split( " " ) ;
org/nlogo/gl/render/GLShapeManager.java-978-		for( String next : shape.lines )
org/nlogo/gl/render/GLShapeManager.java-979-		{
org/nlogo/gl/render/GLShapeManager.java:980:			if ( next.equals( "tris" ) )
org/nlogo/gl/render/GLShapeManager.java-981-			{
org/nlogo/gl/render/GLShapeManager.java-982-				gl.glBegin( GL.GL_TRIANGLES ) ;
org/nlogo/gl/render/GLShapeManager.java-983-			}
org/nlogo/gl/render/GLShapeManager.java:984:			else if ( next.equals( "quads" ) )
org/nlogo/gl/render/GLShapeManager.java-985-			{
org/nlogo/gl/render/GLShapeManager.java-986-				gl.glBegin(GL.GL_QUADS ) ;
org/nlogo/gl/render/GLShapeManager.java-987-			}
org/nlogo/gl/render/GLShapeManager.java:988:			else if ( next.equals( "stop" ) )
org/nlogo/gl/render/GLShapeManager.java-989-			{
org/nlogo/gl/render/GLShapeManager.java-990-				gl.glEnd() ;
org/nlogo/gl/render/GLShapeManager.java-991-			}
org/nlogo/gl/render/GLShapeManager.java:992:			else if ( next.startsWith( "normal: " ) )
org/nlogo/gl/render/GLShapeManager.java-993-			{
org/nlogo/gl/render/GLShapeManager.java-994-				String[] floats = next.substring( 8 ).split( " " ) ;
org/nlogo/gl/render/LinkRenderer.java-186-										 ( height - 1 ) /  2 } ;
org/nlogo/gl/render/LinkRenderer.java-187-
org/nlogo/gl/render/LinkRenderer.java:188:		if( link.shape().equals( "default" ) )
org/nlogo/gl/render/LinkRenderer.java-189-		{
org/nlogo/gl/render/LinkRenderer.java-190-			coords[ 2 ] = coords[ 2 ] / 2 ;
org/nlogo/gl/render/PatchRenderer.java-153-		// we disable writing to the depth buffer because we technically want
org/nlogo/gl/render/PatchRenderer.java-154-		// to guarantee the drawing will be written, which has exactly the same
org/nlogo/gl/render/PatchRenderer.java:155:		// depth as the patches, and hence can cause "stitching" - jrn 6/2/05
org/nlogo/gl/render/PatchRenderer.java-156-		if( ! drawing.isBlank() )
org/nlogo/gl/render/PatchRenderer.java-157-		{
org/nlogo/gl/render/PatchRenderer3D.java-47-		int numPatches = world.patchColors().length ;
org/nlogo/gl/render/PatchRenderer3D.java-48-
org/nlogo/gl/render/PatchRenderer3D.java:49:		GLShape shape3D = shapeRenderer.getShape( "@@@PATCH@@@" ) ;
org/nlogo/gl/render/PatchRenderer3D.java-50-
org/nlogo/gl/render/PatchRenderer3D.java-51-		for( int id = 0 ; id < numPatches ; id++ )
org/nlogo/gl/render/PatchRenderer3D.java-84-							 int fontSize , double patchSize , boolean outline )
org/nlogo/gl/render/PatchRenderer3D.java-85-	{
org/nlogo/gl/render/PatchRenderer3D.java:86:		shapeRenderer.renderWrappedAgent( gl , shapeRenderer.getShape( "@@@PATCH@@@" ) , 
org/nlogo/gl/render/PatchRenderer3D.java-87-										  1.0 , Color.getColor( patch.pcolor() ) , 
org/nlogo/gl/render/PatchRenderer3D.java-88-										  patch.labelString() , patch.labelColor() ,
org/nlogo/gl/render/PatchRenderer3D.java-115-	void renderOutline( GL gl , Patch patch )
org/nlogo/gl/render/PatchRenderer3D.java-116-	{
org/nlogo/gl/render/PatchRenderer3D.java:117:		GLShape shape = shapeRenderer.getShape( "@@@PATCH@@@" ) ;
org/nlogo/gl/render/PatchRenderer3D.java-118-
org/nlogo/gl/render/PatchRenderer3D.java-119-		float [] rgb = Color.getColor( patch.pcolor() ).getRGBColorComponents( null ) ;
org/nlogo/gl/render/ShapeRenderer.java-317-	void renderHalo( GL gl , boolean isTurtle , double diameter )
org/nlogo/gl/render/ShapeRenderer.java-318-	{
org/nlogo/gl/render/ShapeRenderer.java:319:		GLShape haloShape = shapeManager.getShape( "@@@HALO@@@" ) ;
org/nlogo/gl/render/ShapeRenderer.java-320-		int width = world.worldWidth() ;
org/nlogo/gl/render/ShapeRenderer.java-321-		int height = world.worldHeight() ;
org/nlogo/gl/render/Tessellator.java-36-		data.type = type ;
org/nlogo/gl/render/Tessellator.java-37-		
org/nlogo/gl/render/Tessellator.java:38:		// for now assume we are talking about the "top" polygon
org/nlogo/gl/render/Tessellator.java-39-		data.gl.glNormal3f( 0.0f, 0.0f, 1.0f ) ;
org/nlogo/gl/render/Tessellator.java-40-	}
org/nlogo/gl/render/TextureRenderer.java-49-		// experiementally other Rage cards are reporting incorrect
org/nlogo/gl/render/TextureRenderer.java-50-		// numbers as well so let's limit them all to 256 to be safe. ev 6/3/05
org/nlogo/gl/render/TextureRenderer.java:51:		if( glRendererName.startsWith("ATI RAGE" ) )
org/nlogo/gl/render/TextureRenderer.java-52-		{
org/nlogo/gl/render/TextureRenderer.java-53-			maxTextureSize = 256 ;
org/nlogo/gl/render/TextureRenderer.java-63-		// when not in fullscreen.
org/nlogo/gl/render/TextureRenderer.java-64-		// -- azs 6/13/05
org/nlogo/gl/render/TextureRenderer.java:65:		else if( glRendererName.startsWith("ATI RADEON 7500" ) )
org/nlogo/gl/render/TextureRenderer.java-66-		{
org/nlogo/gl/render/TextureRenderer.java-67-		    maxTextureSize = 512 ;
org/nlogo/gl/render/TextureRenderer.java-68-		}
org/nlogo/gl/render/TextureRenderer.java-69-		// Same goes for the 9200
org/nlogo/gl/render/TextureRenderer.java:70:		else if( glRendererName.startsWith("ATI RADEON 9200" ) )
org/nlogo/gl/render/TextureRenderer.java-71-		{
org/nlogo/gl/render/TextureRenderer.java-72-		    maxTextureSize = 512 ;
org/nlogo/gl/render/TextureRenderer.java-94-		
org/nlogo/gl/render/TextureRenderer.java-338-			for( int y = yOffset ; y < ( tileHeight + yOffset ) ; y++ )
org/nlogo/gl/render/TextureRenderer.java-339-			{
org/nlogo/gl/render/TextureRenderer.java-342-				int rgb = colors[ ( y * width ) + x ] ;
org/nlogo/gl/render/TextureRenderer.java-343-				bytes[ i++ ] = (byte) ( rgb >> 16 ) ; // red
org/nlogo/gl/render/TurtleRenderer.java-97-										 ( height - 1 ) /  2 } ;
org/nlogo/gl/render/TurtleRenderer.java-98-
org/nlogo/gl/render/TurtleRenderer.java:99:		if( turtle.shape().equals( "default" ) )
org/nlogo/gl/render/TurtleRenderer.java-100-		{
org/nlogo/gl/render/TurtleRenderer.java-101-			coords[ 2 ] = coords[ 2 ] / 2 ;
org/nlogo/gl/render/Utils.java-7-	private Utils() { throw new IllegalStateException() ; }
org/nlogo/gl/render/Utils.java-8-
org/nlogo/gl/render/Utils.java:9:	private static String OLD_JOGL = "NetLogo cannot open that window because it found an old\n" + 
org/nlogo/gl/render/Utils.java:10:		"version of JOGL on your computer. You will need to remove it.\n" +
org/nlogo/gl/render/Utils.java:11:		"For instructions, see Library Conflicts \n" +
org/nlogo/gl/render/Utils.java:12:		"in the System Requirements section of the NetLogo User Manual."  ;
org/nlogo/gl/render/Utils.java-13-
org/nlogo/gl/render/Utils.java-14-
org/nlogo/gl/render/Utils.java-43-			throw new JOGLException( OLD_JOGL , e ) ;
org/nlogo/gl/render/Utils.java-44-		}
org/nlogo/gl/render/Utils.java:45:		boolean isMac = System.getProperty( "os.name" ).startsWith( "Mac" ) ;
org/nlogo/gl/render/Utils.java-46-		if( ! isMac )
org/nlogo/gl/render/Utils.java-47-		{
org/nlogo/gl/render/Utils.java-48-			try
org/nlogo/gl/render/Utils.java-49-			{
org/nlogo/gl/render/Utils.java:50:                System.loadLibrary( "jawt" ) ;
org/nlogo/gl/render/Utils.java-51-			}
org/nlogo/gl/render/Utils.java-52-			catch( UnsatisfiedLinkError e )
org/nlogo/gl/render/Utils.java-53-			{
org/nlogo/gl/render/Utils.java-54-                // something else might have loaded JAWT itself
org/nlogo/gl/render/Utils.java:55:                if( e.getMessage().indexOf( "already loaded" ) == -1 )
org/nlogo/gl/render/Utils.java-56-				{
org/nlogo/gl/render/Utils.java-57-					throw new JOGLException
org/nlogo/gl/render/Utils.java:58:						( "NetLogo could not find the required JOGL libraries.\n"+ 
org/nlogo/gl/render/Utils.java:59:						  "Please contact bugs@ccl.northwestern.edu for assistance." , e ) ; 
org/nlogo/gl/render/Utils.java-60-                }
org/nlogo/gl/render/Utils.java-61-			}
org/nlogo/gl/render/Utils.java-65-		
org/nlogo/gl/render/Utils.java-66-		try {
org/nlogo/gl/render/Utils.java:67:			System.load( libraryPath + System.getProperty( "file.separator" ) + System.mapLibraryName( "jogl" ) ) ;
org/nlogo/gl/render/Utils.java-68-		}
org/nlogo/gl/render/Utils.java-69-		catch( UnsatisfiedLinkError err2 )
org/nlogo/gl/render/Utils.java-71-			// but if this fails we need to report an error - AZS 4/13/05	
org/nlogo/gl/render/Utils.java-72-			throw new JOGLException
org/nlogo/gl/render/Utils.java:73:				( "NetLogo could not find the required JOGL libraries.\n"+ 
org/nlogo/gl/render/Utils.java:74:				  "Please contact bugs@ccl.northwestern.edu for assistance." , err2 ) ;
org/nlogo/gl/render/Utils.java-75-		}
org/nlogo/gl/render/Utils.java-76-		try{
org/nlogo/gl/render/Utils.java:77:			System.load( libraryPath + System.getProperty( "file.separator" ) + System.mapLibraryName( "jogl_awt" ) ) ;
org/nlogo/gl/render/Utils.java-78-		}
org/nlogo/gl/render/Utils.java-79-		catch( UnsatisfiedLinkError err2 )
org/nlogo/gl/render/Utils.java-80-		{
org/nlogo/gl/render/Utils.java-81-			throw new JOGLException
org/nlogo/gl/render/Utils.java:82:				( "NetLogo could not find the required JOGL libraries.\n"+ 
org/nlogo/gl/render/Utils.java:83:				  "Please contact bugs@ccl.northwestern.edu for assistance." , err2 ) ;
org/nlogo/gl/render/Utils.java-84-		}
org/nlogo/gl/render/Utils.java-85-
org/nlogo/gl/render/Utils.java-92-		try
org/nlogo/gl/render/Utils.java-93-		{
org/nlogo/gl/render/Utils.java:94:			String osname = System.getProperty( "os.name" ) ;
org/nlogo/gl/render/Utils.java:95:			String libdir = new java.io.File( "lib" ).getAbsolutePath() + System.getProperty( "file.separator" ) ;
org/nlogo/gl/render/Utils.java:96:			if ( osname.equals( "Mac OS X" ) )
org/nlogo/gl/render/Utils.java-97-			{
org/nlogo/gl/render/Utils.java-98-				libdir = libdir + osname ;
org/nlogo/gl/render/Utils.java-99-			}
org/nlogo/gl/render/Utils.java:100:			else if( osname.startsWith( "Windows" ) )
org/nlogo/gl/render/Utils.java-101-			{
org/nlogo/gl/render/Utils.java:102:				libdir = libdir + "Windows";
org/nlogo/gl/render/Utils.java-103-			}
org/nlogo/gl/render/Utils.java-104-			else
org/nlogo/gl/render/Utils.java-105-			{
org/nlogo/gl/render/Utils.java:106:				String arch = System.getProperty( "os.arch" ) ; 
org/nlogo/gl/render/Utils.java:107:				if( arch.endsWith( "86" ) )
org/nlogo/gl/render/Utils.java-108-				{
org/nlogo/gl/render/Utils.java:109:					libdir = libdir + "Linux-x86" ;
org/nlogo/gl/render/Utils.java-110-				}
org/nlogo/gl/render/Utils.java-111-				else
org/nlogo/gl/render/Utils.java-112-				{
org/nlogo/gl/render/Utils.java:113:					libdir = libdir + "Linux-" + arch ;
org/nlogo/gl/render/Utils.java-114-				}
org/nlogo/gl/render/Utils.java-115-			}
org/nlogo/gl/render/Utils.java-120-		{
org/nlogo/gl/render/Utils.java-121-			throw new JOGLException
org/nlogo/gl/render/Utils.java:122:				( "NetLogo could not find the required JOGL libraries.\n"+ 
org/nlogo/gl/render/Utils.java:123:				  "Please contact bugs@ccl.northwestern.edu for assistance." , e ) ;
org/nlogo/gl/render/Utils.java-124-		}
org/nlogo/gl/render/Utils.java-125-		catch( IllegalAccessException e )
org/nlogo/gl/render/Utils.java-126-		{
org/nlogo/gl/render/Utils.java:127:			throw new IllegalStateException( "failed to load JOGL libraries" ) ;
org/nlogo/gl/render/Utils.java-128-		}
org/nlogo/gl/render/Utils.java-129-		catch( NoSuchFieldException e )
org/nlogo/gl/render/Utils.java-130-		{
org/nlogo/gl/render/Utils.java:131:			throw new IllegalStateException( "failed to load JOGL libraries" ) ;
org/nlogo/gl/render/Utils.java-132-		}
org/nlogo/gl/render/Utils.java-133-	}
org/nlogo/gl/render/Utils.java-160-	static String getJOGLImplementationVersion( ClassLoader classLoader )
org/nlogo/gl/render/Utils.java-161-	{
org/nlogo/gl/render/Utils.java:162:		String pkgName = "javax.media.opengl" ;
org/nlogo/gl/render/Utils.java:163:		String className = "GL" ;
org/nlogo/gl/render/Utils.java-164-
org/nlogo/gl/render/Utils.java-165-		try 
org/nlogo/gl/render/Utils.java-170-			if (p == null) 
org/nlogo/gl/render/Utils.java-171-			{
org/nlogo/gl/render/Utils.java:172:				return "Not Available" ;
org/nlogo/gl/render/Utils.java-173-			}
org/nlogo/gl/render/Utils.java-174-			else
org/nlogo/gl/render/Utils.java-179-		catch ( ClassNotFoundException e ) 
org/nlogo/gl/render/Utils.java-180-		{
org/nlogo/gl/render/Utils.java:181:			return "Not Available" ;
org/nlogo/gl/render/Utils.java-182-		}
org/nlogo/gl/render/Utils.java-183-	}
org/nlogo/gl/render/Utils.java-186-		throws JOGLException
org/nlogo/gl/render/Utils.java-187-	{
org/nlogo/gl/render/Utils.java:188:		String pkgName = "javax.media.opengl" ;
org/nlogo/gl/render/Utils.java:189:		String className = "GL" ;
org/nlogo/gl/render/Utils.java-190-
org/nlogo/gl/render/Utils.java-191-		try 
org/nlogo/gl/render/Utils.java-207-			{
org/nlogo/gl/render/Utils.java-208-				 throw new JOGLException
org/nlogo/gl/render/Utils.java:209:					 ( "NetLogo found JOGL Version: " + implVersion + ".\n" +
org/nlogo/gl/render/Utils.java:210:					   "Version: " + RECOMMENDED_IMPL + " is recommended.\n" + 
org/nlogo/gl/render/Utils.java:211:					   "You may need to remove your existing\n" +
org/nlogo/gl/render/Utils.java:212:					   "JOGL installation.\n" + 
org/nlogo/gl/render/Utils.java:213:					   "For instructions, see the Library Conflicts section \n" +
org/nlogo/gl/render/Utils.java:214:					   "in the NetLogo User Manual." ) ;
org/nlogo/gl/render/Utils.java-215-			}
org/nlogo/gl/render/Utils.java-216-		}
org/nlogo/gl/render/Utils.java-218-		{
org/nlogo/gl/render/Utils.java-219-			throw new JOGLException
org/nlogo/gl/render/Utils.java:220:				( "NetLogo could not find the required JOGL libraries.\n\n"+ 
org/nlogo/gl/render/Utils.java:221:				  "Please contact bugs@ccl.northwestern.edu for assistance." , e ) ;
org/nlogo/gl/render/Utils.java-222-		}
org/nlogo/gl/render/Utils.java-223-		// it's annoying to have to use reflection here but Sun in
org/nlogo/gl/render/Utils.java-231-			try
org/nlogo/gl/render/Utils.java-232-			{
org/nlogo/gl/render/Utils.java:233:				if( Class.forName( "sun.misc.InvalidJarIndexException" )
org/nlogo/gl/render/Utils.java-234-					.isAssignableFrom( e.getClass() ) )
org/nlogo/gl/render/Utils.java-235-				{
org/nlogo/gl/render/WorldRenderer.java-133-			gl.glPushMatrix() ;
org/nlogo/gl/render/WorldRenderer.java-134-			gl.glTranslated( coords[ 0 ] , coords[ 1 ] , coords[ 2 ] ) ;
org/nlogo/gl/render/WorldRenderer.java:135:			gl.glCallList( shapeManager.getShape( "@@@CROSSHAIRS@@@" ).displayListIndex() ) ;
org/nlogo/gl/render/WorldRenderer.java-136-			gl.glPopMatrix() ;
org/nlogo/gl/render/WorldRenderer.java-137-		}
org/nlogo/gl/render/WorldRenderer.java-183-					 
org/nlogo/gl/render/WorldRenderer.java-184-		gl.glCallList
org/nlogo/gl/render/WorldRenderer.java:185:			( shapeManager.getShape( "@@@WIREFRAME@@@" ).displayListIndex() ) ;
org/nlogo/gl/render/WorldRenderer.java-186-		gl.glPopMatrix() ;
org/nlogo/gl/render/WorldRenderer.java-187-		
org/nlogo/gl/view/KeyInputHandler.java-42-			System.out.println( "y: " + observer.oycor() ) ;
org/nlogo/gl/view/KeyInputHandler.java-43-			System.out.println( "z: " + observer.ozcor() ) ;
org/nlogo/gl/view/KeyInputHandler.java:44:			System.out.println( "heading: " + observer.heading() ) ;
org/nlogo/gl/view/KeyInputHandler.java:45:			System.out.println( "pitch: " + observer.pitch() ) ;
org/nlogo/gl/view/KeyInputHandler.java:46:			System.out.println( "roll: " + observer.roll() ) ;
org/nlogo/gl/view/KeyInputHandler.java:47:			System.out.println( "dx: " + observer.dx() ) ;
org/nlogo/gl/view/KeyInputHandler.java:48:			System.out.println( "dy: " + observer.dy() ) ;
org/nlogo/gl/view/KeyInputHandler.java:49:			System.out.println( "dz: " + observer.dz() ) ;
org/nlogo/gl/view/KeyInputHandler.java-50-		}
org/nlogo/gl/view/KeyInputHandler.java-51-		else if ( e.getKeyCode() == java.awt.event.KeyEvent.VK_F )
org/nlogo/gl/view/ObserverView.java-17-		java.awt.Rectangle bounds )
org/nlogo/gl/view/ObserverView.java-18-	{
org/nlogo/gl/view/ObserverView.java:19:		super( "3D View" , viewManager , renderer ) ;
org/nlogo/gl/view/ObserverView.java-20-
org/nlogo/gl/view/ObserverView.java-21-		setBounds( bounds ) ;
org/nlogo/gl/view/View.java-194-		AgentMenuItem( org.nlogo.api.Agent agent , AgentAction action , String caption )
org/nlogo/gl/view/View.java-195-		{
org/nlogo/gl/view/View.java:196:			super( "<html>"
org/nlogo/gl/view/View.java-197-				+ org.nlogo.awt.Utils.colorize( 
org/nlogo/gl/view/View.java-198-						caption , 
org/nlogo/gl/view/View.java-264-		javax.swing.JPopupMenu menu = new org.nlogo.swing.WrappingPopupMenu() ;
org/nlogo/gl/view/View.java-265-		
org/nlogo/gl/view/View.java:266:		javax.swing.JMenuItem editItem = new javax.swing.JMenuItem( "Edit..." ) ;
org/nlogo/gl/view/View.java-267-		editItem.addActionListener
org/nlogo/gl/view/View.java-268-			( new java.awt.event.ActionListener() {
org/nlogo/gl/view/View.java-277-		
org/nlogo/gl/view/View.java-278-		javax.swing.JMenuItem copyItem =
org/nlogo/gl/view/View.java:279:			new javax.swing.JMenuItem( "Copy View" ) ;
org/nlogo/gl/view/View.java-280-		copyItem.addActionListener
org/nlogo/gl/view/View.java-281-			( new java.awt.event.ActionListener() {
org/nlogo/gl/view/View.java-288-		menu.add( copyItem ) ;
org/nlogo/gl/view/View.java-289-		
org/nlogo/gl/view/View.java:290:		javax.swing.JMenuItem exportItem = new javax.swing.JMenuItem( "Export View..." ) ;
org/nlogo/gl/view/View.java-291-		exportItem.addActionListener
org/nlogo/gl/view/View.java-292-			( new java.awt.event.ActionListener() {
org/nlogo/gl/view/View.java-298-		javax.swing.JMenuItem resetItem = 
org/nlogo/gl/view/View.java-299-			new javax.swing.JMenuItem( 
org/nlogo/gl/view/View.java:300:					"<html>" 
org/nlogo/gl/view/View.java-301-					+ org.nlogo.awt.Utils.colorize( 
org/nlogo/gl/view/View.java:302:							"reset-perspective" , 
org/nlogo/gl/view/View.java-303-							org.nlogo.window.SyntaxColors.COMMAND_COLOR )	
org/nlogo/gl/view/View.java-304-				) ;
org/nlogo/gl/view/View.java-312-		{
org/nlogo/gl/view/View.java-313-			resetItem.setEnabled ( false ) ;
org/nlogo/gl/view/View.java:314:			resetItem.setText( "reset-perspective" ) ; 
org/nlogo/gl/view/View.java-315-		}
org/nlogo/gl/view/View.java-316-		Class<? extends org.nlogo.api.Agent> last = null ;
org/nlogo/gl/view/View.java-328-			{
org/nlogo/gl/view/View.java-329-				javax.swing.JMenu submenu = new AgentMenu( agent ) ;
org/nlogo/gl/view/View.java:330:				submenu.add( new AgentMenuItem( agent , AgentAction.INSPECT , "inspect" ) ) ;
org/nlogo/gl/view/View.java-331-				submenu.add( new javax.swing.JPopupMenu.Separator() ) ;
org/nlogo/gl/view/View.java:332:				submenu.add( new AgentMenuItem( agent , AgentAction.WATCH , "watch" ) ) ;
org/nlogo/gl/view/View.java:333:				submenu.add( new AgentMenuItem( agent , AgentAction.FOLLOW , "follow" ) ) ;
org/nlogo/gl/view/View.java:334:				submenu.add( new AgentMenuItem( agent , AgentAction.RIDE , "ride" ) ) ;
org/nlogo/gl/view/View.java-335-				
org/nlogo/gl/view/View.java-336-				menu.add( submenu );
org/nlogo/gl/view/View.java-338-			else
org/nlogo/gl/view/View.java-339-			{
org/nlogo/gl/view/View.java:340:				menu.add( new AgentMenuItem( agent , AgentAction.INSPECT , "inspect" ) ) ;
org/nlogo/gl/view/View.java-341-			}
org/nlogo/gl/view/View.java-342-		}
org/nlogo/gl/view/ViewControlStrip3D.java-37-			: Dump.number( StrictMath.floor( ticks ) ) ;
org/nlogo/gl/view/ViewControlStrip3D.java-38-		tickCounter.setText
org/nlogo/gl/view/ViewControlStrip3D.java:39:			( "     " + workspace.viewWidget.tickCounterLabel() + ": " +
org/nlogo/gl/view/ViewControlStrip3D.java-40-			  tickText ) ;
org/nlogo/gl/view/ViewControlStrip3D.java-41-		// I really don't think this should be necessary but
org/nlogo/gl/view/ViewControlStrip3D.java-62-			d.width = StrictMath.max( d.width ,
org/nlogo/gl/view/ViewControlStrip3D.java-63-									  fontMetrics.stringWidth
org/nlogo/gl/view/ViewControlStrip3D.java:64:									  ( workspace.viewWidget.tickCounterLabel() + ": 00000000" ) ) ;
org/nlogo/gl/view/ViewControlStrip3D.java-65-			return d ;
org/nlogo/gl/view/ViewControlStrip3D.java-66-		}
org/nlogo/gl/view/ViewControlToolBar.java-17-	
org/nlogo/gl/view/ViewControlToolBar.java-18-	private final javax.swing.AbstractAction ORBIT_ACTION = 
org/nlogo/gl/view/ViewControlToolBar.java:19:		new MovementAction( "Orbit" , MouseMotionHandler.Mode.ORBIT ) ;
org/nlogo/gl/view/ViewControlToolBar.java-20-	private final javax.swing.AbstractAction ZOOM_ACTION = 
org/nlogo/gl/view/ViewControlToolBar.java:21:		new MovementAction( "Zoom" , MouseMotionHandler.Mode.ZOOM ) ;
org/nlogo/gl/view/ViewControlToolBar.java-22-	private final javax.swing.AbstractAction MOVE_ACTION = 
org/nlogo/gl/view/ViewControlToolBar.java:23:		new MovementAction( "Move" , MouseMotionHandler.Mode.TRANSLATE ) ;
org/nlogo/gl/view/ViewControlToolBar.java-24-	private final javax.swing.AbstractAction INTERACT_ACTION = 
org/nlogo/gl/view/ViewControlToolBar.java:25:		new MovementAction( "Interact" , MouseMotionHandler.Mode.INTERACT ) ;
org/nlogo/gl/view/ViewControlToolBar.java-26-
org/nlogo/gl/view/ViewControlToolBar.java-27-	private static final String FULLSCREEN_WARNING = 
org/nlogo/gl/view/ViewControlToolBar.java:28:		"On some systems, fullscreen mode may cause Windows to lock up." ;
org/nlogo/gl/view/ViewControlToolBar.java-29-
org/nlogo/gl/view/ViewControlToolBar.java-30-	public ViewControlToolBar( final View view, MouseMotionHandler inputHandler )
org/nlogo/gl/view/ViewControlToolBar.java-66-		add( javax.swing.Box.createHorizontalStrut( 8 ) ) ; 
org/nlogo/gl/view/ViewControlToolBar.java-67-		
org/nlogo/gl/view/ViewControlToolBar.java:68:		final javax.swing.JButton resetButton = new javax.swing.JButton( "Reset Perspective" ) ; 
org/nlogo/gl/view/ViewControlToolBar.java-69-		resetButton.addActionListener( new java.awt.event.ActionListener() {
org/nlogo/gl/view/ViewControlToolBar.java-70-				public void actionPerformed( java.awt.event.ActionEvent e ) 
org/nlogo/gl/view/ViewControlToolBar.java-77-		add( javax.swing.Box.createHorizontalStrut( 8 ) ) ; 
org/nlogo/gl/view/ViewControlToolBar.java-78-		
org/nlogo/gl/view/ViewControlToolBar.java:79:		final javax.swing.JButton fullscreenButton = new javax.swing.JButton( "Full Screen" ) ; 
org/nlogo/gl/view/ViewControlToolBar.java-80-		fullscreenButton.addActionListener( new java.awt.event.ActionListener() {
org/nlogo/gl/view/ViewControlToolBar.java-81-				public void actionPerformed( java.awt.event.ActionEvent e ) 
org/nlogo/gl/view/ViewControlToolBar.java-82-				{
org/nlogo/gl/view/ViewControlToolBar.java:83:					String [] options = { "Continue" , "Cancel" } ;
org/nlogo/gl/view/ViewControlToolBar.java:84:					boolean isWindows = System.getProperty( "os.name" ).toLowerCase().startsWith( "win" ) ;
org/nlogo/gl/view/ViewControlToolBar.java-85-
org/nlogo/gl/view/ViewControlToolBar.java-86-					if( ! isWindows || view.viewManager.warned() || 
org/nlogo/gl/view/ViewControlToolBar.java-87-						( 0 == org.nlogo.swing.OptionDialog.show
org/nlogo/gl/view/ViewControlToolBar.java:88:						  ( view , "Warning" , FULLSCREEN_WARNING ,
org/nlogo/gl/view/ViewControlToolBar.java-89-							options ) ) )
org/nlogo/gl/view/ViewControlToolBar.java-90-					{
org/nlogo/gl/view/ViewControlToolBar.java-125-	
org/nlogo/gl/view/ViewControlToolBar.java-126-				case WATCH:
org/nlogo/gl/view/ViewControlToolBar.java:127:					status.setText( "watching " + agent.toString() ) ;
org/nlogo/gl/view/ViewControlToolBar.java-128-					ORBIT_ACTION.setEnabled( true ) ;
org/nlogo/gl/view/ViewControlToolBar.java-129-					ZOOM_ACTION.setEnabled( true ) ;
org/nlogo/gl/view/ViewControlToolBar.java-136-	
org/nlogo/gl/view/ViewControlToolBar.java-137-				case RIDE:
org/nlogo/gl/view/ViewControlToolBar.java:138:					status.setText( "riding " + agent.toString() ) ;
org/nlogo/gl/view/ViewControlToolBar.java-139-					setButtonsEnabled( false ) ;
org/nlogo/gl/view/ViewControlToolBar.java-140-					ZOOM_ACTION.setEnabled( true ) ;
org/nlogo/gl/view/ViewControlToolBar.java-147-	
org/nlogo/gl/view/ViewControlToolBar.java-148-				case FOLLOW:
org/nlogo/gl/view/ViewControlToolBar.java:149:					status.setText( "following " + agent.toString() ) ;
org/nlogo/gl/view/ViewControlToolBar.java-150-					setButtonsEnabled( false ) ;
org/nlogo/gl/view/ViewControlToolBar.java-151-					ZOOM_ACTION.setEnabled( true ) ;
org/nlogo/gl/view/ViewManager.java-121-		{
org/nlogo/gl/view/ViewManager.java-122-			throw new JOGLLoadingException
org/nlogo/gl/view/ViewManager.java:123:				( "NetLogo could not load the JOGL native libraries on your computer.\n\n"+ 
org/nlogo/gl/view/ViewManager.java:124:				  "Write bugs@ccl.northwestern.edu for assistance." , e ) ;
org/nlogo/gl/view/ViewManager.java-125-		}
org/nlogo/gl/view/ViewManager.java-126-		
org/nlogo/gl/view/ViewManager.java-151-			{
org/nlogo/gl/view/ViewManager.java-152-				throw new UnsupportedOperationException
org/nlogo/gl/view/ViewManager.java:153:					( "This graphics environment does not support full screen mode" ) ; 
org/nlogo/gl/view/ViewManager.java-154-			}
org/nlogo/gl/view/ViewManager.java-155-			currentView.setVisible( true ) ; 
org/nlogo/headless/Checksummer.scala-8-object Checksummer {
org/nlogo/headless/Checksummer.scala-9-  def initModelForChecksumming(workspace: HeadlessWorkspace) {
org/nlogo/headless/Checksummer.scala:10:    if(workspace.previewCommands.containsSlice("need-to-manually-make-preview-for-this-model"))
org/nlogo/headless/Checksummer.scala-11-      workspace.previewCommands = AbstractWorkspace.DEFAULT_PREVIEW_COMMANDS
org/nlogo/headless/Checksummer.scala:12:    workspace.command("random-seed 0")
org/nlogo/headless/Checksummer.scala-13-    workspace.command(workspace.previewCommands)
org/nlogo/headless/Checksummer.scala-14-  }
org/nlogo/headless/Checksummer.scala-27-      outputStream.toString.replaceAll("\r\n", "\n")  // avoid platform differences
org/nlogo/headless/Checksummer.scala-28-    }
org/nlogo/headless/Checksummer.scala:29:    val digester = java.security.MessageDigest.getInstance("SHA")
org/nlogo/headless/Checksummer.scala-30-    toHexString(digester.digest(output.getBytes))
org/nlogo/headless/Checksummer.scala-31-  }
org/nlogo/headless/ChecksumsAndPreviews.scala-7-    Main.setHeadlessProperty()
org/nlogo/headless/ChecksumsAndPreviews.scala-8-    def paths(fn:(String)=>Boolean) =
org/nlogo/headless/ChecksumsAndPreviews.scala:9:      ModelsLibrary.getModelPaths(true).filter(fn).map(p => p.substring(p.indexOf("models/"))).toList
org/nlogo/headless/ChecksumsAndPreviews.scala-10-    // The option names correspond to target names in the Makefile - ST 2/12/09
org/nlogo/headless/ChecksumsAndPreviews.scala-11-    argv match {
org/nlogo/headless/ChecksumsAndPreviews.scala:12:      case Array("--checksum", path) => Checksums.update(List(path))
org/nlogo/headless/ChecksumsAndPreviews.scala:13:      case Array("--checksums")      => Checksums.update(paths(Checksums.okPath))
org/nlogo/headless/ChecksumsAndPreviews.scala:14:      case Array("--preview", path)  => Previews.remake(path)
org/nlogo/headless/ChecksumsAndPreviews.scala:15:      case Array("--previews")       => paths(Previews.okPath).foreach(Previews.remake)
org/nlogo/headless/ChecksumsAndPreviews.scala-16-    }
org/nlogo/headless/ChecksumsAndPreviews.scala:17:    println("done")
org/nlogo/headless/ChecksumsAndPreviews.scala-18-  }
org/nlogo/headless/ChecksumsAndPreviews.scala-19-
org/nlogo/headless/ChecksumsAndPreviews.scala-20-  object Previews {
org/nlogo/headless/ChecksumsAndPreviews.scala-21-    def okPath(path:String) =
org/nlogo/headless/ChecksumsAndPreviews.scala:22:      List("/UNDER DEVELOPMENT/","HUBNET","USER COMMUNITY","/GOGO/","/BENCHMARKS/OTHER/",
org/nlogo/headless/ChecksumsAndPreviews.scala:23:           "/CODE EXAMPLES/SOUND/").forall(!path.toUpperCase.containsSlice(_))
org/nlogo/headless/ChecksumsAndPreviews.scala-24-    def remake(path:String) {
org/nlogo/headless/ChecksumsAndPreviews.scala:25:      val previewPath = path.replaceFirst("\\.nlogo$",".png")
org/nlogo/headless/ChecksumsAndPreviews.scala-26-      val workspace = HeadlessWorkspace.newInstance
org/nlogo/headless/ChecksumsAndPreviews.scala-27-      try {
org/nlogo/headless/ChecksumsAndPreviews.scala-28-        // we set the random seed before opening the model, so that the random-seed will affect the
org/nlogo/headless/ChecksumsAndPreviews.scala-29-        // startup procedure if any - ST 7/12/06
org/nlogo/headless/ChecksumsAndPreviews.scala:30:        workspace.command("random-seed 0")
org/nlogo/headless/ChecksumsAndPreviews.scala-31-        workspace.open(path)
org/nlogo/headless/ChecksumsAndPreviews.scala:32:        if(workspace.previewCommands.containsSlice("need-to-manually-make-preview-for-this-model"))
org/nlogo/headless/ChecksumsAndPreviews.scala:33:          println("skipping: " + path)
org/nlogo/headless/ChecksumsAndPreviews.scala-34-        else {
org/nlogo/headless/ChecksumsAndPreviews.scala:35:          println("making preview for: " + path)
org/nlogo/headless/ChecksumsAndPreviews.scala-36-          workspace.command(workspace.previewCommands)
org/nlogo/headless/ChecksumsAndPreviews.scala:37:          workspace.exportView(previewPath , "PNG")
org/nlogo/headless/ChecksumsAndPreviews.scala-38-        }
org/nlogo/headless/ChecksumsAndPreviews.scala-39-      }
org/nlogo/headless/ChecksumsAndPreviews.scala-53-    type ChecksumMap = collection.mutable.LinkedHashMap[String,Entry]
org/nlogo/headless/ChecksumsAndPreviews.scala-54-    def okPath(path:String) =
org/nlogo/headless/ChecksumsAndPreviews.scala:55:      !List("/UNDER DEVELOPMENT/","HUBNET","/BENCHMARKS/OTHER/","/USER COMMUNITY MODELS/","/CURRICULAR MODELS/")
org/nlogo/headless/ChecksumsAndPreviews.scala-56-            .exists(path.toUpperCase.containsSlice(_)) &&
org/nlogo/headless/ChecksumsAndPreviews.scala:57:        (if(List("/GAMES/FROGGER.NLOGO","/ART/SOUND MACHINES.NLOGO","/CODE EXAMPLES/SOUND/")
org/nlogo/headless/ChecksumsAndPreviews.scala-58-           .exists(path.toUpperCase.containsSlice(_))) {
org/nlogo/headless/ChecksumsAndPreviews.scala:59:          println("SKIPPING MODEL: " +  path)
org/nlogo/headless/ChecksumsAndPreviews.scala:60:          println("  because it uses the sound extension")
org/nlogo/headless/ChecksumsAndPreviews.scala-61-          false
org/nlogo/headless/ChecksumsAndPreviews.scala-62-        }
org/nlogo/headless/ChecksumsAndPreviews.scala-63-        else true)
org/nlogo/headless/ChecksumsAndPreviews.scala-64-    def update(paths:List[String]) {
org/nlogo/headless/ChecksumsAndPreviews.scala:65:      val path = if(Version.is3D) "test/modelchecks3d.txt"
org/nlogo/headless/ChecksumsAndPreviews.scala:66:                 else "test/modelchecks.txt"
org/nlogo/headless/ChecksumsAndPreviews.scala-67-      val m = load(path)
org/nlogo/headless/ChecksumsAndPreviews.scala-68-      paths.foreach(updateOne(m,_))
org/nlogo/headless/ChecksumsAndPreviews.scala-76-          // the checksum file let it fall through and report the error
org/nlogo/headless/ChecksumsAndPreviews.scala-77-          m.remove(model)
org/nlogo/headless/ChecksumsAndPreviews.scala:78:          println("Model does not exist, deleting checksum for: " + model)
org/nlogo/headless/ChecksumsAndPreviews.scala-79-        }
org/nlogo/headless/ChecksumsAndPreviews.scala-80-        else {
org/nlogo/headless/ChecksumsAndPreviews.scala-84-      }
org/nlogo/headless/ChecksumsAndPreviews.scala-85-      catch { case e:Exception =>
org/nlogo/headless/ChecksumsAndPreviews.scala:86:                println("SKIPPING MODEL: " + model + "\n  because of exception:")
org/nlogo/headless/ChecksumsAndPreviews.scala-87-                e.printStackTrace() }
org/nlogo/headless/ChecksumsAndPreviews.scala-88-      finally { workspace.dispose() }
org/nlogo/headless/ChecksumsAndPreviews.scala-97-      // figure out if the entry is new, changed, or the same
org/nlogo/headless/ChecksumsAndPreviews.scala-98-      val action =
org/nlogo/headless/ChecksumsAndPreviews.scala:99:        if(!m.contains(model)) "* Added" 
org/nlogo/headless/ChecksumsAndPreviews.scala:100:        else if(oldEntry.get == newEntry) "Didn't change" 
org/nlogo/headless/ChecksumsAndPreviews.scala:101:        else if(oldEntry.get.equalsExceptRevision(newEntry)) "* Changed rev # only" 
org/nlogo/headless/ChecksumsAndPreviews.scala:102:        else "* Changed"
org/nlogo/headless/ChecksumsAndPreviews.scala-103-      m.put(model,newEntry)
org/nlogo/headless/ChecksumsAndPreviews.scala:104:      if(action != "Didn't change")
org/nlogo/headless/ChecksumsAndPreviews.scala:105:        println(action + ": \"" + model + "\t" + newCheckSum 
org/nlogo/headless/ChecksumsAndPreviews.scala:106:                + "\t" + newGraphicsChecksum + "\t" + revision + "\"")
org/nlogo/headless/ChecksumsAndPreviews.scala-107-    }
org/nlogo/headless/ChecksumsAndPreviews.scala-108-    def load(path:String):ChecksumMap = {
org/nlogo/headless/ChecksumsAndPreviews.scala-112-          val strs = line.split("\t")
org/nlogo/headless/ChecksumsAndPreviews.scala-113-          if(strs.size != 4)
org/nlogo/headless/ChecksumsAndPreviews.scala:114:            throw new IllegalStateException("bad line: " + line)
org/nlogo/headless/ChecksumsAndPreviews.scala-115-          m.put(strs(0),Entry(strs(0),strs(1),strs(2),strs(3)))
org/nlogo/headless/ChecksumsAndPreviews.scala-116-        }
org/nlogo/headless/ChecksumsAndPreviews.scala-123-    }
org/nlogo/headless/ChecksumsAndPreviews.scala-124-    def getRevisionNumber(modelPath:String):String = {
org/nlogo/headless/ChecksumsAndPreviews.scala:125:      val revisionString = "Last Changed Rev: "
org/nlogo/headless/ChecksumsAndPreviews.scala-127-      val stdInput = new java.io.BufferedReader(
org/nlogo/headless/ChecksumsAndPreviews.scala-128-        new java.io.InputStreamReader(

org/nlogo/headless/HeadlessWorkspace.java:318:	public String tickCounterLabel() { return "ticks" ; }
org/nlogo/headless/HeadlessWorkspace.java:501:				System.err.println( "got a " + ( fatalError ? "" : "non" ) +
org/nlogo/headless/HeadlessWorkspace.java:502:									"fatal error " + title + ": " + errorDetails ) ;
org/nlogo/headless/HeadlessWorkspace.java:774:				System.out.println( "ignored compile error: " + path ) ;

org/nlogo/headless/Main.scala:82:        die("unknown argument: " + arg)
org/nlogo/headless/Main.scala:85:      die("you must specify --model")
org/nlogo/headless/Main.scala:87:      die("you must specify either --setup-file or --experiment (or both)")
org/nlogo/headless/Main.scala:90:      die("if any of min/max-px/ycor are specified, all four must be specified")
org/nlogo/headless/Shell.scala:12:    System.err.println(Version.version + " (" + Version.buildDate + ") " + SysInfo.getSVNInfoString)
org/nlogo/headless/Shell.scala:25:        println("COMPILER ERROR: " + ex.getMessage)
org/nlogo/headless/Shell.scala:29:        println("RUNTIME ERROR: " + msg)
org/nlogo/headless/Shell.scala:32:        println("RUNTIME ERROR: " + ex.getMessage)

org/nlogo/hubnet/client/ClientApp.scala:101:        login("Local " + localClientIndex, hostip, port)
org/nlogo/hubnet/client/ClientApp.scala:136:    0 == org.nlogo.swing.OptionDialog.show(loginDialog, "Confirm " + title, message, buttons)
org/nlogo/hubnet/client/ClientApp.scala:144:        OptionDialog.show(this, "", "You have been disconnected from " + activityName + ".", Array("ok"))
org/nlogo/hubnet/client/ClientApp.scala:153:    OptionDialog.show(loginDialog, "Login Failed", errorMessage, Array("OK"))
org/nlogo/hubnet/client/ClientApp.scala:158:    if (showExitMessage("Exit", "Do you really want to exit this activity?")) clientPanel.logout()
org/nlogo/hubnet/client/ClientApp.scala:163:    if (showExitMessage("Quit", "Do you really want to quit HubNet?")) destroy()
org/nlogo/hubnet/client/ClientApplet.java:126:                        }, "Entering...");
org/nlogo/hubnet/client/ClientApplet.java:162:                                    "You have been disconnected from " + activityName + ".", ok);
org/nlogo/hubnet/client/ClientApplet.java:190:                        applet.appFrame = new javax.swing.JFrame("HubNet Client");
org/nlogo/hubnet/client/ClientGUI.scala:60:        case _ => throw new IllegalStateException("couldn't find widget " + name)
org/nlogo/hubnet/client/ClientGUI.scala:86:    private val List(username, server, port) = List("User name", "Server", "Port").map(new StatusField(_, ""))
org/nlogo/hubnet/client/ClientGUI.scala:94:      org.nlogo.awt.Utils.getFrame(ClientGUI.this).setTitle("HubNet: " + activity)
org/nlogo/hubnet/client/ClientPanel.scala:48:    sendDataAndWait(new ActivityCommand(if (down) ClientInterface.VIEW_STRING else "Mouse Up", coords))
org/nlogo/hubnet/client/ClientPanel.scala:91:      case PlotWidgetExportType.ALL => throw new UnsupportedOperationException("can't export all plots yet.")
org/nlogo/hubnet/client/ClientPanel.scala:98:          }.export("plot", "HubNet Client", "")
org/nlogo/hubnet/client/ClientPanel.scala:117:    if (widgetName == "VIEW") value match {
org/nlogo/hubnet/client/ClientPanel.scala:123:    else if (widgetName=="ALL PLOTS") {
org/nlogo/hubnet/client/ClientPanel.scala:249:          OptionDialog.show(getFrame(this), "User Message", message.content.toString, Array("OK", "Halt"))
org/nlogo/hubnet/client/ClientPanel.scala:302:      case e: NoRouteToHostException => "Login failed:\n" + hostip + " could not be reached."
org/nlogo/hubnet/client/ClientPanel.scala:303:      case e: UnknownHostException => "Login failed:\n" + hostip + " does not resolve to a valid IP address."
org/nlogo/hubnet/client/ClientPanel.scala:304:      case e: ConnectException => "Login failed:\n" + "There was no server running at " + hostip + " on port " + port
org/nlogo/hubnet/client/ClientPanel.scala:305:      case e: IOException => "Login failed:\nUnknown cause:\n" + org.nlogo.util.Utils.getStackTrace(e)
org/nlogo/hubnet/client/ClientPanel.scala:306:      case e: RuntimeException => "Login failed:\nUnknown cause:\n" + org.nlogo.util.Utils.getStackTrace(e)
org/nlogo/hubnet/client/ClientPanel.scala:341:  private class Listener(userName: String, socket: Socket) extends SocketListener("Listener: " + userName, socket) {
org/nlogo/hubnet/client/ClientPanel.scala:397:    } else System.err.println("Attempted to send data on a shutdown listener, ignoring.")
org/nlogo/hubnet/client/ClientPanel.scala:406:        else handleLoginFailure("The version of the HubNet Client" +
org/nlogo/hubnet/client/ClientPanel.scala:407:                " you are using does not match the version of the " +
org/nlogo/hubnet/client/ClientPanel.scala:408:                "server. Please use the HubNet Client that comes with " + info)

org/nlogo/hubnet/client/LoginDialog.scala:14:        extends JDialog(parent, "HubNet", true)
org/nlogo/hubnet/client/LoginDialog.scala:28:  private val enterButton = new JButton("Enter") {addActionListener(LoginDialog.this)}
org/nlogo/hubnet/client/LoginDialog.scala:42:        addField("User name:", nameField)
org/nlogo/hubnet/client/LoginDialog.scala:45:          addField("Server:", serverField)
org/nlogo/hubnet/client/LoginDialog.scala:47:        addField("Port:", portField)
org/nlogo/hubnet/client/LoginDialog.scala:140:        JOptionPane.showMessageDialog(this, "Invalid port number", "Login Failed", JOptionPane.INFORMATION_MESSAGE)

org/nlogo/hubnet/client/RoboClientPanel.scala:26:  private class RoboWidgetControl extends Thread("RoboWidgetControl Thread") {
org/nlogo/hubnet/client/ServerTable.scala:15:  val COLUMN_NAMES = Array("Name", "Activity", "Server", "Port")
org/nlogo/hubnet/client/ServerTable.scala:54:    getColumn("Port").setMaxWidth(50)
org/nlogo/hubnet/client/ServerTable.scala:55:    getColumn("Name").setPreferredWidth(50)
org/nlogo/hubnet/client/ServerTable.scala:56:    getColumn("Activity").setPreferredWidth(50)
org/nlogo/hubnet/client/ServerTable.scala:57:    getColumn("Server").setPreferredWidth(200)
org/nlogo/hubnet/client/ServerTable.scala:141:        case _ => throw new IndexOutOfBoundsException("column " + column)

org/nlogo/hubnet/client/TimedSet.java:200:				( "TimedSet does not contain " + o );
org/nlogo/hubnet/client/TimedSet.java:215:				( "TimedSet does not contain " + o );

 org/nlogo/hubnet/connection/AbstractConnectionManager.scala:211:    if(message.isEnterMessage) "\"" + message.getSource + "\" entered at " + new Date() + "."
org/nlogo/hubnet/connection/AbstractConnectionManager.scala:212:    else if(message.isExitMessage) "\"" + message.getSource + "\" exited at " + new Date() + "."
org/nlogo/hubnet/connection/AbstractConnectionManager.scala:213:    else nodeType + " HubNet at " + new Date() + " received {Source=" + message.getSource +
org/nlogo/hubnet/connection/AbstractConnectionManager.scala:214:              ", Message=" + message.getMessage + ", Tag=" + message.getTag + "}"
org/nlogo/hubnet/connection/AbstractConnectionManager.scala:221:  def sendMessageDebugOutput(tag:String,message:Any): String = sendMessageDebugOutput(tag, message, "ALL LOGGED IN USERS")
org/nlogo/hubnet/connection/AbstractConnectionManager.scala-227-  def sendMessageDebugOutput(tag:String, message:Any,node:String) =
org/nlogo/hubnet/connection/AbstractConnectionManager.scala:228:    nodeType + " HubNet at " + new Date() + " sent {Source=" + node + ", Message=" + message + ", Tag=" + tag + "}"
org/nlogo/hubnet/connection/MessageEnvelope.scala-30-
org/nlogo/hubnet/connection/MessageEnvelope.scala:32:    @throws(classOf[HubNetException]) def getTag: String = if (kind == Normal) tag.get else throwError(kind, "-tag")
org/nlogo/hubnet/connection/MessageEnvelope.scala:36:        "hubnet-message" + messageSuffix + " cannot be used on an " + messageType.toString.toLowerCase + " message. " +
org/nlogo/hubnet/connection/MessageEnvelope.scala:37:                "Use hubnet-" + messageType.toString.toLowerCase + "-message? instead.")
org/nlogo/hubnet/connection/SocketListener.scala:73:      new Thread("SocketListener disconnect") {
org/nlogo/hubnet/connection/SocketListener.scala:111:  private class WritingThread(name: String) extends Thread("WritingThread:" + name) {

org/nlogo/hubnet/HubNetClientEditor.scala:78:      title + " - " + I18N.gui.get("menu.tools.hubNetClientEditor")
org/nlogo/hubnet/HubNetClientEditor.scala:82:      I18N.gui.get("menu.tools.hubNetClientEditor") + " " + 8212.toChar + " " + title
org/nlogo/hubnet/HubNetClientEditor.scala:85:    if (mt == ModelType.NORMAL) t + " {" + directory + "}" else t

org/nlogo/hubnet/HubNetManager.scala-26-  val NO_DATA_WAITING =
org/nlogo/hubnet/HubNetManager.scala:27:          "There is no data waiting.  Always check for data using " +
org/nlogo/hubnet/HubNetManager.scala:28:                  "HUBNET-MESSAGE-WAITING? before fetching data with " +
org/nlogo/hubnet/HubNetManager.scala:29:                  "HUBNET-FETCH-MESSAGE."
org/nlogo/hubnet/HubNetManager.scala-30-  val NO_DATA_FETCHED =
org/nlogo/hubnet/HubNetManager.scala:31:          "The data has not been fetched.  Always fetch the data " +
org/nlogo/hubnet/HubNetManager.scala:32:                  "with HUBNET-FETCH-MESSAGE before you try to access the data with " +
org/nlogo/hubnet/HubNetManager.scala:33:                  "HUBNET-MESSAGE or HUBNET-MESSAGE-SOURCE or HUBNET-MESSAGE-TAG"
org/nlogo/hubnet/HubNetManager.scala:35:  val NOT_LOGGED_IN = "Not logged in.  Please use the hubnet-reset command."
org/nlogo/hubnet/HubNetManager.scala:222:      throw new HubNetException("You have not specified what type of HubNet you wish to use.  "
org/nlogo/hubnet/HubNetManager.scala:223:              + "Please use the hubnet-set-client-interface primitive.")
org/nlogo/hubnet/HubNetManager.scala:248:      if (!factory.isDefined) throw new HubNetException(interfaceType + " is not a valid node type.")
org/nlogo/hubnet/HubNetManager.scala:253:        throw new HubNetException("Only one type of HubNet (Calculator or Computer) may be active.  Make sure you use "
org/nlogo/hubnet/HubNetManager.scala:254:                + "hubnet-set-client-interface with only one HubNet type per activity.")
org/nlogo/hubnet/HubNetManager.scala:305:  private def broadcastViewMessage(obj: Any) {if (someNodesHaveView) broadcast("VIEW", obj)}
org/nlogo/hubnet/mirroring/ClientWorld.java:172:				throw new AgentException( "Cannot move turtle beyond the world's edge." ) ;
org/nlogo/hubnet/mirroring/ClientWorld.java:190:				throw new AgentException("Cannot move turtle beyond the world's edge.") ;
org/nlogo/hubnet/mirroring/ClientWorld.java:250:			handleError("ERROR: received update for "
org/nlogo/hubnet/mirroring/ClientWorld.java:251:				+ "non-existent patch (" + patch.stringRep() + ").");
org/nlogo/hubnet/mirroring/ClientWorld.java:262:				( "ERROR: received incremental update for non-existent patch (" + patch.stringRep() + ")." ) ;
org/nlogo/hubnet/mirroring/ClientWorld.java:280:				handleError( "ERROR: received death message for "
org/nlogo/hubnet/mirroring/ClientWorld.java:281:							 + "non-existent turtle (" + turtle.stringRep() + ").");
org/nlogo/hubnet/mirroring/ClientWorld.java:320:				handleError( "ERROR: received incremental update for non-existent turtle ("
org/nlogo/hubnet/mirroring/ClientWorld.java-321-							 + turtle.stringRep() + ")." ) ;
org/nlogo/hubnet/mirroring/ClientWorld.java:350:					( "ERROR: received death message for non-existent link ( "
org/nlogo/hubnet/mirroring/ClientWorld.java-351-					  + link.stringRep() + " )." ) ;
org/nlogo/hubnet/mirroring/ClientWorld.java:391:				handleError( "ERROR: received incremental update for "
org/nlogo/hubnet/mirroring/ClientWorld.java:392:							 + "non-existent turtle (" + link.stringRep() + ")." ) ;
org/nlogo/hubnet/mirroring/ClientWorld.java:496:			System.err.println("@ " + new java.util.Date() + " : ");
org/nlogo/hubnet/mirroring/ClientWorld.java-497-			System.err.println( o.toString() );
org/nlogo/hubnet/mirroring/ClientWorld.java:767:			return "(" + who + " " + breedIndex + ")";
org/nlogo/hubnet/mirroring/ClientWorld.java:817:			return "(" + id + " " + breedIndex + ")";
org/nlogo/hubnet/mirroring/DiffBuffer.java:202:			javax.imageio.ImageIO.write( drawing , "PNG" , os ) ;

org/nlogo/hubnet/mirroring/HubNetLinkStamp.java:45:		return x1 + " " + y1 + " " + x2 + " " + y2 + " " + color + " "
org/nlogo/hubnet/mirroring/HubNetLinkStamp.java:46:			+ shape + " " + hidden + " " + lineThickness + " " + erase ;
org/nlogo/hubnet/mirroring/HubNetPlotPoint.java:59:		return "plot-point@" + xcor + "," + ycor ;

org/nlogo/hubnet/mirroring/LinkData.java:65:		return "link " + id + " " + breedIndex ;
org/nlogo/hubnet/mirroring/LinkData.java-335-
org/nlogo/hubnet/mirroring/LinkData.java-336-	private static final String [] OVERRIDE_VARIABLES = new String [] 
org/nlogo/hubnet/mirroring/LinkData.java:337:		{ "COLOR" , "LABEL" , "LABEL-COLOR" , "LINE-THICKNESS" , "HIDDEN?" , "SHAPE"  } ;
org/nlogo/hubnet/mirroring/LinkData.java-338-	private static final String [] OVERRIDE_METHODS = new String[] 
org/nlogo/hubnet/mirroring/LinkData.java:339:		{ "color" , "labelString" , "labelColor" , "lineThickness" , "hidden" , "shape" } ;
org/nlogo/hubnet/mirroring/LinkData.java-340-	
org/nlogo/hubnet/mirroring/LinkData.java-341-	@Override public String getMethodName( int index )
org/nlogo/hubnet/mirroring/LinkData.java-393-		if( mask == COMPLETE )
org/nlogo/hubnet/mirroring/LinkData.java-394-		{
org/nlogo/hubnet/mirroring/LinkData.java:395:			return "Link " + id + " (" + x1 + ", " + y1 + ", " + x2 + ", " + y2 + ", "
org/nlogo/hubnet/mirroring/LinkData.java:396:				+ shape + ", " + org.nlogo.api.Color.getARGBIntByRGBAList( color ) + ", " + ", " + hidden + ", " 
org/nlogo/hubnet/mirroring/LinkData.java:397:				+ label + ", " + org.nlogo.api.Color.getARGBIntByRGBAList( labelColor ) + ", " + lineThickness + ")" ;
org/nlogo/hubnet/mirroring/LinkData.java-398-		}
org/nlogo/hubnet/mirroring/LinkData.java-399-		if( mask == DEAD )
org/nlogo/hubnet/mirroring/LinkData.java-400-		{
org/nlogo/hubnet/mirroring/LinkData.java:401:			return "Link " + id + " (dead)";
org/nlogo/hubnet/mirroring/LinkData.java-402-		}
org/nlogo/hubnet/mirroring/LinkData.java:403:		return "Link " + id + " update (mask " + Integer.toBinaryString( mask ) + ")";
org/nlogo/hubnet/mirroring/LinkData.java-404-	}
org/nlogo/hubnet/mirroring/LinkData.java-405-
org/nlogo/hubnet/mirroring/LinkData.java-426-		{
org/nlogo/hubnet/mirroring/LinkData.java-427-			// we shouldn't be here...
org/nlogo/hubnet/mirroring/LinkData.java:428:			System.err.println("@ " + new java.util.Date() + " : ") ;
org/nlogo/hubnet/mirroring/LinkData.java:429:			System.err.println("ERROR: attempting incremental update of a "
org/nlogo/hubnet/mirroring/LinkData.java:430:				+ "dead link (" + stringRep() + ").") ;
org/nlogo/hubnet/mirroring/LinkData.java-431-			return null ;
org/nlogo/hubnet/mirroring/LinkData.java-432-		}

org/nlogo/hubnet/mirroring/OverrideList.java-19-		{
org/nlogo/hubnet/mirroring/OverrideList.java:20:			throw new OverrideException( "you cannot override " + varName ) ;
org/nlogo/hubnet/mirroring/OverrideList.java-21-		}

org/nlogo/hubnet/mirroring/PatchData.java-220-	}
org/nlogo/hubnet/mirroring/PatchData.java:222:	private static final String [] OVERRIDE_VARIABLES = new String [] { "PCOLOR" , "PLABEL" , "PLABEL-COLOR" } ;
org/nlogo/hubnet/mirroring/PatchData.java:223:	private static final String [] OVERRIDE_METHODS = new String[] { "pcolor" , "plabel" , "plabelColor" } ;
org/nlogo/hubnet/mirroring/PatchData.java-255-	String stringRep()
org/nlogo/hubnet/mirroring/PatchData.java-256-	{
org/nlogo/hubnet/mirroring/PatchData.java:257:		return "Patch " + pxcor + " " + pycor + " (" + org.nlogo.api.Color.getARGBIntByRGBAList( pcolor )  
org/nlogo/hubnet/mirroring/PatchData.java:258:			+ ", " + plabel + ", " + org.nlogo.api.Color.getARGBIntByRGBAList( plabelColor ) + ")";

org/nlogo/hubnet/mirroring/ServerWorld.java-195-		for ( TurtleData turtle : turtles.values() )
org/nlogo/hubnet/mirroring/ServerWorld.java-196-		{
org/nlogo/hubnet/mirroring/ServerWorld.java:197:			// so, add a new "dead" TurtleData to the outgoing buffer.
org/nlogo/hubnet/mirroring/ServerWorld.java-198-			buf.addTurtle( new TurtleData( turtle.id() ) ) ;
org/nlogo/hubnet/mirroring/ServerWorld.java-199-		}
org/nlogo/hubnet/mirroring/ServerWorld.java-223-		for ( LinkData data : links.values() )
org/nlogo/hubnet/mirroring/ServerWorld.java-224-		{
org/nlogo/hubnet/mirroring/ServerWorld.java:225:			// so, add a new "dead" LinkData to the outgoing buffer.
org/nlogo/hubnet/mirroring/ServerWorld.java-226-			buf.addLink( new LinkData( data.id ) ) ;
org/nlogo/hubnet/mirroring/ServerWorld.java-227-		}
org/nlogo/hubnet/mirroring/ServerWorld.java-380-		if( drawing != null )
org/nlogo/hubnet/mirroring/ServerWorld.java-381-		{
org/nlogo/hubnet/mirroring/ServerWorld.java:382:			javax.imageio.ImageIO.write( drawing , "PNG" , os ) ;
org/nlogo/hubnet/mirroring/ServerWorld.java-383-		}
org/nlogo/hubnet/mirroring/ServerWorld.java-384-	}
org/nlogo/hubnet/mirroring/TurtleData.java-290-
org/nlogo/hubnet/mirroring/TurtleData.java-291-	private static final String [] OVERRIDE_VARIABLES = new String [] 
org/nlogo/hubnet/mirroring/TurtleData.java:292:		{ "COLOR" , "LABEL" , "LABEL-COLOR" , "LINE-THICKNESS" , "HIDDEN?" , "HEADING" , "SHAPE" , "SIZE" } ;
org/nlogo/hubnet/mirroring/TurtleData.java-293-	private static final String [] OVERRIDE_METHODS = new String[] 
org/nlogo/hubnet/mirroring/TurtleData.java:294:		{ "color" , "label" , "labelColor" , "lineThickness" , "hidden" , "heading" , "shape" , "size" } ;
org/nlogo/hubnet/mirroring/TurtleData.java-295-	
org/nlogo/hubnet/mirroring/TurtleData.java-296-	@Override public String getMethodName( int index )
org/nlogo/hubnet/mirroring/TurtleData.java-317-		if( mask == COMPLETE )
org/nlogo/hubnet/mirroring/TurtleData.java-318-		{
org/nlogo/hubnet/mirroring/TurtleData.java:319:			return "Turtle " + who + " (" + xcor + ", " + ycor + ", "
org/nlogo/hubnet/mirroring/TurtleData.java:320:				+ shape + ", " + org.nlogo.api.Color.getARGBIntByRGBAList( color ) + ", " + heading + ", " + size
org/nlogo/hubnet/mirroring/TurtleData.java:321:				+ ", " + hidden + ", " + label + ", " + org.nlogo.api.Color.getARGBIntByRGBAList( labelColor ) 
org/nlogo/hubnet/mirroring/TurtleData.java:322:				+ ", " + breedIndex + ", " + lineThickness + ")";
org/nlogo/hubnet/mirroring/TurtleData.java-323-		}
org/nlogo/hubnet/mirroring/TurtleData.java-324-		if( mask == DEAD )
org/nlogo/hubnet/mirroring/TurtleData.java-325-		{
org/nlogo/hubnet/mirroring/TurtleData.java:326:			return "Turtle " + who + " (dead)";
org/nlogo/hubnet/mirroring/TurtleData.java-327-		}
org/nlogo/hubnet/mirroring/TurtleData.java:328:		return "Turtle " + who + " update (mask "
org/nlogo/hubnet/mirroring/TurtleData.java-329-			+ Integer.toBinaryString( mask ) + ")";
org/nlogo/hubnet/mirroring/TurtleData.java-330-	}
org/nlogo/hubnet/mirroring/TurtleData.java-352-		{
org/nlogo/hubnet/mirroring/TurtleData.java-353-			// we shouldn't be here...
org/nlogo/hubnet/mirroring/TurtleData.java:354:			System.err.println("@ " + new java.util.Date() + " : ");
org/nlogo/hubnet/mirroring/TurtleData.java:355:			System.err.println("ERROR: attempting incremental update of a "
org/nlogo/hubnet/mirroring/TurtleData.java:356:				+ "dead turtle (" + stringRep() + ").");
org/nlogo/hubnet/mirroring/TurtleData.java-357-			return null;
org/nlogo/hubnet/mirroring/TurtleData.java-358-		}
org/nlogo/hubnet/mirroring/TurtleData.java-359-
org/nlogo/hubnet/mirroring/TurtleData.java:360:		// start out with a "dead" turtle, but we'll fill it in...
org/nlogo/hubnet/mirroring/TurtleData.java-361-		TurtleData diffs = new TurtleData( who ) ;
org/nlogo/hubnet/mirroring/TurtleData.java-362-


org/nlogo/hubnet/protocol/DiscoveryMessage.java-76-			if( !version.equals( org.nlogo.api.Version.version() ) ) { 
org/nlogo/hubnet/protocol/DiscoveryMessage.java:77:				throw new IOException("Cannot deserialize DiscoveryMessage: version mismatch");
org/nlogo/hubnet/protocol/DiscoveryMessage.java-78-			}
org/nlogo/hubnet/protocol/DiscoveryMessage.java-86-		{
org/nlogo/hubnet/protocol/DiscoveryMessage.java:87:			throw new IOException("Cannot deserialize DiscoveryMessage: " + ex.getMessage());
org/nlogo/hubnet/protocol/DiscoveryMessage.java-88-		}
org/nlogo/hubnet/protocol/DiscoveryMessage.java-147-	{
org/nlogo/hubnet/protocol/DiscoveryMessage.java:148:		return super.toString() + ":" + uniqueId + "/" + modelName + "/" + portNumber + "/" + version + "/" + hostName;
org/nlogo/hubnet/protocol/DiscoveryMessage.java-149-	}

org/nlogo/hubnet/server/ConnectionHandler.scala-34-      }
org/nlogo/hubnet/server/ConnectionHandler.scala:35:      case _ => throw new IllegalArgumentException( "Message type not known: " + a )
org/nlogo/hubnet/server/ConnectionHandler.scala-36-    }
org/nlogo/hubnet/server/ConnectionHandler.scala:51:          sendData(new LoginFailure("The version of the HubNet Client you are using does not "
org/nlogo/hubnet/server/ConnectionHandler.scala:52:                  + "match the version of the server. Please use the HubNet Client that comes with " + Version.version))
org/nlogo/hubnet/server/ConnectionHandler.scala-63-              else sendData(new LoginFailure(
org/nlogo/hubnet/server/ConnectionHandler.scala:64:                "\"" + desiredClientId + "\" is already taken by another user.  Please choose another name."))
org/nlogo/hubnet/server/ConnectionHandler.scala-66-            // make sure clients get current view mirroring state.
org/nlogo/hubnet/server/ConnectionHandler.scala-79-      // This seems bad. Log this, send a mesasge back to the client...do something better than just throwing.
org/nlogo/hubnet/server/ConnectionHandler.scala:80:      case _ => throw new IllegalArgumentException( "Message type not known: " + message )
org/nlogo/hubnet/server/ConnectionHandler.scala-111-        invokeLater(() => {
org/nlogo/hubnet/server/ConnectionHandler.scala-112-          OptionDialog.show(server.frame,
org/nlogo/hubnet/server/ConnectionHandler.scala:113:            "Login Failed",
org/nlogo/hubnet/server/ConnectionHandler.scala:114:            "An incompatible version of the HubNet Client tried"
org/nlogo/hubnet/server/ConnectionHandler.scala:115:                    + " logging in. Please ensure that everyone is"
org/nlogo/hubnet/server/ConnectionHandler.scala:116:                    + " using the version of the HubNet Client that"
org/nlogo/hubnet/server/ConnectionHandler.scala:117:                    + " came with this release, "
org/nlogo/hubnet/server/ConnectionHandler.scala-118-                    + org.nlogo.api.Version.version(),
org/nlogo/hubnet/server/ConnectionManager.scala-19-
org/nlogo/hubnet/server/ConnectionManager.scala:21:  val COMP_CONNECTION = "COMPUTER"
org/nlogo/hubnet/server/ConnectionManager.scala-22-  val VALID_SEND_TYPES_MESSAGE =
org/nlogo/hubnet/server/ConnectionManager.scala:23:  "You can only send strings, booleans (true or false), numbers, and lists of these types."
org/nlogo/hubnet/server/ConnectionManager.scala-24-}
org/nlogo/hubnet/server/ConnectionManager.scala-82-      def createSocket(portToTry: Int): (Int, ServerSocket) = {
org/nlogo/hubnet/server/ConnectionManager.scala:83:        if (portToTry > Ports.MAX_PORT_NUMBER) throw new BindException("port: " + portToTry)
org/nlogo/hubnet/server/ConnectionManager.scala-116-        invokeLater(() => {
org/nlogo/hubnet/server/ConnectionManager.scala:117:          val message = "Could not start the HubNet server.  No ports are available."
org/nlogo/hubnet/server/ConnectionManager.scala:118:          val title = "Error Starting HubNet"
org/nlogo/hubnet/server/ConnectionManager.scala-120-          ()
org/nlogo/hubnet/server/ConnectionManager.scala-121-        })
org/nlogo/hubnet/server/ConnectionManager.scala-214-  @throws(classOf[HubNetException])
org/nlogo/hubnet/server/ConnectionManager.scala-215-  override def broadcast(tag:String, message:Any) {
org/nlogo/hubnet/server/ConnectionManager.scala:216:    if (!isValidTag(tag)) throw new HubNetException(tag + " is not a valid tag on the client.")
org/nlogo/hubnet/server/ConnectionManager.scala-217-    if (!(message.isInstanceOf[Serializable])) throw new HubNetException(ConnectionManager.VALID_SEND_TYPES_MESSAGE)
org/nlogo/hubnet/server/ConnectionManager.scala-218-    broadcastMessage(new WidgetControl(message.asInstanceOf[Serializable], tag))
org/nlogo/hubnet/server/ConnectionManager.scala-226-  @throws(classOf[HubNetException])
org/nlogo/hubnet/server/ConnectionManager.scala-227-  override def send (node:String, tag:String, message:Any) = {
org/nlogo/hubnet/server/ConnectionManager.scala:228:    if (!isValidTag(tag)) throw new HubNetException(tag + " is not a valid tag on the client.")
org/nlogo/hubnet/server/ConnectionManager.scala-229-    sendUserMessage(node, new WidgetControl(message.asInstanceOf[Serializable], tag))
org/nlogo/hubnet/server/ConnectionManager.scala-230-  }
org/nlogo/hubnet/server/ControlCenter.scala-22-class ControlCenter(server: ConnectionManager, frame: Frame, serverId: String,
org/nlogo/hubnet/server/ControlCenter.scala-23-                    activityName: String, clientIds: Iterable[String])
org/nlogo/hubnet/server/ControlCenter.scala:24:        extends JFrame(I18N.gui.get("menu.tools.hubNetControlCenter")) {
org/nlogo/hubnet/server/ControlCenter.scala-25-  private val clientsPanel: ClientsPanel = new ClientsPanel(clientIds)
org/nlogo/hubnet/server/ControlCenter.scala-26-  private val messagePanel: MessagePanel = new MessagePanel()
org/nlogo/hubnet/server/ControlCenter.scala-68-    org.nlogo.awt.Utils.mustBeEventDispatchThread()
org/nlogo/hubnet/server/ControlCenter.scala-69-    clientsPanel.addClientEntry(clientId)
org/nlogo/hubnet/server/ControlCenter.scala:70:    messagePanel.logMessage("\'" + clientId + "\' joined from: " + remoteAddress + "\n")
org/nlogo/hubnet/server/ControlCenter.scala-71-  }
org/nlogo/hubnet/server/ControlCenter.scala-72-
org/nlogo/hubnet/server/ControlCenter.scala-73-  def clientDisconnect(clientId: String) {
org/nlogo/hubnet/server/ControlCenter.scala-74-    org.nlogo.awt.Utils.mustBeEventDispatchThread()
org/nlogo/hubnet/server/ControlCenter.scala:75:    messagePanel.logMessage("\'" + clientId + "\' disconnected.\n")
org/nlogo/hubnet/server/ControlCenter.scala-76-    clientsPanel.removeClientEntry(clientId)
org/nlogo/hubnet/server/ControlCenter.scala-77-  }
org/nlogo/hubnet/server/ControlCenter.scala-91-    private val listData = new DefaultListModel()
org/nlogo/hubnet/server/ControlCenter.scala-92-    private val clientsList = new JList(listData) {
org/nlogo/hubnet/server/ControlCenter.scala:93:      putClientProperty("Quaqua.List.style", "striped")
org/nlogo/hubnet/server/ControlCenter.scala-94-      setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION)
org/nlogo/hubnet/server/ControlCenter.scala-95-      addListSelectionListener(ClientsPanel.this)
org/nlogo/hubnet/server/ControlCenter.scala:96:      setPrototypeCellValue("CLIENT NAME")
org/nlogo/hubnet/server/ControlCenter.scala-97-    }
org/nlogo/hubnet/server/ControlCenter.scala:98:    private val kickButton = new JButton("Kick") {addActionListener(ClientsPanel.this); setEnabled(false)}
org/nlogo/hubnet/server/ControlCenter.scala:99:    private val newClientButton = new JButton("Local") {addActionListener(ClientsPanel.this)}
org/nlogo/hubnet/server/ControlCenter.scala:100:    private val reloadButton = new JButton("Reset") {addActionListener(ClientsPanel.this)}
org/nlogo/hubnet/server/ControlCenter.scala-101-
org/nlogo/hubnet/server/ControlCenter.scala-102-    locally {
org/nlogo/hubnet/server/ControlCenter.scala-103-      setBorder(new EmptyBorder(12, 12, 12, 12))
org/nlogo/hubnet/server/ControlCenter.scala-104-      setLayout(new BorderLayout(0, 4))
org/nlogo/hubnet/server/ControlCenter.scala:105:      add(new JLabel("Clients:") {setAlignmentY(0)}, BorderLayout.NORTH)
org/nlogo/hubnet/server/ControlCenter.scala-106-      add(new JScrollPane(clientsList), BorderLayout.CENTER)
org/nlogo/hubnet/server/ControlCenter.scala-107-      val gridbag = new GridBagLayout()
org/nlogo/hubnet/server/ControlCenter.scala-171-
org/nlogo/hubnet/server/ControlCenter.scala-172-    // Format for message timestamp
org/nlogo/hubnet/server/ControlCenter.scala:173:    private val dateFormatter = new SimpleDateFormat("h:mm:ss")
org/nlogo/hubnet/server/ControlCenter.scala-174-
org/nlogo/hubnet/server/ControlCenter.scala-175-    locally {
org/nlogo/hubnet/server/ControlCenter.scala:176:      val broadcastButton = new JButton("Broadcast Message") {addActionListener(MessagePanel.this)}
org/nlogo/hubnet/server/ControlCenter.scala-177-      val buttonEnabler = new NonemptyTextFieldButtonEnabler(broadcastButton) {
org/nlogo/hubnet/server/ControlCenter.scala-178-        addRequiredField(inputField)
org/nlogo/hubnet/server/ControlCenter.scala-195-      val message = inputField.getText
org/nlogo/hubnet/server/ControlCenter.scala-196-      if (!message.isEmpty) {
org/nlogo/hubnet/server/ControlCenter.scala:197:        logMessage("<Leader> " + message + "\n")
org/nlogo/hubnet/server/ControlCenter.scala-198-        val currentTime = dateFormatter.format(new java.util.Date())
org/nlogo/hubnet/server/ControlCenter.scala:199:        broadcastMessage("" + currentTime + "   " + message)
org/nlogo/hubnet/server/ControlCenter.scala-200-        inputField.setText("")
org/nlogo/hubnet/server/ControlCenter.scala-201-      }
org/nlogo/hubnet/server/ControlCenter.scala-207-    def logMessage(message: String) {
org/nlogo/hubnet/server/ControlCenter.scala-208-      val currentTime = dateFormatter.format(new java.util.Date())
org/nlogo/hubnet/server/ControlCenter.scala:209:      val newMessage = "" + currentTime + "   " + message
org/nlogo/hubnet/server/ControlCenter.scala-210-      // we use setText instead of append to ensure scrolling
org/nlogo/hubnet/server/ControlCenter.scala-211-      messageTextArea.setText(
org/nlogo/hubnet/server/ControlCenter.scala:212:        messageTextArea.getText() + (if (newMessage.endsWith("\n")) newMessage else newMessage) + "\n")
org/nlogo/hubnet/server/ControlCenter.scala-213-    }
org/nlogo/hubnet/server/ControlCenter.scala-214-  }
org/nlogo/hubnet/server/ControlCenter.scala-219-  class ServerOptionsPanel(mirrorView: Boolean, mirrorPlots: Boolean) extends JPanel with ItemListener {
org/nlogo/hubnet/server/ControlCenter.scala-220-
org/nlogo/hubnet/server/ControlCenter.scala:221:    private val mirrorViewCheckBox = new JCheckBox("Mirror 2D view on clients", mirrorView) {
org/nlogo/hubnet/server/ControlCenter.scala-222-      addItemListener(ServerOptionsPanel.this)
org/nlogo/hubnet/server/ControlCenter.scala-223-    }
org/nlogo/hubnet/server/ControlCenter.scala:224:    private val mirrorPlotsCheckBox = new JCheckBox("Mirror plots on clients (experimental)", mirrorPlots) {
org/nlogo/hubnet/server/ControlCenter.scala-225-      addItemListener(ServerOptionsPanel.this)
org/nlogo/hubnet/server/ControlCenter.scala-226-    }
org/nlogo/hubnet/server/ControlCenter.scala-230-      setLayout(new BoxLayout(this, BoxLayout.Y_AXIS))
org/nlogo/hubnet/server/ControlCenter.scala-231-      add(new TextFieldBox(SwingConstants.RIGHT, null, new JLabel().getFont.deriveFont(Font.BOLD)) {
org/nlogo/hubnet/server/ControlCenter.scala:232:        addField("Name:", new SelectableJLabel(serverId))
org/nlogo/hubnet/server/ControlCenter.scala:233:        addField("Activity:", new SelectableJLabel(activityName))
org/nlogo/hubnet/server/ControlCenter.scala-234-        add(Box.createVerticalStrut(12))
org/nlogo/hubnet/server/ControlCenter.scala:235:        val serverIP = try InetAddress.getLocalHost.getHostAddress catch {case e: UnknownHostException => "UNKNOWN"}
org/nlogo/hubnet/server/ControlCenter.scala:236:        addField("Server address:", new SelectableJLabel(serverIP))
org/nlogo/hubnet/server/ControlCenter.scala:237:        addField("Port number:", new SelectableJLabel(server.port.toString))
org/nlogo/hubnet/server/ControlCenter.scala-238-      })
org/nlogo/hubnet/server/ControlCenter.scala-239-      add(Box.createVerticalStrut(30))
org/nlogo/hubnet/server/ControlCenter.scala:240:      add(new JLabel("Settings:"))
org/nlogo/hubnet/server/ControlCenter.scala-241-      add(Box.createVerticalStrut(4))
org/nlogo/hubnet/server/ControlCenter.scala-242-      add(mirrorViewCheckBox)
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-22-  override def run(): Unit = {
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-23-    def dump(err: String, ex: Exception) {
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala:24:      System.err.println("@ " + new java.util.Date() + " : ")
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala:25:      System.err.println("Error: " + err + "\n\t" + ex)
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-26-    }
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-27-    val group = try InetAddress.getByName(SERVER_DISCOVERY_MULTICAST_GROUP)
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-28-    catch {
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-29-      case uhe: UnknownHostException =>
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala:30:        dump("could not map the multicast group " + SERVER_DISCOVERY_MULTICAST_GROUP + " to an InetAddress", uhe)
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-31-        return
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-32-    }
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-34-    catch {
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-35-      case ioe: IOException =>
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala:36:        dump("Error creating multicast socket to port " + SERVER_DISCOVERY_MULTICAST_PORT, ioe)
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-37-        return
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-38-    }
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-45-        multicastSocket.setTimeToLive(multicastSocket.getTimeToLive) // really!?
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-46-      }
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala:47:      catch {case ioe: IOException => dump("Could not transmit multicast announcement.", ioe)}
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-48-      try Thread.sleep(SERVER_DISCOVERY_ANNOUNCE_INTERVAL)
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala:49:      catch { case ie: InterruptedException => dump("Multicast announcement thread interrupted.\n\t", ie) }
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-50-    }
org/nlogo/hubnet/server/DiscoveryAnnouncer.scala-51-    try multicastSocket.close()
org/nlogo/hubnet/server/ServerPlotManager.scala-36-  private def getCurrentPlot = {
org/nlogo/hubnet/server/ServerPlotManager.scala-37-    try plotManager.currentPlotOrBust
org/nlogo/hubnet/server/ServerPlotManager.scala:38:    catch {case e: LogoException => throw new IllegalStateException("There is no current plot")}
org/nlogo/hubnet/server/ServerPlotManager.scala-39-  }
org/nlogo/hubnet/server/ServerPlotManager.scala-40-
org/nlogo/hubnet/server/ServerPlotManager.scala-76-  // particular plot.  This type of message is handled specially
org/nlogo/hubnet/server/ServerPlotManager.scala-77-  // like VIEW ev 9/9/08
org/nlogo/hubnet/server/ServerPlotManager.scala:78:  def clearAll() { broadcastToClients('a', "ALL PLOTS") }
org/nlogo/hubnet/server/ServerPlotManager.scala-79-
org/nlogo/hubnet/server/ServerPlotManager.scala-80-  // Sends the java.lang.Character 'c', indicating a clear-plot
org/nlogo/hubnet/server/StartupDialog.scala-9-class StartupDialog(parent: Frame) extends JDialog(parent, true) {
org/nlogo/hubnet/server/StartupDialog.scala-10-  private val nameField = new TextField(14) {
org/nlogo/hubnet/server/StartupDialog.scala:11:    setText(System.getProperty("user.name", ""))
org/nlogo/hubnet/server/StartupDialog.scala-12-  }
org/nlogo/hubnet/server/StartupDialog.scala:13:  private val discoveryCheckBox = new JCheckBox("Broadcast server location") {
org/nlogo/hubnet/server/StartupDialog.scala-14-    setSelected(true)
org/nlogo/hubnet/server/StartupDialog.scala-15-  }
org/nlogo/hubnet/server/StartupDialog.scala-19-
org/nlogo/hubnet/server/StartupDialog.scala-20-  locally {
org/nlogo/hubnet/server/StartupDialog.scala:21:    val okButton = new JButton("Start"){ addActionListener(() => StartupDialog.this.setVisible(false)) }
org/nlogo/hubnet/server/StartupDialog.scala-22-    nameField.addActionListener(() => okButton.doClick())
org/nlogo/hubnet/server/StartupDialog.scala-23-
org/nlogo/hubnet/server/StartupDialog.scala-26-      setBorder(new border.EmptyBorder(8, 8, 8, 8))
org/nlogo/hubnet/server/StartupDialog.scala-27-      add(Box.createVerticalStrut(12))
org/nlogo/hubnet/server/StartupDialog.scala:28:      add(new TextFieldBox(){addField("Session name:", nameField)})
org/nlogo/hubnet/server/StartupDialog.scala-29-      add(Box.createVerticalStrut(12))
org/nlogo/hubnet/server/StartupDialog.scala-30-      add(discoveryCheckBox)
org/nlogo/hubnet/server/StartupDialog.scala-38-    getRootPane().setDefaultButton(okButton)
org/nlogo/hubnet/server/StartupDialog.scala-39-    setContentPane(content)
org/nlogo/hubnet/server/StartupDialog.scala:40:    setTitle("Start HubNet Activity")
org/nlogo/hubnet/server/StartupDialog.scala-41-    setResizable(false)
org/nlogo/hubnet/server/StartupDialog.scala-42-    pack()
org/nlogo/job/JobManager.scala-90-        // this shouldn't happen because patches shouldn't be joining.
org/nlogo/job/JobManager.scala-91-        // ev 9/29/06
org/nlogo/job/JobManager.scala:92:        println("erowiejrwoeijrwoeijr wtf")
org/nlogo/job/JobManager.scala-93-        throw new IllegalStateException()
org/nlogo/job/JobManager.scala-94-    }
org/nlogo/job/JobThread.java-32-			   Object lock )
org/nlogo/job/JobThread.java-33-	{
org/nlogo/job/JobThread.java:34:		super( "JobThread" ) ;
org/nlogo/job/JobThread.java-35-		this.manager = manager ;
org/nlogo/job/JobThread.java-36-		this.jobManagerOwner = jobManagerOwner ;
org/nlogo/lab/Exporter.scala-20-    out.println(
org/nlogo/lab/Exporter.scala-21-      Dump.csv.header(
org/nlogo/lab/Exporter.scala:22:        "BehaviorSpace results (" + Version.version + ")"))
org/nlogo/lab/Exporter.scala-23-    out.println(
org/nlogo/lab/Exporter.scala-24-      Dump.csv.header(modelFileName))
org/nlogo/lab/Exporter.scala-27-    out.println(
org/nlogo/lab/Exporter.scala-28-      Dump.csv.header(
org/nlogo/lab/Exporter.scala:29:        new java.text.SimpleDateFormat("MM/dd/yyyy HH:mm:ss:SSS Z")
org/nlogo/lab/Exporter.scala-30-          .format(new java.util.Date)))
org/nlogo/lab/Exporter.scala-31-    out.println(
org/nlogo/lab/Exporter.scala-32-      Dump.csv.headerRow(
org/nlogo/lab/Exporter.scala:33:        Array("min-pxcor", "max-pxcor", "min-pycor", "max-pycor")))
org/nlogo/lab/Exporter.scala-34-    out.println{
org/nlogo/lab/Exporter.scala-35-      import initialDims._
org/nlogo/lab/gui/ManagerDialog.scala-15-  private val jlist = new JList
org/nlogo/lab/gui/ManagerDialog.scala-16-  private val listModel = new javax.swing.DefaultListModel
org/nlogo/lab/gui/ManagerDialog.scala:17:  private implicit val i18NPrefix = I18N.Prefix("tools.behaviorSpace")
org/nlogo/lab/gui/ManagerDialog.scala-18-  /// actions
org/nlogo/lab/gui/ManagerDialog.scala-19-  private def action(name: String, fn: ()=>Unit) =
org/nlogo/lab/gui/ManagerDialog.scala-20-    new javax.swing.AbstractAction(name) {
org/nlogo/lab/gui/ManagerDialog.scala-21-      def actionPerformed(e: java.awt.event.ActionEvent) { fn() } }
org/nlogo/lab/gui/ManagerDialog.scala:22:  private val editAction = action(I18N.gui("edit"), edit _)
org/nlogo/lab/gui/ManagerDialog.scala:23:  private val newAction = action(I18N.gui("new"), makeNew _)
org/nlogo/lab/gui/ManagerDialog.scala:24:  private val deleteAction = action(I18N.gui("delete"), delete _)
org/nlogo/lab/gui/ManagerDialog.scala:25:  private val duplicateAction = action(I18N.gui("duplicate"), duplicate _)
org/nlogo/lab/gui/ManagerDialog.scala:26:  private val closeAction = action(I18N.gui("close"), manager.close _)
org/nlogo/lab/gui/ManagerDialog.scala:27:  private val runAction = action(I18N.gui("run"), run _)
org/nlogo/lab/gui/ManagerDialog.scala-28-  /// initialization
org/nlogo/lab/gui/ManagerDialog.scala-29-  init()
org/nlogo/lab/gui/ManagerDialog.scala-32-    addWindowListener(new java.awt.event.WindowAdapter {
org/nlogo/lab/gui/ManagerDialog.scala-33-      override def windowClosing(e: java.awt.event.WindowEvent) { closeAction.actionPerformed(null) } })
org/nlogo/lab/gui/ManagerDialog.scala:34:    setTitle(I18N.gui.get("menu.tools.behaviorSpace"))
org/nlogo/lab/gui/ManagerDialog.scala-35-    // set up the list
org/nlogo/lab/gui/ManagerDialog.scala:36:    jlist.putClientProperty("Quaqua.List.style", "striped")
org/nlogo/lab/gui/ManagerDialog.scala-37-    jlist.setVisibleRowCount(5)
org/nlogo/lab/gui/ManagerDialog.scala-38-    jlist.setModel(listModel)
org/nlogo/lab/gui/ManagerDialog.scala-59-    buttonPanel.add(javax.swing.Box.createHorizontalStrut(20))
org/nlogo/lab/gui/ManagerDialog.scala-60-    buttonPanel.add(javax.swing.Box.createHorizontalGlue)
org/nlogo/lab/gui/ManagerDialog.scala:61:    val listLabel = new JLabel(I18N.gui("experiments"))
org/nlogo/lab/gui/ManagerDialog.scala-62-    // layout
org/nlogo/lab/gui/ManagerDialog.scala-63-    buttonPanel.setBorder(new javax.swing.border.EmptyBorder(8, 0, 8, 0))
org/nlogo/lab/gui/ManagerDialog.scala-96-    editProtocol(
org/nlogo/lab/gui/ManagerDialog.scala-97-      new Protocol(
org/nlogo/lab/gui/ManagerDialog.scala:98:        "experiment", "setup", "go", "", 1, true, 0, "", List("count turtles"),
org/nlogo/lab/gui/ManagerDialog.scala-99-        manager.workspace.world.synchronized {
org/nlogo/lab/gui/ManagerDialog.scala-100-          manager.workspace.world.program.interfaceGlobals.toList
org/nlogo/lab/gui/ManagerDialog.scala-120-  private def delete() {
org/nlogo/lab/gui/ManagerDialog.scala-121-    val selected = jlist.getSelectedIndices
org/nlogo/lab/gui/ManagerDialog.scala:122:    val message = "Are you sure you want to delete " +
org/nlogo/lab/gui/ManagerDialog.scala:123:      (if(selected.length > 1) "these " + selected.length + " experiments?"
org/nlogo/lab/gui/ManagerDialog.scala:124:       else "\"" + listModel.getElementAt(selected(0)).asInstanceOf[Protocol].name + "\"?")
org/nlogo/lab/gui/ManagerDialog.scala:125:    if(JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(this, message, "Delete", JOptionPane.YES_NO_OPTION)) {
org/nlogo/lab/gui/ManagerDialog.scala-126-      for(i <- 0 until selected.length)
org/nlogo/lab/gui/ManagerDialog.scala-127-        manager.protocols -= listModel.getElementAt(selected(i)).asInstanceOf[Protocol]
org/nlogo/lab/gui/ProgressDialog.scala-12-import org.nlogo.api.{PeriodicUpdateDelay, Dump}
org/nlogo/lab/gui/ProgressDialog.scala-13-
org/nlogo/lab/gui/ProgressDialog.scala:14:// Throughout this file, we say "plotWidget.plot()" instead of just "plotWidget.plot"
org/nlogo/lab/gui/ProgressDialog.scala-15-// because otherwise it fails with an IllegalAccessException as of Scala 2.7.2.RC6.
org/nlogo/lab/gui/ProgressDialog.scala-27-  private val plotWidgetOption: Option[PlotWidget] = {
org/nlogo/lab/gui/ProgressDialog.scala-28-    if (protocol.runMetricsEveryStep && protocol.metrics.length > 0) {
org/nlogo/lab/gui/ProgressDialog.scala:29:      val plotWidget = new org.nlogo.window.PlotWidget("Behavior Plot", workspace.plotManager)
org/nlogo/lab/gui/ProgressDialog.scala-30-      plotWidget.plot.defaultXMin = 0
org/nlogo/lab/gui/ProgressDialog.scala-31-      plotWidget.plot.defaultYMin = 0
org/nlogo/lab/gui/ProgressDialog.scala-33-      plotWidget.plot.defaultYMax = 1
org/nlogo/lab/gui/ProgressDialog.scala-34-      plotWidget.plot.defaultAutoPlotOn = true
org/nlogo/lab/gui/ProgressDialog.scala:35:      plotWidget.xLabel("Time")
org/nlogo/lab/gui/ProgressDialog.scala:36:      plotWidget.yLabel("Behavior")
org/nlogo/lab/gui/ProgressDialog.scala-37-      plotWidget.clear()
org/nlogo/lab/gui/ProgressDialog.scala-38-      plotWidget.plot.pens=Nil // make sure to start with no pens. plotWidget adds one by default. 
org/nlogo/lab/gui/ProgressDialog.scala-48-      override def windowClosing(e: java.awt.event.WindowEvent) { abortAction.actionPerformed(null) }
org/nlogo/lab/gui/ProgressDialog.scala-49-    })
org/nlogo/lab/gui/ProgressDialog.scala:50:    setTitle("Running Experiment: " + protocol.name)
org/nlogo/lab/gui/ProgressDialog.scala-51-    setResizable(true)
org/nlogo/lab/gui/ProgressDialog.scala-52-    val layout = new java.awt.GridBagLayout
org/nlogo/lab/gui/ProgressDialog.scala-109-  // initialization code above.  Two cheers for Scala. - ST 11/12/08
org/nlogo/lab/gui/ProgressDialog.scala-110-
org/nlogo/lab/gui/ProgressDialog.scala:111:  lazy val abortAction = PimpedAction("Abort") { _ =>
org/nlogo/lab/gui/ProgressDialog.scala-112-    supervisor.interrupt()
org/nlogo/lab/gui/ProgressDialog.scala-113-    close()
org/nlogo/lab/gui/ProgressDialog.scala-114-  }
org/nlogo/lab/gui/ProgressDialog.scala:115:  lazy val periodicUpdateAction = PimpedAction("update elapsed time") { _ =>
org/nlogo/lab/gui/ProgressDialog.scala-116-    updateProgressArea(false)
org/nlogo/lab/gui/ProgressDialog.scala-117-    plotWidgetOption.foreach{ plotWidget => if(updatePlots) plotWidget.handle(null) }
org/nlogo/lab/gui/ProgressDialog.scala-118-  }
org/nlogo/lab/gui/ProgressDialog.scala:119:  lazy val displaySwitchAction = PimpedAction("Update view") { e =>
org/nlogo/lab/gui/ProgressDialog.scala-120-    workspace.displaySwitchOn(e.getSource.asInstanceOf[JCheckBox].isSelected)
org/nlogo/lab/gui/ProgressDialog.scala-121-  }
org/nlogo/lab/gui/ProgressDialog.scala:122:  lazy val plotsAndMonitorsSwitchAction = PimpedAction("Update plots and monitors") { e =>
org/nlogo/lab/gui/ProgressDialog.scala-123-    updatePlots = e.getSource.asInstanceOf[JCheckBox].isSelected
org/nlogo/lab/gui/ProgressDialog.scala-124-    if (updatePlots) workspace.setPeriodicUpdatesEnabled(true)
org/nlogo/lab/gui/ProgressDialog.scala-141-  private var started = 0L
org/nlogo/lab/gui/ProgressDialog.scala-142-  private var runCount = 0
org/nlogo/lab/gui/ProgressDialog.scala:143:  private var elapsed = "0:00:00"
org/nlogo/lab/gui/ProgressDialog.scala-144-  private var settingsString = ""
org/nlogo/lab/gui/ProgressDialog.scala-145-  private var steps = 0
org/nlogo/lab/gui/ProgressDialog.scala-152-      resetPlot()
org/nlogo/lab/gui/ProgressDialog.scala-153-      settingsString = ""
org/nlogo/lab/gui/ProgressDialog.scala:154:      for ((name, value) <- settings) settingsString += name + " = " + Dump.logoObject(value) + "\n"
org/nlogo/lab/gui/ProgressDialog.scala-155-      updateProgressArea(true)
org/nlogo/lab/gui/ProgressDialog.scala-156-    }
org/nlogo/lab/gui/ProgressDialog.scala-212-    val minutes = pad(((elapsedMillis % 3600) / 60).toString)
org/nlogo/lab/gui/ProgressDialog.scala-213-    val seconds = pad((elapsedMillis % 60).toString)
org/nlogo/lab/gui/ProgressDialog.scala:214:    val newElapsed = hours + ":" + minutes + ":" + seconds
org/nlogo/lab/gui/ProgressDialog.scala-215-    if (force || elapsed != newElapsed) {
org/nlogo/lab/gui/ProgressDialog.scala-216-      elapsed = newElapsed
org/nlogo/lab/gui/ProgressDialog.scala-217-      org.nlogo.awt.Utils.invokeLater(new Runnable {
org/nlogo/lab/gui/ProgressDialog.scala-218-        def run() {
org/nlogo/lab/gui/ProgressDialog.scala:219:          progressArea.setText("Run #" + runCount + " of " + totalRuns + ", " +
org/nlogo/lab/gui/ProgressDialog.scala:220:                  "step #" + steps + "\n" +
org/nlogo/lab/gui/ProgressDialog.scala:221:                  "Total elapsed time: " + elapsed + "\n" + settingsString)
org/nlogo/lab/gui/ProgressDialog.scala-222-          progressArea.setCaretPosition(0)
org/nlogo/lab/gui/ProgressDialog.scala-223-        }
org/nlogo/lab/gui/ProtocolEditable.scala-16-  // these are for Editable
org/nlogo/lab/gui/ProtocolEditable.scala-17-  def helpLink = None
org/nlogo/lab/gui/ProtocolEditable.scala:18:  val classDisplayName = "Experiment"
org/nlogo/lab/gui/ProtocolEditable.scala-19-  def error(key:Object) = null
org/nlogo/lab/gui/ProtocolEditable.scala-20-  def error(key:Object, e: Exception){}
org/nlogo/lab/gui/ProtocolEditable.scala-22-  val sourceOffset = 0
org/nlogo/lab/gui/ProtocolEditable.scala-23-
org/nlogo/lab/gui/ProtocolEditable.scala:24:  private implicit val i18nPrefix = I18N.Prefix("tools.behaviorSpace")
org/nlogo/lab/gui/ProtocolEditable.scala-25-
org/nlogo/lab/gui/ProtocolEditable.scala-26-  val propertySet =
org/nlogo/lab/gui/ProtocolEditable.scala-27-    org.nlogo.util.JCL.toJavaList(
org/nlogo/lab/gui/ProtocolEditable.scala:28:      List(Property("name", Property.String, I18N.gui("experimentName")),
org/nlogo/lab/gui/ProtocolEditable.scala:29:           Property("valueSets", Property.ReporterOrEmpty,
org/nlogo/lab/gui/ProtocolEditable.scala:30:                    I18N.gui("vary"), "<html>"+I18N.gui("vary.info")+"</html>"),
org/nlogo/lab/gui/ProtocolEditable.scala:31:           Property("repetitions", Property.Integer, I18N.gui("repetitions"),
org/nlogo/lab/gui/ProtocolEditable.scala:32:                    "<html>"+I18N.gui("repetitions.info")+"</html>"),
org/nlogo/lab/gui/ProtocolEditable.scala:33:           Property("metrics", Property.ReporterOrEmpty,
org/nlogo/lab/gui/ProtocolEditable.scala:34:                    I18N.gui("metrics"),
org/nlogo/lab/gui/ProtocolEditable.scala:35:                    "<html>"+I18N.gui("metrics.info")+"</html>"),
org/nlogo/lab/gui/ProtocolEditable.scala:36:           Property("runMetricsEveryStep", Property.Boolean, I18N.gui("runMetricsEveryStep"),
org/nlogo/lab/gui/ProtocolEditable.scala:37:                    "<html>"+I18N.gui("runMetricsEveryStep.info")+"</html>"),
org/nlogo/lab/gui/ProtocolEditable.scala:38:           Property("setupCommands", Property.Commands, I18N.gui("setupCommands"),
org/nlogo/lab/gui/ProtocolEditable.scala-39-                    gridWidth = GridBagConstraints.RELATIVE),
org/nlogo/lab/gui/ProtocolEditable.scala:40:           Property("goCommands", Property.Commands, I18N.gui("goCommands")),
org/nlogo/lab/gui/ProtocolEditable.scala:41:           Property("exitCondition", Property.ReporterOrEmpty, I18N.gui("exitCondition"),
org/nlogo/lab/gui/ProtocolEditable.scala:42:                    "<html>"+I18N.gui("exitCondition.info")+"</html>",
org/nlogo/lab/gui/ProtocolEditable.scala-43-                    gridWidth = GridBagConstraints.RELATIVE, collapsable=true, collapseByDefault=true),
org/nlogo/lab/gui/ProtocolEditable.scala:44:           Property("finalCommands", Property.Commands, I18N.gui("finalCommands"),
org/nlogo/lab/gui/ProtocolEditable.scala:45:                    "<html>"+I18N.gui("finalCommands.info")+"</html>", collapsable=true, collapseByDefault=true),
org/nlogo/lab/gui/ProtocolEditable.scala:46:           Property("timeLimit", Property.Integer, I18N.gui("timeLimit"),
org/nlogo/lab/gui/ProtocolEditable.scala:47:                    "<html>"+I18N.gui("timeLimit.info")+"</html>")))
org/nlogo/lab/gui/ProtocolEditable.scala-48-  // These are the actual vars the user edits.  Before editing they are copied out of the
org/nlogo/lab/gui/ProtocolEditable.scala-49-  // original Protocol; after editing a new Protocol is created.
org/nlogo/lab/gui/ProtocolEditable.scala-59-  var valueSets =  {
org/nlogo/lab/gui/ProtocolEditable.scala-60-    def setString(valueSet: ValueSet) =
org/nlogo/lab/gui/ProtocolEditable.scala:61:      "[\"" + valueSet.variableName + "\" " +
org/nlogo/lab/gui/ProtocolEditable.scala-62-      (valueSet match {
org/nlogo/lab/gui/ProtocolEditable.scala-63-         case evs: EnumeratedValueSet =>
org/nlogo/lab/gui/ProtocolEditable.scala-73-    def complain(message: String) {
org/nlogo/lab/gui/ProtocolEditable.scala-74-      javax.swing.JOptionPane.showMessageDialog(
org/nlogo/lab/gui/ProtocolEditable.scala:75:        window, "Invalid spec for varying variables. Error:\n" + message,
org/nlogo/lab/gui/ProtocolEditable.scala:76:       "Invalid", javax.swing.JOptionPane.ERROR_MESSAGE)
org/nlogo/lab/gui/ProtocolEditable.scala-77-    }
org/nlogo/lab/gui/ProtocolEditable.scala-78-    Some(new Protocol(
org/nlogo/lab/gui/ProtocolEditable.scala-84-        val list =
org/nlogo/lab/gui/ProtocolEditable.scala-85-          try { worldLock.synchronized {
org/nlogo/lab/gui/ProtocolEditable.scala:86:            compiler.readFromString("[" + valueSets + "]").asInstanceOf[LogoList]
org/nlogo/lab/gui/ProtocolEditable.scala-87-          } }
org/nlogo/lab/gui/ProtocolEditable.scala-88-        catch{ case ex: CompilerException => complain(ex.getMessage); return None }
org/nlogo/lab/gui/ProtocolEditable.scala-100-                                      last.doubleValue)
org/nlogo/lab/gui/ProtocolEditable.scala-101-                case _ =>
org/nlogo/lab/gui/ProtocolEditable.scala:102:                  complain("Expected three numbers here: " + Dump.list(more)); return None
org/nlogo/lab/gui/ProtocolEditable.scala-103-              }
org/nlogo/lab/gui/ProtocolEditable.scala-104-            case List(variableName: String, more@_*) =>
org/nlogo/lab/gui/ProtocolEditable.scala-105-              new EnumeratedValueSet(variableName, more.toList)
org/nlogo/lab/gui/ProtocolEditable.scala-106-            case _ =>
org/nlogo/lab/gui/ProtocolEditable.scala:107:              complain("Invalid format"); return None
org/nlogo/lab/gui/ProtocolEditable.scala-108-          }}
org/nlogo/lab/gui/ProtocolEditable.scala-109-      }))
org/nlogo/lab/gui/RunOptionsDialog.scala-22-    var table = false
org/nlogo/lab/gui/RunOptionsDialog.scala-23-    var threadCount = Runtime.getRuntime.availableProcessors
org/nlogo/lab/gui/RunOptionsDialog.scala:24:    val classDisplayName = "Run options"
org/nlogo/lab/gui/RunOptionsDialog.scala-25-    val propertySet =
org/nlogo/lab/gui/RunOptionsDialog.scala-26-      org.nlogo.util.JCL.JavaList(
org/nlogo/lab/gui/RunOptionsDialog.scala:27:        Property("spreadsheet", Property.Boolean, "Spreadsheet output"),
org/nlogo/lab/gui/RunOptionsDialog.scala:28:        Property("table", Property.Boolean, "Table output"),
org/nlogo/lab/gui/RunOptionsDialog.scala:29:        Property("threadCount", Property.Integer, "Simultaneous runs in parallel",
org/nlogo/lab/gui/RunOptionsDialog.scala:30:                 "<html>If more than one, some runs happen invisibly in the background." +
org/nlogo/lab/gui/RunOptionsDialog.scala:31:                 "<br>Defaults to one per processor core.</html>"))
org/nlogo/lab/gui/RunOptionsDialog.scala-32-    def get = RunOptions(threadCount, table, spreadsheet)
org/nlogo/lab/gui/RunOptionsDialog.scala-33-    // boilerplate for Editable
org/nlogo/lab/gui/Supervisor.scala-18-                 factory: WorkspaceFactory,
org/nlogo/lab/gui/Supervisor.scala-19-                 dialogFactory: EditDialogFactoryInterface)
org/nlogo/lab/gui/Supervisor.scala:20:  extends Thread("BehaviorSpace Supervisor")
org/nlogo/lab/gui/Supervisor.scala-21-{
org/nlogo/lab/gui/Supervisor.scala-22-  var options:Supervisor.RunOptions = null
org/nlogo/lab/gui/Supervisor.scala-32-          case ee: EngineException =>
org/nlogo/lab/gui/Supervisor.scala-33-            val msg = ee.context.buildRuntimeErrorMessage(ee.instruction,ee)
org/nlogo/lab/gui/Supervisor.scala:34:            System.err.println("Run #" + runNumber + ", RUNTIME ERROR: " + msg)
org/nlogo/lab/gui/Supervisor.scala-35-            ee.printStackTrace(System.err)
org/nlogo/lab/gui/Supervisor.scala-36-          case le: LogoException =>
org/nlogo/lab/gui/Supervisor.scala:37:            System.err.println("Run #" + runNumber + ", RUNTIME ERROR: " + le.getMessage)
org/nlogo/lab/gui/Supervisor.scala-38-            le.printStackTrace(System.err)
org/nlogo/lab/gui/Supervisor.scala-39-          case _ =>
org/nlogo/lab/gui/Supervisor.scala:40:            System.err.println("Run #" + runNumber + ", JAVA EXCEPTION: " + e.getMessage)
org/nlogo/lab/gui/Supervisor.scala-41-            e.printStackTrace(System.err)
org/nlogo/lab/gui/Supervisor.scala-42-        }
org/nlogo/lab/gui/Supervisor.scala-48-    worker.run(workspace, nextWorkspace _, options.threadCount)
org/nlogo/lab/gui/Supervisor.scala-49-  } }
org/nlogo/lab/gui/Supervisor.scala:50:  private val workerThread  = new Thread(runnable, "BehaviorSpace Worker")
org/nlogo/lab/gui/Supervisor.scala-51-  private val progressDialog = new ProgressDialog(dialog,  this)
org/nlogo/lab/gui/Supervisor.scala-52-  private val exporters = new collection.mutable.ListBuffer[Exporter]
org/nlogo/lab/gui/Supervisor.scala-70-    if(options.spreadsheet) {
org/nlogo/lab/gui/Supervisor.scala-71-      val fileName = org.nlogo.swing.FileDialog.show(
org/nlogo/lab/gui/Supervisor.scala:72:        workspace.getFrame, "Exporting as spreadsheet", java.awt.FileDialog.SAVE,
org/nlogo/lab/gui/Supervisor.scala:73:        workspace.guessExportName(worker.protocol.name + "-spreadsheet.csv"))
org/nlogo/lab/gui/Supervisor.scala-74-      addExporter(new SpreadsheetExporter(
org/nlogo/lab/gui/Supervisor.scala-75-        workspace.getModelFileName,
org/nlogo/lab/gui/Supervisor.scala-80-    if(options.table) {
org/nlogo/lab/gui/Supervisor.scala-81-      val fileName = org.nlogo.swing.FileDialog.show(
org/nlogo/lab/gui/Supervisor.scala:82:        workspace.getFrame, "Exporting as table", java.awt.FileDialog.SAVE,
org/nlogo/lab/gui/Supervisor.scala:83:        workspace.guessExportName(worker.protocol.name + "-table.csv"))
org/nlogo/lab/gui/Supervisor.scala-84-      addExporter(new TableExporter(
org/nlogo/lab/gui/Supervisor.scala-85-        workspace.getModelFileName,
org/nlogo/lab/gui/Supervisor.scala-138-      case ex: CompilerException =>
org/nlogo/lab/gui/Supervisor.scala-139-        org.nlogo.swing.OptionDialog.show(
org/nlogo/lab/gui/Supervisor.scala:140:          workspace.getFrame, "Error During Experiment",
org/nlogo/lab/gui/Supervisor.scala:141:          "Experiment aborted due to syntax error:\n" + ex.getMessage,
org/nlogo/lab/gui/Supervisor.scala-143-      case ex: LogoException =>
org/nlogo/lab/gui/Supervisor.scala-144-        org.nlogo.swing.OptionDialog.show(
org/nlogo/lab/gui/Supervisor.scala:145:          workspace.getFrame, "Error During Experiment",
org/nlogo/lab/gui/Supervisor.scala:146:          "Experiment aborted due to runtime error:\n" + ex.getMessage,
org/nlogo/lab/gui/Supervisor.scala-148-      case ex: java.io.IOException =>
org/nlogo/lab/gui/Supervisor.scala-149-        org.nlogo.swing.OptionDialog.show(
org/nlogo/lab/gui/Supervisor.scala:150:          workspace.getFrame, "Error During Experiment",
org/nlogo/lab/gui/Supervisor.scala:151:          "Experiment aborted due to I/O error:\n" + ex.getMessage,
org/nlogo/lab/gui/Supervisor.scala-153-      case _ => org.nlogo.util.Exceptions.handle(t)
org/nlogo/lab/gui/Supervisor.scala-154-    }
org/nlogo/lab/Lab.scala-20-      case None =>
org/nlogo/lab/Lab.scala-21-        throw new IllegalArgumentException(
org/nlogo/lab/Lab.scala:22:          "experiment '" + protocolName + "' not found")
org/nlogo/lab/Lab.scala-23-      case Some(protocol) =>
org/nlogo/lab/Lab.scala-24-        new Worker(protocol)
org/nlogo/lab/Lab.scala-57-              case ee: EngineException =>
org/nlogo/lab/Lab.scala-58-                val msg = ee.context.buildRuntimeErrorMessage(ee.instruction, ee)
org/nlogo/lab/Lab.scala:59:                System.err.println("Run #" + runNumber + ", RUNTIME ERROR: " + msg)
org/nlogo/lab/Lab.scala-60-                ee.printStackTrace(System.err)
org/nlogo/lab/Lab.scala-61-              case _: LogoException =>
org/nlogo/lab/Lab.scala:62:                System.err.println("Run #" + runNumber + ", RUNTIME ERROR: " + t.getMessage)
org/nlogo/lab/Lab.scala-63-                t.printStackTrace(System.err)
org/nlogo/lab/Lab.scala-64-              case _ =>
org/nlogo/lab/Lab.scala:65:                System.err.println("Run #" + runNumber + ", JAVA EXCEPTION: " + t.getMessage)
org/nlogo/lab/Lab.scala-66-                t.printStackTrace(System.err)
org/nlogo/lab/Lab.scala-67-            }
org/nlogo/lab/package.html:1:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
org/nlogo/lab/package.html-2-<html>
org/nlogo/lab/package.html-3-<head>
org/nlogo/lab/package.html-4-</head>
org/nlogo/lab/package.html:5:<body bgcolor="white">
org/nlogo/lab/package.html-6-
org/nlogo/lab/package.html-7-<p>This package contains the non-GUI portions of BehaviorSpace.
org/nlogo/lab/package.html-13-
org/nlogo/lab/package.html-14-<p>The specification for how to run an experiment is called a
org/nlogo/lab/package.html:15:Protocol.  In the GUI, this is called an "experiment setup".
org/nlogo/lab/package.html-16-Among other things, a Protocol may contain one or more ValueSets;
org/nlogo/lab/package.html-17-each ValueSet specifies what series or range of values a particular
org/nlogo/lab/Protocol.scala-17-  // careful, gui.ManagerDialog shows this to the user
org/nlogo/lab/Protocol.scala-18-  override def toString =
org/nlogo/lab/Protocol.scala:19:    name + " (" + countRuns + " run" + (if(countRuns != 1) "s" else "") + ")"
org/nlogo/lab/Protocol.scala-20-  // Generate all the possible combinations of values from the ValueSets, in order.  (I'm using
org/nlogo/lab/Protocol.scala-21-  // Iterator here in the vague hope that each combination we generate can be garbage collected when
org/nlogo/lab/ProtocolLoader.scala-9-object ProtocolLoader
org/nlogo/lab/ProtocolLoader.scala-10-{
org/nlogo/lab/ProtocolLoader.scala:11:  val DOCTYPE = "<!DOCTYPE experiments SYSTEM \"behaviorspace.dtd\">"
org/nlogo/lab/ProtocolLoader.scala-12-}
org/nlogo/lab/ProtocolLoader.scala-13-
org/nlogo/lab/ProtocolLoader.scala-21-    new Loader().load(file).find(_.name == name)
org/nlogo/lab/ProtocolLoader.scala-22-      .getOrElse(throw new IllegalStateException(
org/nlogo/lab/ProtocolLoader.scala:23:        "no experiment named \"" + name + "\""))
org/nlogo/lab/ProtocolLoader.scala-24-  def loadOne(xml: String, name: String) =
org/nlogo/lab/ProtocolLoader.scala-25-    new Loader().load(xml).find(_.name == name)
org/nlogo/lab/ProtocolLoader.scala-26-      .getOrElse(throw new IllegalStateException(
org/nlogo/lab/ProtocolLoader.scala:27:        "no experiment named \"" + name + "\""))
org/nlogo/lab/ProtocolLoader.scala-28-  def loadAll(file: java.io.File):List[Protocol] =
org/nlogo/lab/ProtocolLoader.scala-29-    new Loader().load(file)
org/nlogo/lab/ProtocolLoader.scala-30-  def loadAll(xml: String):List[Protocol] =
org/nlogo/lab/ProtocolLoader.scala-31-    new Loader().load(xml)
org/nlogo/lab/ProtocolLoader.scala:32:  // old NetLogo versions used "tick" where we now use "step" because "tick" got added to the language
org/nlogo/lab/ProtocolLoader.scala-33-  def ticksToSteps(str: String) =
org/nlogo/lab/ProtocolLoader.scala:34:    str.replaceAll("runMetricsEveryTick=\"", "runMetricsEveryStep=\"")
org/nlogo/lab/ProtocolLoader.scala:35:       .replaceAll("<timeLimit ticks=\"", "<timeLimit steps=\"")
org/nlogo/lab/ProtocolLoader.scala-36-  implicit def file2inputSource(file: java.io.File): sax.InputSource =
org/nlogo/lab/ProtocolLoader.scala-37-    new sax.InputSource(
org/nlogo/lab/ProtocolLoader.scala-50-  class Loader {
org/nlogo/lab/ProtocolLoader.scala-51-    def load(inputSource: sax.InputSource): List[Protocol] = {
org/nlogo/lab/ProtocolLoader.scala:52:      inputSource.setSystemId(getClass.getResource("/system/").toString)
org/nlogo/lab/ProtocolLoader.scala-53-      val factory = javax.xml.parsers.DocumentBuilderFactory.newInstance
org/nlogo/lab/ProtocolLoader.scala-54-      factory.setValidating(true)
org/nlogo/lab/ProtocolLoader.scala-60-      })
org/nlogo/lab/ProtocolLoader.scala-61-      builder.parse(inputSource)
org/nlogo/lab/ProtocolLoader.scala:62:        .getElementsByTagName("experiment")
org/nlogo/lab/ProtocolLoader.scala-63-        .map(readProtocolElement)
org/nlogo/lab/ProtocolLoader.scala-64-    }
org/nlogo/lab/ProtocolLoader.scala-75-        def readSteppedValueSetElement(e: dom.Element) = {
org/nlogo/lab/ProtocolLoader.scala-76-          def parse(name: String) = e.getAttribute(name).toDouble
org/nlogo/lab/ProtocolLoader.scala:77:          new SteppedValueSet(e.getAttribute("variable"),parse("first"),
org/nlogo/lab/ProtocolLoader.scala:78:                              parse("step"),parse("last"))
org/nlogo/lab/ProtocolLoader.scala-79-        }
org/nlogo/lab/ProtocolLoader.scala-80-        def readEnumeratedValueSetElement(e: dom.Element) =
org/nlogo/lab/ProtocolLoader.scala:81:          new EnumeratedValueSet(e.getAttribute("variable"),
org/nlogo/lab/ProtocolLoader.scala:82:                                 e.getElementsByTagName("value")
org/nlogo/lab/ProtocolLoader.scala-83-                                 .map(e =>
org/nlogo/lab/ProtocolLoader.scala:84:                                   services.readFromString(e.getAttribute("value"))))
org/nlogo/lab/ProtocolLoader.scala-85-        for{e <- element.getChildNodes
org/nlogo/lab/ProtocolLoader.scala-86-            valueSet <- e.getNodeName match {
org/nlogo/lab/ProtocolLoader.scala:87:              case "steppedValueSet" => Some(readSteppedValueSetElement(e))
org/nlogo/lab/ProtocolLoader.scala:88:              case "enumeratedValueSet" => Some(readEnumeratedValueSetElement(e))
org/nlogo/lab/ProtocolLoader.scala-89-              case _ => None } }
org/nlogo/lab/ProtocolLoader.scala-90-        yield valueSet
org/nlogo/lab/ProtocolLoader.scala-91-      }
org/nlogo/lab/ProtocolLoader.scala-92-      new Protocol(
org/nlogo/lab/ProtocolLoader.scala:93:        element.getAttribute("name"),
org/nlogo/lab/ProtocolLoader.scala:94:        readOptional("setup"),
org/nlogo/lab/ProtocolLoader.scala:95:        readOptional("go"),
org/nlogo/lab/ProtocolLoader.scala:96:        readOptional("final"),
org/nlogo/lab/ProtocolLoader.scala:97:        element.getAttribute("repetitions").toInt,
org/nlogo/lab/ProtocolLoader.scala:98:        element.getAttribute("runMetricsEveryStep") == "true",
org/nlogo/lab/ProtocolLoader.scala:99:        if(!exists("timeLimit")) 0 else readOneAttribute("timeLimit","steps").toInt,
org/nlogo/lab/ProtocolLoader.scala:100:        if(!exists("exitCondition")) "" else readOptional("exitCondition"),
org/nlogo/lab/ProtocolLoader.scala:101:        readAll("metric"),
org/nlogo/lab/ProtocolLoader.scala-102-        valueSets)
org/nlogo/lab/ProtocolLoader.scala-103-    }
org/nlogo/lab/ProtocolSaver.scala-27-    val out = new java.io.StringWriter
org/nlogo/lab/ProtocolSaver.scala-28-    val tf = TransformerFactory.newInstance.asInstanceOf[SAXTransformerFactory]
org/nlogo/lab/ProtocolSaver.scala:29:    tf.setAttribute("indent-number", 2)
org/nlogo/lab/ProtocolSaver.scala-30-    val hd = tf.newTransformerHandler
org/nlogo/lab/ProtocolSaver.scala-31-    val transformer = hd.getTransformer
org/nlogo/lab/ProtocolSaver.scala:32:    transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, "yes")
org/nlogo/lab/ProtocolSaver.scala:33:    transformer.setOutputProperty(OutputKeys.INDENT, "yes")
org/nlogo/lab/ProtocolSaver.scala-34-    hd.setResult(new StreamResult(out))
org/nlogo/lab/ProtocolSaver.scala-35-    hd.startDocument()
org/nlogo/lab/ProtocolSaver.scala:36:    hd.startElement("", "", "experiments", attributes())
org/nlogo/lab/ProtocolSaver.scala-37-    protocols.foreach(saveProtocol(hd, _))
org/nlogo/lab/ProtocolSaver.scala:38:    hd.endElement("", "", "experiments")
org/nlogo/lab/ProtocolSaver.scala-39-    hd.endDocument()
org/nlogo/lab/ProtocolSaver.scala-40-    out.toString.replaceAll("\r\n", "\n")
org/nlogo/lab/ProtocolSaver.scala-43-    val result = new AttributesImpl
org/nlogo/lab/ProtocolSaver.scala-44-    for((name,value) <- specs)
org/nlogo/lab/ProtocolSaver.scala:45:      result.addAttribute("", "", name, "CDATA", value)
org/nlogo/lab/ProtocolSaver.scala-46-    result
org/nlogo/lab/ProtocolSaver.scala-47-  }
org/nlogo/lab/ProtocolSaver.scala-56-      hd.endElement("", "", name)
org/nlogo/lab/ProtocolSaver.scala-57-    }
org/nlogo/lab/ProtocolSaver.scala:58:    hd.startElement("", "", "experiment",
org/nlogo/lab/ProtocolSaver.scala:59:                    attributes(("name", protocol.name),
org/nlogo/lab/ProtocolSaver.scala:60:                               ("repetitions", protocol.repetitions.toString),
org/nlogo/lab/ProtocolSaver.scala:61:                               ("runMetricsEveryStep", protocol.runMetricsEveryStep.toString)))
org/nlogo/lab/ProtocolSaver.scala-62-    if(protocol.setupCommands.trim != "")
org/nlogo/lab/ProtocolSaver.scala:63:      element("setup", protocol.setupCommands)
org/nlogo/lab/ProtocolSaver.scala-64-    if(protocol.goCommands.trim != "")
org/nlogo/lab/ProtocolSaver.scala:65:      element("go", protocol.goCommands)
org/nlogo/lab/ProtocolSaver.scala-66-    if(protocol.finalCommands.trim != "")
org/nlogo/lab/ProtocolSaver.scala:67:      element("final", protocol.finalCommands)
org/nlogo/lab/ProtocolSaver.scala-68-    if(protocol.timeLimit != 0)
org/nlogo/lab/ProtocolSaver.scala:69:      elementWithAttributes("timeLimit",
org/nlogo/lab/ProtocolSaver.scala:70:                            attributes(("steps",protocol.timeLimit.toString)))
org/nlogo/lab/ProtocolSaver.scala-71-    if(protocol.exitCondition != "")
org/nlogo/lab/ProtocolSaver.scala:72:      element("exitCondition", protocol.exitCondition)
org/nlogo/lab/ProtocolSaver.scala-73-    for(metric <- protocol.metrics)
org/nlogo/lab/ProtocolSaver.scala:74:      element("metric", metric)
org/nlogo/lab/ProtocolSaver.scala-75-    for(valueSet <- protocol.valueSets)
org/nlogo/lab/ProtocolSaver.scala-76-      valueSet match {
org/nlogo/lab/ProtocolSaver.scala-77-        case steppedValueSet:SteppedValueSet =>
org/nlogo/lab/ProtocolSaver.scala-78-          elementWithAttributes(
org/nlogo/lab/ProtocolSaver.scala:79:            "steppedValueSet",
org/nlogo/lab/ProtocolSaver.scala:80:            attributes(("variable", valueSet.variableName),
org/nlogo/lab/ProtocolSaver.scala:81:                       ("first", Dump.number(steppedValueSet.firstValue)),
org/nlogo/lab/ProtocolSaver.scala:82:                       ("step", Dump.number(steppedValueSet.step)),
org/nlogo/lab/ProtocolSaver.scala:83:                       ("last", Dump.number(steppedValueSet.lastValue))))
org/nlogo/lab/ProtocolSaver.scala-84-        case enumeratedValueSet: EnumeratedValueSet =>
org/nlogo/lab/ProtocolSaver.scala:85:          hd.startElement("", "", "enumeratedValueSet",
org/nlogo/lab/ProtocolSaver.scala:86:                          attributes(("variable", valueSet.variableName)))
org/nlogo/lab/ProtocolSaver.scala-87-          for(value <- enumeratedValueSet)
org/nlogo/lab/ProtocolSaver.scala:88:            elementWithAttributes("value",
org/nlogo/lab/ProtocolSaver.scala:89:                                  attributes(("value", Dump.logoObject(value,true,false))))
org/nlogo/lab/ProtocolSaver.scala:90:          hd.endElement("", "", "enumeratedValueSet")
org/nlogo/lab/ProtocolSaver.scala-91-      }
org/nlogo/lab/ProtocolSaver.scala:92:    hd.endElement("", "", "experiment")
org/nlogo/lab/ProtocolSaver.scala-93-  }
org/nlogo/lab/ProtocolSaver.scala-94-}

org/nlogo/lab/SpreadsheetExporter.scala-58-  def writeSummary() {
org/nlogo/lab/SpreadsheetExporter.scala:61:    out.print(Dump.csv.header("[run number]"))
org/nlogo/lab/SpreadsheetExporter.scala-62-    for(runNumber <- runNumbers)
org/nlogo/lab/SpreadsheetExporter.scala-63-      out.print(List.fill(1 max protocol.metrics.length)(Dump.csv.number(runNumber))
org/nlogo/lab/SpreadsheetExporter.scala-65-    out.println()
org/nlogo/lab/SpreadsheetExporter.scala-70-    for(v <- protocol.valueSets.map(_.variableName)) {
org/nlogo/lab/SpreadsheetExporter.scala-71-      out.print(Dump.csv.header(v) + ",")
org/nlogo/lab/SpreadsheetExporter.scala-76-    }
org/nlogo/lab/SpreadsheetExporter.scala-84-    if(protocol.runMetricsEveryStep && !protocol.metrics.isEmpty) {
org/nlogo/lab/SpreadsheetExporter.scala:85:      out.print(Dump.csv.header("[reporter]"))
org/nlogo/lab/SpreadsheetExporter.scala-86-      for(_ <- runs; metric <- protocol.metrics)
org/nlogo/lab/SpreadsheetExporter.scala-87-        out.print("," + Dump.csv.header(metric))
org/nlogo/lab/SpreadsheetExporter.scala-88-      out.println()
org/nlogo/lab/SpreadsheetExporter.scala:89:      out.print(Dump.csv.header("[final]") + ",")
org/nlogo/lab/SpreadsheetExporter.scala-90-      foreachRun((run, metricNumber) =>
org/nlogo/lab/SpreadsheetExporter.scala-91-        Some(run.lastMeasurement(metricNumber)))
org/nlogo/lab/SpreadsheetExporter.scala:92:      out.print(Dump.csv.header("[min]") + ",")
org/nlogo/lab/SpreadsheetExporter.scala-93-      foreachRun((run, metricNumber) =>
org/nlogo/lab/SpreadsheetExporter.scala-94-        run.minMeasurement(metricNumber))
org/nlogo/lab/SpreadsheetExporter.scala:95:      out.print(Dump.csv.header("[max]") + ",")
org/nlogo/lab/SpreadsheetExporter.scala-96-      foreachRun((run, metricNumber) =>
org/nlogo/lab/SpreadsheetExporter.scala-97-        run.maxMeasurement(metricNumber))
org/nlogo/lab/SpreadsheetExporter.scala:98:      out.print(Dump.csv.header("[mean]") + ",")
org/nlogo/lab/SpreadsheetExporter.scala-99-      foreachRun((run, metricNumber) =>
org/nlogo/lab/SpreadsheetExporter.scala-100-        run.meanMeasurement(metricNumber))
org/nlogo/lab/SpreadsheetExporter.scala-101-    }
org/nlogo/lab/SpreadsheetExporter.scala:102:    out.print(Dump.csv.header("[steps]") + ",")
org/nlogo/lab/SpreadsheetExporter.scala-103-    foreachRun((run,metricNumber) =>
org/nlogo/lab/SpreadsheetExporter.scala-104-      Some(Integer.valueOf(run.steps)))
org/nlogo/lab/SpreadsheetExporter.scala:115:    out.print(Dump.csv.header(if(protocol.runMetricsEveryStep) "[all run data]"
org/nlogo/lab/SpreadsheetExporter.scala:116:                              else "[initial & final values]"))
org/nlogo/lab/SpreadsheetExporter.scala-117-    for(_ <- runs; metric <- protocol.metrics)
org/nlogo/lab/SpreadsheetExporter.scala-118-      out.print(',' + Dump.csv.header(metric))

org/nlogo/lab/TableExporter.scala-41-  def writeExperimentHeader() {
org/nlogo/lab/TableExporter.scala:42:    // sample header: "[run number]","var1","var2","[step]","metric1","metric2"
org/nlogo/lab/TableExporter.scala-43-    val headers =
org/nlogo/lab/TableExporter.scala:44:      "[run number]" :: protocol.valueSets.map(_.variableName) :::
org/nlogo/lab/TableExporter.scala:45:      "[step]" :: protocol.metrics
org/nlogo/lab/TableExporter.scala-46-    out.println(headers.map(Dump.csv.header).mkString(","))

org/nlogo/lab/Worker.scala-99-              case e: WorldDimensionException =>
org/nlogo/lab/Worker.scala:100:                throw new FailedException("You cannot set " + name + " to " + v)
org/nlogo/lab/Worker.scala:103:          else if(name.equalsIgnoreCase("RANDOM-SEED"))
org/nlogo/lab/Worker.scala:108:          if(!world.isDimensionVariable(name) && !name.equalsIgnoreCase("RANDOM-SEED"))
org/nlogo/lab/Worker.scala:112:                  "Global variable does not exist:\n" + name)
org/nlogo/lab/Worker.scala:127:                  "Stopping condition failed to report a result:\n" +
org/nlogo/lab/Worker.scala:131:                  "Stopping condition should report true or false, but instead reported the " +
org/nlogo/lab/Worker.scala:140:              "Reporter for measuring runs failed to report a result:\n" + result)

org/nlogo/lex/TokenLexer.java-162-  private static final String ZZ_ERROR_MSG[] = {
org/nlogo/lex/TokenLexer.java:163:    "Unkown internal scanner error",
org/nlogo/lex/TokenLexer.java:164:    "Error: could not match input",
org/nlogo/lex/TokenLexer.java:165:    "Error: pushback value was too large"
org/nlogo/lex/TokenLexer.java-166-  };
org/nlogo/lex/TokenLexer.java:763:	return new Token( text , TokenType.BAD , "Closing double quote is missing" ,
org/nlogo/lex/TokenLexer.java-764-					  yychar , yychar + yytext().length() , fileName ) ;
org/nlogo/lex/TokenLexer.java:774:			return new Token( text , TokenType.BAD , "Number too large" ,
org/nlogo/lex/TokenLexer.java-775-							  yychar , yychar + text.length() , fileName ) ;
org/nlogo/lex/TokenLexer.java-786-				return new Token( text , TokenType.BAD ,
org/nlogo/lex/TokenLexer.java:787:								  text + " is too large to be represented exactly as an integer in NetLogo" ,
org/nlogo/lex/TokenLexer.java:796:		return new Token( text , TokenType.BAD ,"Illegal number format" ,
org/nlogo/lex/TokenLexer.java-797-						  yychar , yychar + text.length() , fileName ) ;
org/nlogo/lex/TokenLexer.java:835:	return new Token( text , TokenType.BAD , "This non-standard character is not allowed." ,
org/nlogo/lex/TokenLexer.java:856:		return new Token( text , TokenType.BAD , "Illegal character after backslash" ,
org/nlogo/lex/TokenLexer.java:908:	return new Token( "" , TokenType.BAD , "End of file reached unexpectedly" ,

org/nlogo/lex/TokenMapper.scala:28:    "FALSE" -> false, "TRUE" -> true, "NOBODY" -> Nobody.NOBODY,
org/nlogo/lex/TokenMapper.scala:29:    "E" -> StrictMath.E, "PI" -> StrictMath.PI) ++
org/nlogo/lex/TokenMapper.scala-30-    (for ((name, index) <- Color.getColorNamesArray.zipWithIndex) yield (name.toUpperCase -> Color.getColorNumberByIndex(index))) +
org/nlogo/lex/TokenMapper.scala:31:    ("GREY" -> Color.getColorNumberByIndex(Color.getColorNamesArray.indexOf("gray")))
org/nlogo/lex/TokenMapper.scala-32-  private val keywords = Set(
org/nlogo/lex/TokenMapper.scala:33:    "TO", "TO-REPORT", "END", "GLOBALS", "TURTLES-OWN", "LINKS-OWN",
org/nlogo/lex/TokenMapper.scala:34:    "PATCHES-OWN", "EXTENSIONS", "__INCLUDES", "DIRECTED-LINK-BREED",
org/nlogo/lex/TokenMapper.scala:35:    "UNDIRECTED-LINK-BREED") // no "BREED" here because it conflicts with BREED turtle variable -- CLB

org/nlogo/lite/Applet.java-42-							java.applet.AppletContext context = Applet.this.getAppletContext() ;
org/nlogo/lite/Applet.java-43-							context.showDocument
org/nlogo/lite/Applet.java:44:								( new java.net.URL( "http://ccl.northwestern.edu/netlogo/" ) , "_blank" ) ;
org/nlogo/lite/Applet.java-45-						}
org/nlogo/lite/Applet.java-46-						catch( java.net.MalformedURLException ex )
org/nlogo/lite/Applet.java-70-		{
org/nlogo/lite/Applet.java-71-			String source ;
org/nlogo/lite/Applet.java:72:			name = getParameter( "DefaultModel" ) ;
org/nlogo/lite/Applet.java:73:			if( getCodeBase().toString().indexOf( "file:" ) == 0 &&
org/nlogo/lite/Applet.java:74:				System.getProperty( "os.name" ).startsWith( "Windows" ) )
org/nlogo/lite/Applet.java-75-			{
org/nlogo/lite/Applet.java-76-				name = org.nlogo.util.Utils.unescapeSpacesInURL( name ) ;
org/nlogo/lite/Applet.java-129-	private static void showModelNotFoundDialog( String name )
org/nlogo/lite/Applet.java-130-	{
org/nlogo/lite/Applet.java:131:		String message = "Model file not found:\n"
org/nlogo/lite/Applet.java-132-			+ name + "\n\n"
org/nlogo/lite/Applet.java:133:			+ "The model should be in the same directory as the HTML\n"
org/nlogo/lite/Applet.java:134:			+ "file containing the applet.  (Or, you can modify the defaultModel\n"
org/nlogo/lite/Applet.java:135:			+ "attribute of the APPLET tag to point to a different location.)\n" ;
org/nlogo/lite/Applet.java-136-		javax.swing.JOptionPane pane = new javax.swing.JOptionPane(message);
org/nlogo/lite/Applet.java:137:		javax.swing.JDialog dialog = pane.createDialog(new javax.swing.JFrame(), "Model File Not Found");
org/nlogo/lite/Applet.java-138-		dialog.setVisible( true ) ;
org/nlogo/lite/Applet.java-139-	}
org/nlogo/lite/Applet.java-141-	private static void showInvalidVersionDialog()
org/nlogo/lite/Applet.java-142-	{
org/nlogo/lite/Applet.java:143:		String message = "The file is not a valid NetLogo model file." ;
org/nlogo/lite/Applet.java-144-		javax.swing.JOptionPane pane = new javax.swing.JOptionPane( message ) ;
org/nlogo/lite/Applet.java:145:		javax.swing.JDialog dialog = pane.createDialog( new javax.swing.JFrame(), "Model File Not Found" ) ;
org/nlogo/lite/Applet.java-146-		dialog.setVisible( true ) ;
org/nlogo/lite/Applet.java-147-	}	
org/nlogo/lite/AppletPanel.java-48-		setLayout( gridbag ) ;
org/nlogo/lite/AppletPanel.java-49-		aggregateManager = Femto.get( AggregateManagerInterface.class ,
org/nlogo/lite/AppletPanel.java:50:									  "org.nlogo.sdm.AggregateManagerLite" ,
org/nlogo/lite/AppletPanel.java-51-									  new Object[] { } ) ;
org/nlogo/lite/AppletPanel.java-52-		World world = Version.is3D() ? new World3D() : new World() ;
org/nlogo/lite/AppletPanel.java-56-			  null , null , 
org/nlogo/lite/AppletPanel.java-57-			  Femto.scalaSingleton( CompilerInterface.class ,
org/nlogo/lite/AppletPanel.java:58:									"org.nlogo.compiler.Compiler" ) )
org/nlogo/lite/AppletPanel.java-59-			{
org/nlogo/lite/AppletPanel.java-60-				@Override
org/nlogo/lite/AppletPanel.java-94-				{
org/nlogo/lite/AppletPanel.java-95-					return Femto.get( RendererInterface.class ,
org/nlogo/lite/AppletPanel.java:96:									  "org.nlogo.render.Renderer" ,
org/nlogo/lite/AppletPanel.java-97-									  new Object [] { world } );
org/nlogo/lite/AppletPanel.java-98-				}
org/nlogo/lite/AppletPanel.java-190-			org.nlogo.awt.Utils.invokeLater
org/nlogo/lite/AppletPanel.java-191-				( new Runnable() { public void run() {
org/nlogo/lite/AppletPanel.java:192:					RuntimeErrorDialog.show( "Runtime Error" , null , null ,
org/nlogo/lite/AppletPanel.java-193-											 thread , throwable ) ;
org/nlogo/lite/AppletPanel.java-194-				} } ) ;
org/nlogo/lite/AppletPanel.java-333-		// to get the Quartz renderer in an applet is via the
org/nlogo/lite/AppletPanel.java-334-		// Java Preferences app - ST 12/12/07
org/nlogo/lite/AppletPanel.java:335:		System.setProperty( "apple.awt.graphics.UseQuartz" , "true" ) ;
org/nlogo/lite/AppletPanel.java:336:		System.setProperty( "apple.awt.showGrowBox" , "true" ) ;
org/nlogo/lite/AppletPanel.java-337-		org.nlogo.workspace.AbstractWorkspace.isApplet( false ) ;
org/nlogo/lite/AppletPanel.java-338-		VMCheck.detectBadJVMs() ;
org/nlogo/lite/AppletPanel.java-340-		for( int i = 0 ; i < args.length ; i++ )
org/nlogo/lite/AppletPanel.java-341-		{
org/nlogo/lite/AppletPanel.java:342:			if( args[ i ].equals( "--events" ) )
org/nlogo/lite/AppletPanel.java-343-			{
org/nlogo/lite/AppletPanel.java-344-				Event.logEvents = true ;
org/nlogo/lite/AppletPanel.java-367-					}
org/nlogo/lite/AppletPanel.java-368-					private void run2() throws java.io.IOException , InvalidVersionException {
org/nlogo/lite/AppletPanel.java:369:						final javax.swing.JFrame frame = new javax.swing.JFrame( "NetLogo Model" ) ;
org/nlogo/lite/AppletPanel.java-370-						AppletPanel applet = new AppletPanel( frame , new java.awt.event.MouseAdapter() { } , false ) {
org/nlogo/lite/AppletPanel.java-371-								@Override protected java.net.URL getFileURL( String filename ) throws java.net.MalformedURLException {
org/nlogo/lite/AppletPanel.java-397-							java.awt.FileDialog dialog =
org/nlogo/lite/AppletPanel.java-398-								new java.awt.FileDialog
org/nlogo/lite/AppletPanel.java:399:								( frame , "Open: NetLogo Model" , java.awt.FileDialog.LOAD ) ;
org/nlogo/lite/AppletPanel.java-400-							dialog.setVisible( true ) ;
org/nlogo/lite/AppletPanel.java-401-							if( dialog.getDirectory() == null )
org/nlogo/lite/InterfaceComponent.java-34-				   public void mouseClicked( java.awt.event.MouseEvent e ) {
org/nlogo/lite/InterfaceComponent.java-35-					   org.nlogo.swing.BrowserLauncher.openURL
org/nlogo/lite/InterfaceComponent.java:36:						   ( frame , "http://ccl.northwestern.edu/netlogo/" ,
org/nlogo/lite/InterfaceComponent.java-37-							 false ) ; } } ,
org/nlogo/lite/InterfaceComponent.java-38-			   false ) ; 
org/nlogo/lite/InterfaceComponent.java-56-	protected java.net.URL getFileURL( String filename )
org/nlogo/lite/InterfaceComponent.java-57-	{					
org/nlogo/lite/InterfaceComponent.java:58:		throw new IllegalStateException( "we shouldn't be using the interface component in an applet" ) ;
org/nlogo/lite/InterfaceComponent.java-59-	}
org/nlogo/lite/InterfaceComponent.java-60-
org/nlogo/lite/InterfaceComponent.java-135-		if( source == null )
org/nlogo/lite/InterfaceComponent.java-136-		{
org/nlogo/lite/InterfaceComponent.java:137:			throw new IllegalStateException( "couldn't open: '" + path + "'" ) ;
org/nlogo/lite/InterfaceComponent.java-138-		}
org/nlogo/lite/InterfaceComponent.java-139-		openFromSource( path , path , source ) ;
org/nlogo/lite/InterfaceComponent.java-204-			}
org/nlogo/lite/InterfaceComponent.java-205-		}
org/nlogo/lite/InterfaceComponent.java:206:		throw new IllegalArgumentException( "widget \"" + name + "\" not found" ) ;
org/nlogo/lite/InterfaceComponent.java-207-	}
org/nlogo/lite/InterfaceComponent.java-208-
org/nlogo/lite/InterfaceComponent.java-253-	public void reportAndCallback( final String code, final InvocationListener handler )
org/nlogo/lite/InterfaceComponent.java-254-	{
org/nlogo/lite/InterfaceComponent.java:255:		new Thread( "reportAndCallback" )
org/nlogo/lite/InterfaceComponent.java-256-		{
org/nlogo/lite/InterfaceComponent.java-257-			@Override public void run()
org/nlogo/log/Logger.java-21-
org/nlogo/log/Logger.java-22-	public final static org.apache.log4j.Logger BUTTONS = 
org/nlogo/log/Logger.java:23:		org.apache.log4j.Logger.getLogger( Logger.class.getName() + ".BUTTONS") ;
org/nlogo/log/Logger.java-24-	public final static org.apache.log4j.Logger GREENS = 
org/nlogo/log/Logger.java:25:		org.apache.log4j.Logger.getLogger( Logger.class.getName() + ".GREENS") ;
org/nlogo/log/Logger.java-26-	public final static org.apache.log4j.Logger CODE = 
org/nlogo/log/Logger.java:27:		org.apache.log4j.Logger.getLogger( Logger.class.getName() + ".CODE") ;
org/nlogo/log/Logger.java-28-	public final static org.apache.log4j.Logger WIDGETS = 
org/nlogo/log/Logger.java:29:		org.apache.log4j.Logger.getLogger( Logger.class.getName() + ".WIDGETS") ;
org/nlogo/log/Logger.java-30-	public static final org.apache.log4j.Logger GLOBALS = 
org/nlogo/log/Logger.java:31:		org.apache.log4j.Logger.getLogger( Logger.class.getName() + ".GLOBALS" ) ;
org/nlogo/log/Logger.java-32-	public static final org.apache.log4j.Logger SPEED = 
org/nlogo/log/Logger.java:33:		org.apache.log4j.Logger.getLogger( Logger.class.getName() + ".SPEED" ) ;
org/nlogo/log/Logger.java-34-	public static final org.apache.log4j.Logger TURTLES = 
org/nlogo/log/Logger.java:35:		org.apache.log4j.Logger.getLogger( Logger.class.getName() + ".TURTLES" ) ;
org/nlogo/log/Logger.java-36-	public static final org.apache.log4j.Logger LINKS = 
org/nlogo/log/Logger.java:37:		org.apache.log4j.Logger.getLogger( Logger.class.getName() + ".LINKS" ) ;
org/nlogo/log/Logger.java-38-
org/nlogo/log/Logger.java-39-	private final String studentName ;
org/nlogo/log/Logger.java-43-	{
org/nlogo/log/Logger.java-44-		this.studentName = name ;
org/nlogo/log/Logger.java:45:		logDirectory = System.getProperty( "java.io.tmpdir" ) ;
org/nlogo/log/Logger.java-46-	}
org/nlogo/log/Logger.java-47-
org/nlogo/log/Logger.java-61-			{
org/nlogo/log/Logger.java-62-				String newPath =
org/nlogo/log/Logger.java:63:					System.getProperty( "user.home" )
org/nlogo/log/Logger.java:64:					+ java.io.File.separatorChar + "dummy.txt" ;
org/nlogo/log/Logger.java-65-				java.net.URL urlForm =
org/nlogo/log/Logger.java-66-					new java.net.URL
org/nlogo/log/Logger.java-113-					XMLFileAppender xappender = (XMLFileAppender) appender ;
org/nlogo/log/Logger.java-114-					xappender.setStudentName( studentName ) ;
org/nlogo/log/Logger.java:115:					xappender.setUsername( System.getProperty( "user.name" ) ) ;
org/nlogo/log/Logger.java-116-					xappender.setIPAddress( getIPAddress() ) ; 
org/nlogo/log/Logger.java:117:					xappender.setModelName( name == null ? "new model" : name ) ;
org/nlogo/log/Logger.java-118-					xappender.setVersion( org.nlogo.api.Version.version() ) ;
org/nlogo/log/Logger.java-119-				}
org/nlogo/log/Logger.java-147-	public static void logAddWidget( String type , String name )
org/nlogo/log/Logger.java-148-	{
org/nlogo/log/Logger.java:149:		widgetMsg.updateWidgetMessage( type.toLowerCase() , name , "added" ) ;
org/nlogo/log/Logger.java-150-		WIDGETS.info( widgetMsg ) ;
org/nlogo/log/Logger.java-151-	}	
org/nlogo/log/Logger.java-152-	public static void logWidgetRemoved( String type , String name )
org/nlogo/log/Logger.java-153-	{
org/nlogo/log/Logger.java:154:		widgetMsg.updateWidgetMessage( type.toLowerCase() , name , "removed" ) ;
org/nlogo/log/Logger.java-155-		WIDGETS.info( widgetMsg ) ;
org/nlogo/log/Logger.java-156-	}
org/nlogo/log/Logger.java-163-	}
org/nlogo/log/Logger.java-164-
org/nlogo/log/Logger.java:165:	private static LogMessage tickMsg = LogMessage.createGlobalMessage( "ticks" ) ;
org/nlogo/log/Logger.java-166-	public static void logTick( double ticks )
org/nlogo/log/Logger.java-167-	{
org/nlogo/log/Logger.java:168:		tickMsg.updateGlobalMessage( "ticks" , Double.toString( ticks ) ) ;
org/nlogo/log/Logger.java-169-		GLOBALS.info( tickMsg ) ;
org/nlogo/log/Logger.java-170-	}
org/nlogo/log/Logger.java-173-	public static void logTurtleBirth( String name , String breed )
org/nlogo/log/Logger.java-174-	{
org/nlogo/log/Logger.java:175:		mortalityMsg.updateAgentMessage( "turtle" , name , "born" , breed ) ;
org/nlogo/log/Logger.java-176-		TURTLES.info( mortalityMsg ) ;
org/nlogo/log/Logger.java-177-	}
org/nlogo/log/Logger.java-179-	public static void logTurtleDeath( String name , String breed )
org/nlogo/log/Logger.java-180-	{
org/nlogo/log/Logger.java:181:		mortalityMsg.updateAgentMessage( "turtle" , name , "died" , breed ) ;
org/nlogo/log/Logger.java-182-		TURTLES.info( mortalityMsg ) ;
org/nlogo/log/Logger.java-183-	}
org/nlogo/log/Logger.java-189-		{
org/nlogo/log/Logger.java-190-			buttonMsg.updateButtonMessage
org/nlogo/log/Logger.java:191:				( name , "released" , ( onceButton ? "once" : ( stopping ? "user" : "code" ) ) ) ;
org/nlogo/log/Logger.java-192-			BUTTONS.info( buttonMsg ) ;
org/nlogo/log/Logger.java-193-		}
org/nlogo/log/Logger.java-196-	public static void logButtonPressed( String name )
org/nlogo/log/Logger.java-197-	{
org/nlogo/log/Logger.java:198:		buttonMsg.updateButtonMessage( name , "pressed" , "user" ) ;
org/nlogo/log/Logger.java-199-		BUTTONS.info( buttonMsg ) ;
org/nlogo/log/Logger.java-200-	}
org/nlogo/log/Logger.java-223-	}
org/nlogo/log/Logger.java-224-
org/nlogo/log/Logger.java:225:	private static LogMessage switchMsg = LogMessage.createGlobalMessage( "switch" ) ;
org/nlogo/log/Logger.java-226-	public void switchChanged( String name , boolean value , boolean valueChanged )
org/nlogo/log/Logger.java-227-	{
org/nlogo/log/Logger.java-233-	}
org/nlogo/log/Logger.java-234-
org/nlogo/log/Logger.java:235:	private static LogMessage chooserMsg = LogMessage.createGlobalMessage( "chooser" ) ;
org/nlogo/log/Logger.java-236-	public void chooserChanged( String name , Object value , boolean valueChanged )
org/nlogo/log/Logger.java-237-	{
org/nlogo/log/Logger.java-243-	}
org/nlogo/log/Logger.java-244-
org/nlogo/log/Logger.java:245:	private static LogMessage inputBoxMsg = LogMessage.createGlobalMessage( "input box" ) ;
org/nlogo/log/Logger.java-246-	public void inputBoxChanged( String name , Object value , boolean valueChanged )
org/nlogo/log/Logger.java-247-	{
org/nlogo/log/Logger.java-259-		{
org/nlogo/log/Logger.java-260-			compileMsg.updateCompileMessage
org/nlogo/log/Logger.java:261:				( owner.toLowerCase() , "compiled" , text , Character.toString( agentType ) , "success" , 0 , 0 ) ;
org/nlogo/log/Logger.java-262-		}
org/nlogo/log/Logger.java-263-		else
org/nlogo/log/Logger.java-264-		{
org/nlogo/log/Logger.java-265-			compileMsg.updateCompileMessage
org/nlogo/log/Logger.java:266:				( owner.toLowerCase() , "compiled" , text , Character.toString( agentType ) , 
org/nlogo/log/Logger.java-267-				  error.getMessage() , error.startPos() , error.endPos() ) ;
org/nlogo/log/Logger.java-268-		}
org/nlogo/log/Logger.java:269:		if( owner.equals( "Procedures" ) )
org/nlogo/log/Logger.java-270-		{
org/nlogo/log/Logger.java-271-			CODE.debug( compileMsg ) ;
org/nlogo/log/Logger.java-272-		}
org/nlogo/log/Logger.java:273:		else if( ! owner.startsWith( "Slider" ) )
org/nlogo/log/Logger.java-274-		{ 
org/nlogo/log/Logger.java-275-			CODE.info( compileMsg ) ;
org/nlogo/log/Logger.java-277-	}
org/nlogo/log/Logger.java-278-
org/nlogo/log/Logger.java:279:	private static LogMessage globalMsg = LogMessage.createGlobalMessage( "globals" ) ;
org/nlogo/log/Logger.java-280-	public static void logGlobal( String name , Object value , boolean changed )
org/nlogo/log/Logger.java-281-	{
org/nlogo/log/Logger.java-299-		catch( java.net.UnknownHostException e )
org/nlogo/log/Logger.java-300-		{
org/nlogo/log/Logger.java:301:			return "unknown" ;
org/nlogo/log/Logger.java-302-		}
org/nlogo/log/Logger.java-303-	}
org/nlogo/log/Logger.java-304-
org/nlogo/log/Logger.java-305-	private final java.text.DateFormat dateFormat = 
org/nlogo/log/Logger.java:306:		new java.text.SimpleDateFormat( "yyyy-MM-dd.HH_mm_ss_SS" , java.util.Locale.US ) ;
org/nlogo/log/Logger.java-307-
org/nlogo/log/Logger.java-308-	private String logFileName( String appender ) 
org/nlogo/log/Logger.java-309-	{
org/nlogo/log/Logger.java-310-		return logDirectory
org/nlogo/log/Logger.java:311:			+ System.getProperty( "file.separator" ) + "logfile_" + appender + "_"
org/nlogo/log/Logger.java:312:			+ dateFormat.format( new java.util.Date() ) + ".xml" ;
org/nlogo/log/Logger.java-313-	}
org/nlogo/log/Logger.java-314-
org/nlogo/log/Logger.java-331-					public boolean accept( java.io.File dir , String name )
org/nlogo/log/Logger.java-332-					{
org/nlogo/log/Logger.java:333:						return name.startsWith( "logfile_" ) && name.endsWith( ".xml" ) ;
org/nlogo/log/Logger.java-334-					}
org/nlogo/log/Logger.java-335-				} ) ;
org/nlogo/log/Logger.java-338-		{
org/nlogo/log/Logger.java-339-			java.io.File file = new java.io.File
org/nlogo/log/Logger.java:340:				( path + System.getProperty( "file.separator" ) + files[ i ] ) ;
org/nlogo/log/Logger.java-341-			file.delete() ;
org/nlogo/log/Logger.java-342-		}
org/nlogo/log/Logger.java-357-					public boolean accept( java.io.File dir , String name )
org/nlogo/log/Logger.java-358-					{
org/nlogo/log/Logger.java:359:						return name.startsWith( "logfile_" ) && name.endsWith( ".xml" ) ;
org/nlogo/log/Logger.java-360-					}
org/nlogo/log/Logger.java-361-				} ) ;			
org/nlogo/log/Logger.java-376-					public boolean accept( java.io.File dir , String name )
org/nlogo/log/Logger.java-377-					{
org/nlogo/log/Logger.java:378:						return name.startsWith( "logfile_" ) && name.endsWith( ".xml" ) ;
org/nlogo/log/Logger.java-379-					}
org/nlogo/log/Logger.java-380-				} ) ;			
org/nlogo/log/Logger.java-388-				try
org/nlogo/log/Logger.java-389-				{
org/nlogo/log/Logger.java:390:					String file = path + System.getProperty( "file.separator" ) + files[ i ] ;
org/nlogo/log/Logger.java-391-					byte [] data = org.nlogo.api.FileIO.file2String( file ).getBytes() ;
org/nlogo/log/Logger.java-392-					out.putNextEntry( new java.util.zip.ZipEntry( files[ i ] ) ) ;
org/nlogo/log/Logger.java-420-	// so for now, at least we make this a separate method so the
org/nlogo/log/Logger.java-421-	// SuppressWarnings annotation is narrowly targeted. - ST 12/7/09
org/nlogo/log/Logger.java:422:	@SuppressWarnings("deprecation")
org/nlogo/log/Logger.java-423-	private static java.net.URL toURL( java.io.File file )
org/nlogo/log/Logger.java-424-		throws java.net.MalformedURLException
org/nlogo/log/LogMessage.java-25-	{
org/nlogo/log/LogMessage.java-26-		LogMessage msg = new LogMessage() ;
org/nlogo/log/LogMessage.java:27:		msg.tag = "event" ;
org/nlogo/log/LogMessage.java-28-		msg.attributes = new String [ 1 ][] ;
org/nlogo/log/LogMessage.java-29-		msg.attributes[ 0 ] = new String [ 2 ] ;
org/nlogo/log/LogMessage.java:30:		msg.attributes[ 0 ][ 0 ] = "type" ;
org/nlogo/log/LogMessage.java-31-		msg.attributes[ 0 ][ 1 ] = type ;
org/nlogo/log/LogMessage.java-32-		msg.elements = new LogMessage [ 2 ] ;
org/nlogo/log/LogMessage.java-33-
org/nlogo/log/LogMessage.java-34-		msg.elements[ 0 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:35:		msg.elements[ 0 ].tag = "name" ;
org/nlogo/log/LogMessage.java-36-
org/nlogo/log/LogMessage.java-37-		msg.elements[ 1 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:38:		msg.elements[ 1 ].tag = "value" ;
org/nlogo/log/LogMessage.java-39-		return msg ;
org/nlogo/log/LogMessage.java-40-	}
org/nlogo/log/LogMessage.java-49-	{
org/nlogo/log/LogMessage.java-50-		LogMessage msg = new LogMessage() ;
org/nlogo/log/LogMessage.java:51:		msg.tag = "event" ;
org/nlogo/log/LogMessage.java-52-		msg.attributes = new String [ 1 ][] ;
org/nlogo/log/LogMessage.java-53-		msg.attributes[ 0 ] = new String [ 2 ] ;
org/nlogo/log/LogMessage.java:54:		msg.attributes[ 0 ][ 0 ] = "type" ;
org/nlogo/log/LogMessage.java:55:		msg.attributes[ 0 ][ 1 ] = "slider" ;
org/nlogo/log/LogMessage.java-56-
org/nlogo/log/LogMessage.java-57-		msg.elements = new LogMessage [ 4 ] ;
org/nlogo/log/LogMessage.java-58-		msg.elements[ 0 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:59:		msg.elements[ 0 ].tag = "action" ;
org/nlogo/log/LogMessage.java:60:		msg.elements[ 0 ].data = "changed" ;
org/nlogo/log/LogMessage.java-61-		msg.elements[ 1 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:62:		msg.elements[ 1 ].tag = "name" ;
org/nlogo/log/LogMessage.java-63-		msg.elements[ 2 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:64:		msg.elements[ 2 ].tag = "value" ;
org/nlogo/log/LogMessage.java-65-		msg.elements[ 3 ] = createSliderParameterMessage() ;
org/nlogo/log/LogMessage.java-66-		return msg ;
org/nlogo/log/LogMessage.java-70-	{
org/nlogo/log/LogMessage.java-71-		LogMessage msg = new LogMessage() ;
org/nlogo/log/LogMessage.java:72:		msg.tag = "parameters" ;
org/nlogo/log/LogMessage.java-73-		msg.elements = new LogMessage [ 3 ] ;
org/nlogo/log/LogMessage.java-74-		msg.elements[ 0 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:75:		msg.elements[ 0 ].tag = "min" ;
org/nlogo/log/LogMessage.java-76-		msg.elements[ 1 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:77:		msg.elements[ 1 ].tag = "max" ;
org/nlogo/log/LogMessage.java-78-		msg.elements[ 2 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:79:		msg.elements[ 2 ].tag = "inc" ;
org/nlogo/log/LogMessage.java-80-		return msg ;
org/nlogo/log/LogMessage.java-81-	}
org/nlogo/log/LogMessage.java-93-	{
org/nlogo/log/LogMessage.java-94-		LogMessage msg = new LogMessage() ;
org/nlogo/log/LogMessage.java:95:		msg.tag = "event" ;
org/nlogo/log/LogMessage.java-96-		msg.attributes = new String [ 1 ][] ;
org/nlogo/log/LogMessage.java-97-		msg.attributes[ 0 ] = new String [ 2 ] ;
org/nlogo/log/LogMessage.java:98:		msg.attributes[ 0 ][ 0 ] = "type" ;
org/nlogo/log/LogMessage.java:99:		msg.attributes[ 0 ][ 1 ] = "button" ;
org/nlogo/log/LogMessage.java-100-		
org/nlogo/log/LogMessage.java-101-		msg.elements = new LogMessage[ 3 ] ;
org/nlogo/log/LogMessage.java-102-		msg.elements[ 0 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:103:		msg.elements[ 0 ].tag = "name" ;
org/nlogo/log/LogMessage.java-104-		msg.elements[ 1 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:105:		msg.elements[ 1 ].tag = "action" ;
org/nlogo/log/LogMessage.java-106-		msg.elements[ 2 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:107:		msg.elements[ 2 ].tag = "releaseType" ;
org/nlogo/log/LogMessage.java-108-
org/nlogo/log/LogMessage.java-109-		return msg ;
org/nlogo/log/LogMessage.java-120-	{
org/nlogo/log/LogMessage.java-121-		LogMessage msg = new LogMessage() ;
org/nlogo/log/LogMessage.java:122:		msg.tag = "event" ;
org/nlogo/log/LogMessage.java-123-		msg.attributes = new String [ 1 ][] ;
org/nlogo/log/LogMessage.java-124-		msg.attributes[ 0 ] = new String [ 2 ] ;
org/nlogo/log/LogMessage.java:125:		msg.attributes[ 0 ][ 0 ] = "type" ;
org/nlogo/log/LogMessage.java-126-
org/nlogo/log/LogMessage.java-127-		msg.elements = new LogMessage[ 2 ] ;
org/nlogo/log/LogMessage.java-128-		msg.elements[ 0 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:129:		msg.elements[ 0 ].tag = "name" ;
org/nlogo/log/LogMessage.java-130-		msg.elements[ 1 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:131:		msg.elements[ 1 ].tag = "action" ;
org/nlogo/log/LogMessage.java-132-
org/nlogo/log/LogMessage.java-133-		return msg ;
org/nlogo/log/LogMessage.java-144-	{
org/nlogo/log/LogMessage.java-145-		LogMessage msg = new LogMessage() ;
org/nlogo/log/LogMessage.java:146:		msg.tag = "event" ;
org/nlogo/log/LogMessage.java-147-		msg.attributes = new String [ 1 ][] ;
org/nlogo/log/LogMessage.java-148-		msg.attributes[ 0 ] = new String [ 2 ] ;
org/nlogo/log/LogMessage.java:149:		msg.attributes[ 0 ][ 0 ] = "type" ;
org/nlogo/log/LogMessage.java-150-
org/nlogo/log/LogMessage.java-151-		msg.elements = new LogMessage[ 3 ] ;
org/nlogo/log/LogMessage.java-152-		msg.elements[ 0 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:153:		msg.elements[ 0 ].tag = "name" ;
org/nlogo/log/LogMessage.java-154-		msg.elements[ 1 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:155:		msg.elements[ 1 ].tag = "action" ;
org/nlogo/log/LogMessage.java-156-		msg.elements[ 2 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:157:		msg.elements[ 2 ].tag = "breed" ;
org/nlogo/log/LogMessage.java-158-
org/nlogo/log/LogMessage.java-159-		return msg ;
org/nlogo/log/LogMessage.java-171-	{
org/nlogo/log/LogMessage.java-172-		LogMessage msg = new LogMessage() ;
org/nlogo/log/LogMessage.java:173:		msg.tag = "event" ;
org/nlogo/log/LogMessage.java-174-		msg.attributes = new String [ 1 ][] ;
org/nlogo/log/LogMessage.java-175-		msg.attributes[ 0 ] = new String [ 2 ] ;
org/nlogo/log/LogMessage.java:176:		msg.attributes[ 0 ][ 0 ] = "type" ;
org/nlogo/log/LogMessage.java-177-		
org/nlogo/log/LogMessage.java-178-		msg.elements = new LogMessage [ 4 ] ;
org/nlogo/log/LogMessage.java-179-		msg.elements[ 0 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:180:		msg.elements[ 0 ].tag = "action" ;
org/nlogo/log/LogMessage.java-181-		msg.elements[ 1 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:182:		msg.elements[ 1 ].tag = "code" ;
org/nlogo/log/LogMessage.java-183-		msg.elements[ 2 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:184:		msg.elements[ 2 ].tag = "agentType" ;
org/nlogo/log/LogMessage.java-185-		msg.elements[ 3 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:186:		msg.elements[ 3 ].tag = "errorMessage" ;
org/nlogo/log/LogMessage.java-187-		msg.elements[ 3 ].attributes = new String [ 2 ][] ;
org/nlogo/log/LogMessage.java-188-		msg.elements[ 3 ].attributes[ 0 ] = new String [ 2 ] ;
org/nlogo/log/LogMessage.java:189:		msg.elements[ 3 ].attributes[ 0 ][ 0 ] = "startPos" ;
org/nlogo/log/LogMessage.java-190-		msg.elements[ 3 ].attributes[ 1 ] = new String [ 2 ] ;
org/nlogo/log/LogMessage.java:191:		msg.elements[ 3 ].attributes[ 1 ][ 0 ] = "endPos" ;
org/nlogo/log/LogMessage.java-192-
org/nlogo/log/LogMessage.java-193-		return msg ;
org/nlogo/log/LogMessage.java-209-	{
org/nlogo/log/LogMessage.java-210-		LogMessage msg = new LogMessage() ;
org/nlogo/log/LogMessage.java:211:		msg.tag = "event" ;
org/nlogo/log/LogMessage.java-212-		msg.attributes = new String [ 1 ][] ;
org/nlogo/log/LogMessage.java-213-		msg.attributes[ 0 ] = new String [ 2 ] ;
org/nlogo/log/LogMessage.java:214:		msg.attributes[ 0 ][ 0 ] = "type" ;
org/nlogo/log/LogMessage.java:215:		msg.attributes[ 0 ][ 1 ] = "speed" ;
org/nlogo/log/LogMessage.java-216-
org/nlogo/log/LogMessage.java-217-		msg.elements = new LogMessage[ 1 ] ;
org/nlogo/log/LogMessage.java-218-		msg.elements[ 0 ] = new LogMessage() ;
org/nlogo/log/LogMessage.java:219:		msg.elements[ 0 ].tag = "value" ;
org/nlogo/log/LogMessage.java-220-
org/nlogo/log/LogMessage.java-221-		return msg ;
org/nlogo/log/XMLFileAppender.java-58-			try
org/nlogo/log/XMLFileAppender.java-59-			{
org/nlogo/log/XMLFileAppender.java:60:				tf.setAttribute( "indent-number" , Integer.valueOf( 2 ) ) ;
org/nlogo/log/XMLFileAppender.java-61-			}
org/nlogo/log/XMLFileAppender.java-62-			catch( IllegalArgumentException ex )
org/nlogo/log/XMLFileAppender.java-67-			Transformer transformer = hd.getTransformer() ;
org/nlogo/log/XMLFileAppender.java-68-			transformer.setOutputProperty
org/nlogo/log/XMLFileAppender.java:69:				( OutputKeys.INDENT , "yes" ) ;
org/nlogo/log/XMLFileAppender.java-70-			
org/nlogo/log/XMLFileAppender.java-71-			hd.setResult( streamResult ) ;
org/nlogo/log/XMLFileAppender.java-72-			hd.startDocument() ;
org/nlogo/log/XMLFileAppender.java:73:			hd.startDTD( "eventSet" , "netlogo_logging.dtd" , fileName ) ;
org/nlogo/log/XMLFileAppender.java-74-			hd.endDTD() ;
org/nlogo/log/XMLFileAppender.java-75-			AttributesImpl attributes = new AttributesImpl() ;
org/nlogo/log/XMLFileAppender.java-76-			attributes.addAttribute
org/nlogo/log/XMLFileAppender.java:77:				( "" , "" , "username" , "CDATA" , username )  ;
org/nlogo/log/XMLFileAppender.java-78-			attributes.addAttribute
org/nlogo/log/XMLFileAppender.java:79:				( "" , "" , "name" , "CDATA" , studentName )  ;
org/nlogo/log/XMLFileAppender.java-80-			attributes.addAttribute
org/nlogo/log/XMLFileAppender.java:81:				( "" , "" , "ipaddress" , "CDATA" , ip )  ;
org/nlogo/log/XMLFileAppender.java-82-			attributes.addAttribute
org/nlogo/log/XMLFileAppender.java:83:				( "" , "" , "modelName" , "CDATA" , modelName )  ;
org/nlogo/log/XMLFileAppender.java-84-			attributes.addAttribute
org/nlogo/log/XMLFileAppender.java:85:				( "" , "" , "version" , "CDATA" , version )  ;
org/nlogo/log/XMLFileAppender.java:86:			hd.startElement( "" , "" , "eventSet" , attributes )  ;
org/nlogo/log/XMLFileAppender.java-87-			if( getLayout() instanceof  XMLLayout )
org/nlogo/log/XMLFileAppender.java-88-			{
org/nlogo/log/XMLFileAppender.java-107-			try
org/nlogo/log/XMLFileAppender.java-108-			{
org/nlogo/log/XMLFileAppender.java:109:				hd.endElement( "" , "" , "eventSet" ) ;
org/nlogo/log/XMLFileAppender.java-110-				hd.endDocument() ;
org/nlogo/log/XMLFileAppender.java-111-			}
org/nlogo/log/XMLLayout.java-35-			Object obj = event.getMessage() ;
org/nlogo/log/XMLLayout.java-36-
org/nlogo/log/XMLLayout.java:37:			String type = obj instanceof LogMessage ? ((LogMessage)obj).attributes[ 0 ][ 1 ] : "log" ;
org/nlogo/log/XMLLayout.java-38-
org/nlogo/log/XMLLayout.java-39-			attributes.addAttribute
org/nlogo/log/XMLLayout.java:40:				( "" , "" , "logger" , "CDATA" , event.getLoggerName() ) ;
org/nlogo/log/XMLLayout.java-41-			attributes.addAttribute
org/nlogo/log/XMLLayout.java:42:				( "" , "" , "timestamp" , "CDATA" , Long.toString( event.timeStamp ) ) ;
org/nlogo/log/XMLLayout.java-43-			attributes.addAttribute
org/nlogo/log/XMLLayout.java:44:				( "" , "" , "level" , "CDATA" , event.getLevel().toString() ) ;
org/nlogo/log/XMLLayout.java-45-			attributes.addAttribute
org/nlogo/log/XMLLayout.java:46:				( "" , "" , "type" , "CDATA" , type ) ;
org/nlogo/log/XMLLayout.java:47:			hd.startElement( "" , "" , "event" , attributes ) ;
org/nlogo/log/XMLLayout.java-48-
org/nlogo/log/XMLLayout.java-49-			attributes.clear() ;
org/nlogo/log/XMLLayout.java-63-			{
org/nlogo/log/XMLLayout.java-64-				hd.startElement
org/nlogo/log/XMLLayout.java:65:					( "" , "" , "message" , attributes ) ;
org/nlogo/log/XMLLayout.java-66-				hd.characters( event.getRenderedMessage().toCharArray() , 0 , 
org/nlogo/log/XMLLayout.java-67-							   event.getRenderedMessage().length() ) ;
org/nlogo/log/XMLLayout.java:68:				hd.endElement( "" , "" , "message" ) ;
org/nlogo/log/XMLLayout.java-69-			}
org/nlogo/log/XMLLayout.java-70-				
org/nlogo/log/XMLLayout.java:71:			hd.endElement( "" , "" , "event" ) ;
org/nlogo/log/XMLLayout.java-72-		}
org/nlogo/log/XMLLayout.java-73-		catch( SAXException ex )
org/nlogo/log/XMLLayout.java-87-			{
org/nlogo/log/XMLLayout.java-88-				attributes.addAttribute
org/nlogo/log/XMLLayout.java:89:					( "" , "" , msg.attributes[ i ][ 0 ] , "CDATA" , msg.attributes[ i ][ 1 ] ) ;			
org/nlogo/log/XMLLayout.java-90-			}
org/nlogo/log/XMLLayout.java-91-		}
org/nlogo/nvm/Activation.java-31-	{
org/nlogo/nvm/Activation.java-32-		String result = super.toString() ;
org/nlogo/nvm/Activation.java:33:		result += " (" + args.length + " args" ;
org/nlogo/nvm/Activation.java:34:		result += ", return address = " + returnAddress + ")\n" ;
org/nlogo/nvm/Activation.java-35-		for( int i = 0 ; i < args.length ; i ++ )
org/nlogo/nvm/Activation.java-36-		{
org/nlogo/nvm/Activation.java:37:			result += "  arg " + i + " = " + args[i] + "\n" ;
org/nlogo/nvm/Activation.java-38-		}
org/nlogo/nvm/Activation.java-39-		return result ;
org/nlogo/nvm/Argument.java-215-	private String getExceptionMessage( int wantedType , Object badValue )
org/nlogo/nvm/Argument.java-216-	{
org/nlogo/nvm/Argument.java:217:		String result = "Expected this input to be " 
org/nlogo/nvm/Argument.java:218:			+ org.nlogo.nvm.Syntax.aTypeName( wantedType ) + " but got " 
org/nlogo/nvm/Argument.java-219-			+ ( badValue instanceof org.nlogo.api.Nobody
org/nlogo/nvm/Argument.java:220:				? "NOBODY"
org/nlogo/nvm/Argument.java:221:				: "the " + org.nlogo.nvm.Syntax.typeName(badValue) 
org/nlogo/nvm/Argument.java-222-				  + " " + Dump.logoObject( badValue ) ) 
org/nlogo/nvm/Argument.java:223:			+ " instead." ;
org/nlogo/nvm/Argument.java-224-
org/nlogo/nvm/Argument.java-225-		return result ;
org/nlogo/nvm/ArgumentTypeException.java-10-	private final Object badValue;
org/nlogo/nvm/ArgumentTypeException.java-11-	
org/nlogo/nvm/ArgumentTypeException.java:12:	@SuppressWarnings("unused")  // Eclipse complains too
org/nlogo/nvm/ArgumentTypeException.java-13-	private final int badArgIndex; // NOPMD pmd complains because the code that uses this is commented out below - ST 3/10/08
org/nlogo/nvm/ArgumentTypeException.java-14-
org/nlogo/nvm/ArgumentTypeException.java-18-								  int wantedType , Object badValue )
org/nlogo/nvm/ArgumentTypeException.java-19-	{
org/nlogo/nvm/ArgumentTypeException.java:20:		super( context , problemInstr , "message will be built later." ) ;
org/nlogo/nvm/ArgumentTypeException.java-21-		this.badArgIndex = badArgIndex;
org/nlogo/nvm/ArgumentTypeException.java-22-		this.wantedType = wantedType;
org/nlogo/nvm/ArgumentTypeException.java-32-	{
org/nlogo/nvm/ArgumentTypeException.java-33-		String result = "";
org/nlogo/nvm/ArgumentTypeException.java:34:		String positionPhrase = "input";
org/nlogo/nvm/ArgumentTypeException.java-35-		
org/nlogo/nvm/ArgumentTypeException.java-36-		if (instruction != null)
org/nlogo/nvm/ArgumentTypeException.java-38-			result += instruction.displayName() ;
org/nlogo/nvm/ArgumentTypeException.java-39-		}
org/nlogo/nvm/ArgumentTypeException.java:40:		result += " expected " + positionPhrase 
org/nlogo/nvm/ArgumentTypeException.java:41:					+ " to be " + Syntax.aTypeName( wantedType ); 
org/nlogo/nvm/ArgumentTypeException.java-42-
org/nlogo/nvm/ArgumentTypeException.java-43-		// if badValue is a Class object, then it's not REALLY
org/nlogo/nvm/ArgumentTypeException.java-46-		if (badValue instanceof Class<?>)
org/nlogo/nvm/ArgumentTypeException.java-47-		{
org/nlogo/nvm/ArgumentTypeException.java:48:			result += " but got " + Syntax.aTypeName( Syntax.getTypeConstant( (Class<?>) badValue) ) + " instead.";
org/nlogo/nvm/ArgumentTypeException.java-49-		}
org/nlogo/nvm/ArgumentTypeException.java-50-		else if (badValue != null)
org/nlogo/nvm/ArgumentTypeException.java-52-			String badValueStr = Dump.logoObject( badValue , true , false);
org/nlogo/nvm/ArgumentTypeException.java-53-		
org/nlogo/nvm/ArgumentTypeException.java:54:			result += " but got " + ( badValue instanceof org.nlogo.api.Nobody
org/nlogo/nvm/ArgumentTypeException.java:55:					? "NOBODY"
org/nlogo/nvm/ArgumentTypeException.java:56:					: "the " + Syntax.typeName(badValue) + " " + badValueStr ) 
org/nlogo/nvm/ArgumentTypeException.java:57:					+ " instead." ;
org/nlogo/nvm/ArgumentTypeException.java-58-		}
org/nlogo/nvm/ArgumentTypeException.java-59-		else
org/nlogo/nvm/Context.java-107-		{
org/nlogo/nvm/Context.java-108-			throw new EngineException
org/nlogo/nvm/Context.java:109:				( this , "stack overflow (recursion too deep)" ) ;
org/nlogo/nvm/Context.java-110-		}
org/nlogo/nvm/Context.java-111-    }
org/nlogo/nvm/Context.java-156-			if( job.parentContext == null )
org/nlogo/nvm/Context.java-157-			{
org/nlogo/nvm/Context.java:158:				throw new IllegalStateException( "null parent context" ) ;
org/nlogo/nvm/Context.java-159-			}
org/nlogo/nvm/Context.java-160-			// ...but if this Context was spawned by a Job (e.g. _ask)
org/nlogo/nvm/Context.java-223-		boolean oldInReporterProcedure = inReporterProcedure ;
org/nlogo/nvm/Context.java-224-		Command command = null ;
org/nlogo/nvm/Context.java:225:		inReporterProcedure = true ; // so use of "ask" will create an exclusive job
org/nlogo/nvm/Context.java-226-		activation = newActivation ;
org/nlogo/nvm/Context.java-227-		ip = 0 ;
org/nlogo/nvm/Context.java-258-	}
org/nlogo/nvm/Context.java-259-
org/nlogo/nvm/Context.java:260:	/// stuff for "let"
org/nlogo/nvm/Context.java-261-	
org/nlogo/nvm/Context.java-262-	public void let( Let let , Object value )
org/nlogo/nvm/Context.java-295-	public String toString()
org/nlogo/nvm/Context.java-296-	{
org/nlogo/nvm/Context.java:297:		return "Context: ip: " + ip + " job: " + job ;
org/nlogo/nvm/Context.java-298-	}
org/nlogo/nvm/Context.java-299-
org/nlogo/nvm/Context.java-344-		if( procedure != null && ! procedure.topLevel )
org/nlogo/nvm/Context.java-345-		{
org/nlogo/nvm/Context.java:346:			stackTrace = " in " + procedure.getDisplayName() ;
org/nlogo/nvm/Context.java-347-		}
org/nlogo/nvm/Context.java-348-		Activation parentActivation = activation == null ? null : activation.parent ;
org/nlogo/nvm/Context.java-351-			if( parentActivation.procedure != null )
org/nlogo/nvm/Context.java-352-			{
org/nlogo/nvm/Context.java:353:				stackTrace += "\n  called by " + parentActivation.procedure.getDisplayName() ;
org/nlogo/nvm/Context.java-354-			}
org/nlogo/nvm/Context.java-355-			parentActivation = parentActivation.parent ;
org/nlogo/nvm/Context.java-359-		{
org/nlogo/nvm/Context.java-360-			message = throwable.getMessage() + "\n" + 
org/nlogo/nvm/Context.java:361:				"error while " + agent + " running " + instructionName + stackTrace + "\n";
org/nlogo/nvm/Context.java-362-		}
org/nlogo/nvm/Context.java-363-		else
org/nlogo/nvm/Context.java-364-		{
org/nlogo/nvm/Context.java:365:			message = "error (" + exceptionName + ")\nwhile " + agent + " running " + instructionName + stackTrace ;
org/nlogo/nvm/Context.java-366-		}
org/nlogo/nvm/Context.java-367-		return message ;
org/nlogo/nvm/EngineException.java-81-		if (hasBeenResolved)
org/nlogo/nvm/EngineException.java-82-		{
org/nlogo/nvm/EngineException.java:83:			throw new IllegalStateException( "An EngineException must only be 'resolved' once!");
org/nlogo/nvm/EngineException.java-84-		}
org/nlogo/nvm/EngineException.java-85-		hasBeenResolved = true;
org/nlogo/nvm/HaltException.scala-4-
org/nlogo/nvm/HaltException.scala-5-class HaltException(val haltAll: Boolean)
org/nlogo/nvm/HaltException.scala:6:  extends LogoException("model halted by user")
org/nlogo/nvm/Instruction.java-47-
org/nlogo/nvm/Instruction.java-48-	// for extra-efficient agent class checking
org/nlogo/nvm/Instruction.java:49:	public String agentClassString = "OTPL" ;
org/nlogo/nvm/Instruction.java-50-	public int agentBits = 0 ;
org/nlogo/nvm/Instruction.java-51-
org/nlogo/nvm/Instruction.java-253-			throw new EngineException
org/nlogo/nvm/Instruction.java-254-				( context , this ,
org/nlogo/nvm/Instruction.java:255:				  breed.printName() + " is a directed breed." ) ;
org/nlogo/nvm/Instruction.java-256-		}
org/nlogo/nvm/Instruction.java-257-	}
org/nlogo/nvm/Instruction.java-264-			throw new EngineException
org/nlogo/nvm/Instruction.java-265-				( context , this ,
org/nlogo/nvm/Instruction.java:266:				  breed.printName() + " is an undirected breed." ) ;
org/nlogo/nvm/Instruction.java-267-		}
org/nlogo/nvm/Instruction.java-268-	}
org/nlogo/nvm/Instruction.java-275-			throw new EngineException
org/nlogo/nvm/Instruction.java-276-				( context , this , 
org/nlogo/nvm/Instruction.java:277:				  "You cannot have both breeded and unbreeded links in the same world." ) ;
org/nlogo/nvm/Instruction.java-278-		}
org/nlogo/nvm/Instruction.java-279-	}
org/nlogo/nvm/Instruction.java-289-			throw new EngineException
org/nlogo/nvm/Instruction.java-290-				( null , this ,
org/nlogo/nvm/Instruction.java:291:				  d + " is too large to be represented exactly as an integer in NetLogo" ) ;
org/nlogo/nvm/Instruction.java-292-		}
org/nlogo/nvm/Instruction.java-293-		return (long) d ;
org/nlogo/nvm/Instruction.java-332-		throw new EngineException
org/nlogo/nvm/Instruction.java-333-			( null , this ,
org/nlogo/nvm/Instruction.java:334:			  "math operation produced " 
org/nlogo/nvm/Instruction.java-335-			  + ( Double.isInfinite( d )
org/nlogo/nvm/Instruction.java:336:				  ? "a number too large for NetLogo"
org/nlogo/nvm/Instruction.java:337:				  : "a non-number" ) ) ;
org/nlogo/nvm/Instruction.java-338-	}
org/nlogo/nvm/Instruction.java-339-
org/nlogo/nvm/Instruction.java-362-		{
org/nlogo/nvm/Instruction.java-363-			throw new EngineException
org/nlogo/nvm/Instruction.java:364:				( context , this , "this code can't be run by " 
org/nlogo/nvm/Instruction.java-365-				  + agentClassDescription( agentClass ) +
org/nlogo/nvm/Instruction.java:366:				  ", only " + agentClassDescription( allowedAgentClasses.get( 0 )  ) ) ;
org/nlogo/nvm/Instruction.java-367-		}
org/nlogo/nvm/Instruction.java-368-		else
org/nlogo/nvm/Instruction.java-369-		{
org/nlogo/nvm/Instruction.java-370-			throw new EngineException
org/nlogo/nvm/Instruction.java:371:				( context , this , "this code can't be run by " 
org/nlogo/nvm/Instruction.java-372-				  + agentClassDescription( agentClass ) ) ;
org/nlogo/nvm/Instruction.java-373-		}
org/nlogo/nvm/Instruction.java-378-		if( agentClass == Observer.class )
org/nlogo/nvm/Instruction.java-379-		{
org/nlogo/nvm/Instruction.java:380:			return "the observer" ;
org/nlogo/nvm/Instruction.java-381-		}
org/nlogo/nvm/Instruction.java-382-		else if( agentClass == Turtle.class )
org/nlogo/nvm/Instruction.java-383-		{
org/nlogo/nvm/Instruction.java:384:			return "a turtle" ;
org/nlogo/nvm/Instruction.java-385-		}
org/nlogo/nvm/Instruction.java-386-		else if( agentClass == Patch.class )
org/nlogo/nvm/Instruction.java-387-		{
org/nlogo/nvm/Instruction.java:388:			return "a patch" ;
org/nlogo/nvm/Instruction.java-389-		}
org/nlogo/nvm/Instruction.java-390-		else if( agentClass == Link.class )
org/nlogo/nvm/Instruction.java-391-		{
org/nlogo/nvm/Instruction.java:392:			return "a link" ;
org/nlogo/nvm/Instruction.java-393-		}
org/nlogo/nvm/Instruction.java-411-				throw new EngineException
org/nlogo/nvm/Instruction.java:412:					( context , this , "This " + agent.classDisplayName() + " is dead.") ;
org/nlogo/nvm/Instruction.java-413-			}
org/nlogo/nvm/Instruction.java-414-			return agent ;
org/nlogo/nvm/Job.java-80-	{
org/nlogo/nvm/Job.java-81-		StringBuilder buf = new StringBuilder( super.toString() ) ;
org/nlogo/nvm/Job.java:82:		buf.append( "(owner: {" + owner + "}, state:" ) ;
org/nlogo/nvm/Job.java-83-		switch( state )
org/nlogo/nvm/Job.java-84-		{
org/nlogo/nvm/Job.java-85-			case RUNNING :
org/nlogo/nvm/Job.java:86:				buf.append( "running" ) ;
org/nlogo/nvm/Job.java-87-				break ;
org/nlogo/nvm/Job.java-88-			case DONE :
org/nlogo/nvm/Job.java:89:				buf.append( "done" ) ;
org/nlogo/nvm/Job.java-90-				break ;
org/nlogo/nvm/Job.java-91-			case REMOVED :
org/nlogo/nvm/Job.java:92:				buf.append( "removed" ) ;
org/nlogo/nvm/Job.java-93-				break ;
org/nlogo/nvm/Job.java-94-			default :
org/nlogo/nvm/Job.java-95-				throw new IllegalStateException
org/nlogo/nvm/Job.java:96:					( "unknown state: " + state ) ;
org/nlogo/nvm/Job.java-97-		}
org/nlogo/nvm/Job.java-98-		buf.append( ")" ) ;
org/nlogo/nvm/LetMap.java-36-	private Object[] table = new Object[ 4 ] ;
org/nlogo/nvm/Procedure.java-19-	public List<String> args = new ArrayList<String>() ;
org/nlogo/nvm/Procedure.java-20-	public final Type tyype ;
org/nlogo/nvm/Procedure.java:21:	public String usableBy = "OTPL" ;
org/nlogo/nvm/Procedure.java-22-	public int localsCount = 0 ;
org/nlogo/nvm/Procedure.java-23-	public int templateVars = 0 ;
org/nlogo/nvm/Procedure.java-68-	// used when reporting a runtime error to the user
org/nlogo/nvm/Procedure.java-69-    public String getDisplayName(){
org/nlogo/nvm/Procedure.java:70:        return displayName == null ? ("procedure " + getNameAndFile()) : displayName;
org/nlogo/nvm/Procedure.java-71-    }
org/nlogo/nvm/Procedure.java-72-    
org/nlogo/nvm/Procedure.java-77-			return name ;
org/nlogo/nvm/Procedure.java-78-		}
org/nlogo/nvm/Procedure.java:79:		return name + " (" + fileName + ")" ;
org/nlogo/nvm/Procedure.java-80-	}
org/nlogo/nvm/Procedure.java-81-
org/nlogo/nvm/Procedure.java-84-	{
org/nlogo/nvm/Procedure.java-85-		return super.toString() +
org/nlogo/nvm/Procedure.java:86:			"[" + name + ":" + Dump.list( args ) + ":" + usableBy + "]" ;
org/nlogo/nvm/Procedure.java-87-	}
org/nlogo/nvm/Procedure.java-88-
org/nlogo/nvm/Procedure.java-90-	{
org/nlogo/nvm/Procedure.java-91-		StringBuilder buf = new StringBuilder() ;
org/nlogo/nvm/Procedure.java:92:		buf.append( name + "{" + usableBy + "}:\n" ) ;
org/nlogo/nvm/Procedure.java-93-		for( int i = 0 ; i < code.length ; i ++ )
org/nlogo/nvm/Procedure.java-94-		{
org/nlogo/nvm/Syntax.java-61-	{
org/nlogo/nvm/Syntax.java-62-		this( left , right , ret , precedence , dfault , dfault , isRightAssociative ,
org/nlogo/nvm/Syntax.java:63:			  "OTPL" , null , false ) ;
org/nlogo/nvm/Syntax.java-64-	}
org/nlogo/nvm/Syntax.java-65-
org/nlogo/nvm/Syntax.java-95-	public static Syntax commandSyntax( boolean switches )
org/nlogo/nvm/Syntax.java-96-	{
org/nlogo/nvm/Syntax.java:97:		return commandSyntax( "OTPL" , switches ) ;
org/nlogo/nvm/Syntax.java-98-	}
org/nlogo/nvm/Syntax.java-99-	public static Syntax commandSyntax( String agentClassString , boolean switches )
org/nlogo/nvm/Syntax.java-115-    {
org/nlogo/nvm/Syntax.java-116-		return new Syntax( TYPE_VOID , right , TYPE_VOID , COMMAND_PRECEDENCE ,
org/nlogo/nvm/Syntax.java:117:						   right.length , right.length , false , "OTPL" , null , switches ) ;
org/nlogo/nvm/Syntax.java-118-    }
org/nlogo/nvm/Syntax.java-119-
org/nlogo/nvm/Syntax.java-225-    {
org/nlogo/nvm/Syntax.java-226-		return new Syntax( TYPE_VOID , right , ret , NORMAL_PRECEDENCE ,
org/nlogo/nvm/Syntax.java:227:						   dfault , min , false , "OTPL" , null , false ) ;
org/nlogo/nvm/Syntax.java-228-    }
org/nlogo/nvm/Syntax.java-229-    
org/nlogo/nvm/Syntax.java-291-	private static String getOrdinalNumberText(int num)
org/nlogo/nvm/Syntax.java-292-	{
org/nlogo/nvm/Syntax.java:293:		switch( num )  // NOPMD pmd is confused by "break" not appearing anywhere
org/nlogo/nvm/Syntax.java-294-		{
org/nlogo/nvm/Syntax.java:295:			case 1: return "first";
org/nlogo/nvm/Syntax.java:296:			case 2: return "second";
org/nlogo/nvm/Syntax.java:297:			case 3: return "third";
org/nlogo/nvm/Syntax.java:298:			case 4: return "fourth";
org/nlogo/nvm/Syntax.java:299:			case 5: return "fifth";
org/nlogo/nvm/Syntax.java:300:			case 6: return "sixth";
org/nlogo/nvm/Syntax.java:301:			case 7: return "seventh";
org/nlogo/nvm/Syntax.java:302:			case 8: return "eighth";
org/nlogo/nvm/Syntax.java:303:			case 9: return "ninth";
org/nlogo/nvm/Syntax.java:304:			case 10: return "tenth";
org/nlogo/nvm/Syntax.java:305:			case 11: return "eleventh";
org/nlogo/nvm/Syntax.java:306:			case 12: return "twelfth";
org/nlogo/nvm/Syntax.java-307-			default : 
org/nlogo/nvm/Syntax.java-308-				switch( num % 10 )
org/nlogo/nvm/Syntax.java-309-				{
org/nlogo/nvm/Syntax.java:310:					case 1 : return num + "st";
org/nlogo/nvm/Syntax.java:311:					case 2 : return num + "nd";
org/nlogo/nvm/Syntax.java:312:					case 3 : return num + "rd";
org/nlogo/nvm/Syntax.java:313:					default : return num + "th";
org/nlogo/nvm/Syntax.java-314-				}
org/nlogo/nvm/Syntax.java-315-		}
org/nlogo/nvm/Syntax.java-320-	 * of the argument at the given index, relative to the 
org/nlogo/nvm/Syntax.java-321-	 * instruction itself.
org/nlogo/nvm/Syntax.java:322:	 * (e.g. "the second input", "the first argument on the right", etc)
org/nlogo/nvm/Syntax.java-323-	 * ~Forrest (11/10/2006)
org/nlogo/nvm/Syntax.java-324-	 * 
org/nlogo/nvm/Syntax.java-336-			if (argIndex == 0)
org/nlogo/nvm/Syntax.java-337-			{
org/nlogo/nvm/Syntax.java:338:				return "the input on the left";
org/nlogo/nvm/Syntax.java-339-			}
org/nlogo/nvm/Syntax.java-340-			else
org/nlogo/nvm/Syntax.java-341-			{
org/nlogo/nvm/Syntax.java:342:				return "the " + getOrdinalNumberText(argIndex) + " input on the right";
org/nlogo/nvm/Syntax.java-343-			}
org/nlogo/nvm/Syntax.java-344-		}
org/nlogo/nvm/Syntax.java-345-		else
org/nlogo/nvm/Syntax.java-346-		{
org/nlogo/nvm/Syntax.java:347:			return "the " + getOrdinalNumberText(argIndex + 1) + " input";
org/nlogo/nvm/Syntax.java-348-		}
org/nlogo/nvm/Syntax.java-349-	}
org/nlogo/nvm/Syntax.java-424-		else if( obj == null )
org/nlogo/nvm/Syntax.java-425-		{
org/nlogo/nvm/Syntax.java:426:			return "null" ;
org/nlogo/nvm/Syntax.java-427-		}
org/nlogo/nvm/Syntax.java-428-		else
org/nlogo/nvm/Syntax.java-435-	{
org/nlogo/nvm/Syntax.java-436-		String result = typeName( mask ) ;
org/nlogo/nvm/Syntax.java:437:		if( result.equals( "NOBODY" ) )
org/nlogo/nvm/Syntax.java-438-		{
org/nlogo/nvm/Syntax.java:439:			return "NOBODY" ;
org/nlogo/nvm/Syntax.java-440-		}
org/nlogo/nvm/Syntax.java:441:		else if( result.equals( "anything" ) )
org/nlogo/nvm/Syntax.java-442-		{
org/nlogo/nvm/Syntax.java-443-			return result ;
org/nlogo/nvm/Syntax.java-451-	public static String typeName( int mask )
org/nlogo/nvm/Syntax.java-452-	{
org/nlogo/nvm/Syntax.java:453:		String result = "(none)" ;
org/nlogo/nvm/Syntax.java-454-		if( typesAreCompatible( mask , TYPE_REPEATABLE ) )
org/nlogo/nvm/Syntax.java-455-		{
org/nlogo/nvm/Syntax.java-458-		if( typesAreCompatible( mask , TYPE_REFERENCE ) )
org/nlogo/nvm/Syntax.java-459-		{
org/nlogo/nvm/Syntax.java:460:			return "variable" ;
org/nlogo/nvm/Syntax.java-461-		}
org/nlogo/nvm/Syntax.java-462-		else if( ( mask & TYPE_BRACKETED ) == TYPE_BRACKETED )
org/nlogo/nvm/Syntax.java-463-		{
org/nlogo/nvm/Syntax.java:464:			result = "list or block" ;
org/nlogo/nvm/Syntax.java-465-			mask = subtractMasks( mask, TYPE_BRACKETED ) ;
org/nlogo/nvm/Syntax.java-466-		}
org/nlogo/nvm/Syntax.java-467-		else if( ( mask & TYPE_WILDCARD ) == TYPE_WILDCARD )
org/nlogo/nvm/Syntax.java-468-		{
org/nlogo/nvm/Syntax.java:469:			result = "anything" ;
org/nlogo/nvm/Syntax.java-470-			mask = subtractMasks( mask, TYPE_WILDCARD ) ;
org/nlogo/nvm/Syntax.java-471-		}
org/nlogo/nvm/Syntax.java-472-		else if( ( mask & TYPE_AGENT ) == TYPE_AGENT )
org/nlogo/nvm/Syntax.java-473-		{
org/nlogo/nvm/Syntax.java:474:			result = "agent" ;
org/nlogo/nvm/Syntax.java-475-			mask = subtractMasks( mask , TYPE_AGENT | TYPE_NOBODY ) ;
org/nlogo/nvm/Syntax.java-476-		}
org/nlogo/nvm/Syntax.java-477-		else if( typesAreCompatible( mask, TYPE_NUMBER ) )
org/nlogo/nvm/Syntax.java-478-		{
org/nlogo/nvm/Syntax.java:479:			result = "number" ;
org/nlogo/nvm/Syntax.java-480-			mask = subtractMasks( mask , TYPE_NUMBER ) ;
org/nlogo/nvm/Syntax.java-481-		}
org/nlogo/nvm/Syntax.java-482-		else if( typesAreCompatible( mask , TYPE_BOOLEAN ) )
org/nlogo/nvm/Syntax.java-483-		{
org/nlogo/nvm/Syntax.java:484:			result = "TRUE/FALSE" ;
org/nlogo/nvm/Syntax.java-485-			mask = subtractMasks( mask , TYPE_BOOLEAN ) ;
org/nlogo/nvm/Syntax.java-486-		}
org/nlogo/nvm/Syntax.java-487-		else if( typesAreCompatible( mask , TYPE_STRING ) )
org/nlogo/nvm/Syntax.java-488-		{
org/nlogo/nvm/Syntax.java:489:			result = "string" ;
org/nlogo/nvm/Syntax.java-490-			mask = subtractMasks( mask , TYPE_STRING ) ;
org/nlogo/nvm/Syntax.java-491-		}
org/nlogo/nvm/Syntax.java-492-		else if( typesAreCompatible( mask , TYPE_LIST ) )
org/nlogo/nvm/Syntax.java-493-		{
org/nlogo/nvm/Syntax.java:494:			result = "list" ;
org/nlogo/nvm/Syntax.java-495-			mask = subtractMasks( mask , TYPE_LIST ) ;
org/nlogo/nvm/Syntax.java-496-		}
org/nlogo/nvm/Syntax.java-497-		else if( ( mask & TYPE_AGENTSET ) == TYPE_AGENTSET )
org/nlogo/nvm/Syntax.java-498-		{
org/nlogo/nvm/Syntax.java:499:			result = "agentset" ;
org/nlogo/nvm/Syntax.java-500-			mask = subtractMasks( mask , TYPE_AGENTSET ) ;
org/nlogo/nvm/Syntax.java-501-		}
org/nlogo/nvm/Syntax.java-502-		else if( typesAreCompatible( mask , TYPE_TURTLESET ) )
org/nlogo/nvm/Syntax.java-503-		{
org/nlogo/nvm/Syntax.java:504:			result = "turtle agentset" ;
org/nlogo/nvm/Syntax.java-505-			mask = subtractMasks( mask , TYPE_TURTLESET ) ;
org/nlogo/nvm/Syntax.java-506-		} 
org/nlogo/nvm/Syntax.java-507-		else if( typesAreCompatible( mask , TYPE_PATCHSET ) )
org/nlogo/nvm/Syntax.java-508-		{
org/nlogo/nvm/Syntax.java:509:			result = "patch agentset" ;
org/nlogo/nvm/Syntax.java-510-			mask = subtractMasks( mask , TYPE_PATCHSET ) ;
org/nlogo/nvm/Syntax.java-511-		} 
org/nlogo/nvm/Syntax.java-512-		else if( typesAreCompatible( mask , TYPE_LINKSET ) )
org/nlogo/nvm/Syntax.java-513-		{
org/nlogo/nvm/Syntax.java:514:			result = "link agentset" ;
org/nlogo/nvm/Syntax.java-515-			mask = subtractMasks( mask , TYPE_LINKSET ) ;
org/nlogo/nvm/Syntax.java-516-		} 
org/nlogo/nvm/Syntax.java-517-		else if( typesAreCompatible( mask , TYPE_TURTLE ) )
org/nlogo/nvm/Syntax.java-518-		{
org/nlogo/nvm/Syntax.java:519:			result = "turtle" ;
org/nlogo/nvm/Syntax.java-520-			mask = subtractMasks( mask , TYPE_TURTLE | TYPE_NOBODY ) ;
org/nlogo/nvm/Syntax.java-521-		}
org/nlogo/nvm/Syntax.java-522-		else if( typesAreCompatible( mask , TYPE_PATCH ) )
org/nlogo/nvm/Syntax.java-523-		{
org/nlogo/nvm/Syntax.java:524:			result = "patch" ;
org/nlogo/nvm/Syntax.java-525-			mask = subtractMasks( mask , TYPE_PATCH | TYPE_NOBODY ) ;
org/nlogo/nvm/Syntax.java-526-		}
org/nlogo/nvm/Syntax.java-527-		else if( typesAreCompatible( mask , TYPE_LINK ) )
org/nlogo/nvm/Syntax.java-528-		{
org/nlogo/nvm/Syntax.java:529:			result = "link" ;
org/nlogo/nvm/Syntax.java-530-			mask = subtractMasks( mask , TYPE_LINK | TYPE_NOBODY ) ;
org/nlogo/nvm/Syntax.java-531-		}
org/nlogo/nvm/Syntax.java-532-		else if( typesAreCompatible( mask , TYPE_NOBODY ) )
org/nlogo/nvm/Syntax.java-533-		{
org/nlogo/nvm/Syntax.java:534:			result = "NOBODY" ;
org/nlogo/nvm/Syntax.java-535-			mask = subtractMasks( mask , TYPE_NOBODY ) ;
org/nlogo/nvm/Syntax.java-536-		}
org/nlogo/nvm/Syntax.java-537-		else if( typesAreCompatible( mask , TYPE_COMMAND_BLOCK ) )
org/nlogo/nvm/Syntax.java-538-		{
org/nlogo/nvm/Syntax.java:539:			result = "command block" ;
org/nlogo/nvm/Syntax.java-540-			mask = subtractMasks( mask , TYPE_COMMAND_BLOCK ) ;
org/nlogo/nvm/Syntax.java-541-		}
org/nlogo/nvm/Syntax.java-542-		else if( ( mask & TYPE_REPORTER_BLOCK ) == TYPE_REPORTER_BLOCK )
org/nlogo/nvm/Syntax.java-543-		{
org/nlogo/nvm/Syntax.java:544:			result = "reporter block" ;
org/nlogo/nvm/Syntax.java-545-			mask = subtractMasks( mask , TYPE_REPORTER_BLOCK ) ;
org/nlogo/nvm/Syntax.java-546-		}
org/nlogo/nvm/Syntax.java-547-		else if( typesAreCompatible( mask , TYPE_OTHER_BLOCK ) )
org/nlogo/nvm/Syntax.java-548-		{
org/nlogo/nvm/Syntax.java:549:			result = "different kind of block" ;
org/nlogo/nvm/Syntax.java-550-			mask = subtractMasks( mask , TYPE_REPORTER_BLOCK ) ;
org/nlogo/nvm/Syntax.java-551-		}
org/nlogo/nvm/Syntax.java-552-		else if( typesAreCompatible( mask , TYPE_BOOLEAN_BLOCK ) )
org/nlogo/nvm/Syntax.java-553-		{
org/nlogo/nvm/Syntax.java:554:			result = "TRUE/FALSE block" ;
org/nlogo/nvm/Syntax.java-555-			mask = subtractMasks( mask , TYPE_BOOLEAN_BLOCK ) ;
org/nlogo/nvm/Syntax.java-556-		}
org/nlogo/nvm/Syntax.java-557-		else if( typesAreCompatible( mask , TYPE_NUMBER_BLOCK ) )
org/nlogo/nvm/Syntax.java-558-		{
org/nlogo/nvm/Syntax.java:559:			result = "number block" ;
org/nlogo/nvm/Syntax.java-560-			mask = subtractMasks( mask , TYPE_NUMBER_BLOCK ) ;
org/nlogo/nvm/Syntax.java-561-		}
org/nlogo/nvm/Syntax.java-566-		else if( mask == Syntax.TYPE_OPTIONAL )
org/nlogo/nvm/Syntax.java-567-		{
org/nlogo/nvm/Syntax.java:568:			return result + " (optional)" ;
org/nlogo/nvm/Syntax.java-569-		}
org/nlogo/nvm/Syntax.java-570-		else
org/nlogo/nvm/Syntax.java-571-		{
org/nlogo/nvm/Syntax.java:572:			return result + " or " + typeName( mask ) ;
org/nlogo/nvm/Syntax.java-573-		}
org/nlogo/nvm/Syntax.java-574-	}
org/nlogo/nvm/Syntax.java-618-		// Sorry, probably should handle this better somehow.  ~Forrest (2/16/2007)
org/nlogo/nvm/Syntax.java-619-		throw new IllegalArgumentException
org/nlogo/nvm/Syntax.java:620:			("There was no Syntax type constant found for this class " + typeC);
org/nlogo/nvm/Syntax.java-621-	}
org/nlogo/nvm/Syntax.java-622-
org/nlogo/nvm/Syntax.java-626-		{
org/nlogo/nvm/Syntax.java-627-			case 'A': case 'E': case 'I': case 'O': case 'U':
org/nlogo/nvm/Syntax.java:628:				return "an " + str ;
org/nlogo/nvm/Syntax.java-629-			default:
org/nlogo/nvm/Syntax.java-630-				return "a " + str ;
org/nlogo/nvm/Syntax.java-670-		if( isRightAssociative() )
org/nlogo/nvm/Syntax.java-671-		{
org/nlogo/nvm/Syntax.java:672:			buf.append( " [RIGHT ASSOCIATIVE]" ) ;
org/nlogo/nvm/Syntax.java-673-		}
org/nlogo/nvm/Syntax.java-674-		if( switches )
org/nlogo/plot/Plot.scala-8-  import Plot._
org/nlogo/plot/Plot.scala-9-
org/nlogo/plot/Plot.scala:10:  override def toString = "Plot(" + name + ")"
org/nlogo/plot/Plot.scala-11-
org/nlogo/plot/Plot.scala-12-  var plotListener: Option[PlotListener] = None
org/nlogo/plot/Plot.scala-13-  def setPlotListener(plotListener:PlotListener){
org/nlogo/plot/Plot.scala:14:    if(plotListener == null) error("null plotListener")
org/nlogo/plot/Plot.scala-15-    this.plotListener = Some(plotListener) 
org/nlogo/plot/Plot.scala-16-  }
org/nlogo/plot/Plot.scala-37-  // take the first pen if there is no current pen set
org/nlogo/plot/Plot.scala-38-  def currentPen: Option[PlotPen] = _currentPen.orElse(pens.headOption)
org/nlogo/plot/Plot.scala:39:  def currentPenOrBust: PlotPen = currentPen.getOrElse(throw new PlotException("Plot '"+name+"' has no pens!"))
org/nlogo/plot/Plot.scala-40-  def currentPen_=(p: PlotPen): Unit = currentPen=(if(p==null) None else Some(p))
org/nlogo/plot/Plot.scala-41-  def currentPen_=(p: Option[PlotPen]): Unit = {
org/nlogo/plot/Plot.scala-130-  def saveString = {
org/nlogo/plot/Plot.scala-131-    import org.nlogo.api.StringUtils.escapeString
org/nlogo/plot/Plot.scala:132:    "\"" + escapeString(setupCode) + "\"" + " " + "\"" + escapeString(updateCode) + "\""
org/nlogo/plot/Plot.scala-133-  }
org/nlogo/plot/Plot.scala-134-  
org/nlogo/plot/Plot.scala-205-  def beginHistogram(pen:PlotPen){
org/nlogo/plot/Plot.scala-206-    if(pen.interval == 0){
org/nlogo/plot/Plot.scala:207:      throw new PlotException("You cannot histogram with a plot-pen-interval of 0.")
org/nlogo/plot/Plot.scala-208-    }
org/nlogo/plot/Plot.scala-209-    histogram = Some(new Histogram(xMin, xMax, pen.interval))
org/nlogo/plot/Plot.scala-213-  def beginHistogram(pen:PlotPen, bars:Array[Int]){
org/nlogo/plot/Plot.scala-214-    if(pen.interval == 0){
org/nlogo/plot/Plot.scala:215:      throw new PlotException("You cannot histogram with a plot-pen-interval of 0.")
org/nlogo/plot/Plot.scala-216-    }
org/nlogo/plot/Plot.scala-217-    histogram = Some(new Histogram(xMin, pen.interval, bars))
org/nlogo/plot/PlotExporter.scala-14-    writer.println(csv.data(plot.name))
org/nlogo/plot/PlotExporter.scala-15-    writer.println(csv.headerRow(Array(
org/nlogo/plot/PlotExporter.scala:16:      "x min", "x max", "y min", "y max",
org/nlogo/plot/PlotExporter.scala:17:      "autoplot?", "current pen",
org/nlogo/plot/PlotExporter.scala:18:      "legend open?",
org/nlogo/plot/PlotExporter.scala:19:      "number of pens")))
org/nlogo/plot/PlotExporter.scala-20-    writer.println(csv.dataRow(Array(
org/nlogo/plot/PlotExporter.scala-21-      double2Double(plot.xMin),
org/nlogo/plot/PlotExporter.scala-33-  private def exportPens(writer: java.io.PrintWriter) {
org/nlogo/plot/PlotExporter.scala-34-    writer.println(csv.headerRow(Array(
org/nlogo/plot/PlotExporter.scala:35:      "pen name", "pen down?", "mode", "interval",
org/nlogo/plot/PlotExporter.scala:36:      "color", "x")))
org/nlogo/plot/PlotExporter.scala-37-    for (pen <- plot.pens) {
org/nlogo/plot/PlotExporter.scala-38-      writer.println(csv.dataRow(Array(
org/nlogo/plot/PlotExporter.scala-60-    val pointHeaders = Buffer[String]()
org/nlogo/plot/PlotExporter.scala-61-    for (i <- 0 until numPens)
org/nlogo/plot/PlotExporter.scala:62:      pointHeaders += ("x", "y", "color", "pen down?")
org/nlogo/plot/PlotExporter.scala-63-    writer.println(csv.headerRow(pointHeaders.toArray))
org/nlogo/plot/PlotExporter.scala-64-
org/nlogo/plot/PlotLoader.scala-7-
org/nlogo/plot/PlotLoader.scala-8-  def parsePlot(widget: Array[String], plot: Plot, autoConverter: String => String) {
org/nlogo/plot/PlotLoader.scala:9:    val (plotLines, penLines) = widget.toList.span(_ != "PENS")
org/nlogo/plot/PlotLoader.scala-10-    def convert(os:Option[String]) = os.map(autoConverter).getOrElse("")
org/nlogo/plot/PlotLoader.scala-11-
org/nlogo/plot/PlotLoader.scala-28-        case _ =>
org/nlogo/plot/PlotLoader.scala-29-          // 1, or 3 or more bits of code...error.
org/nlogo/plot/PlotLoader.scala:30:          error("Plot '" + plot.name + "' contains invalid setup and/or update code: " + plotLines(14))
org/nlogo/plot/PlotLoader.scala-31-      }
org/nlogo/plot/PlotLoader.scala-32-    }
org/nlogo/plot/PlotLoader.scala-35-    // deal with that here.
org/nlogo/plot/PlotLoader.scala-36-    val doubleCheckedPenLines = penLines match {
org/nlogo/plot/PlotLoader.scala:37:      case "PENS" :: xs => xs
org/nlogo/plot/PlotLoader.scala-38-      case _ => Nil
org/nlogo/plot/PlotLoader.scala-39-    }
org/nlogo/plot/PlotLoader.scala-53-  }
org/nlogo/plot/PlotLoader.scala-54-
org/nlogo/plot/PlotLoader.scala-57-  private[plot] case class PenSpec(name: String, interval: Double, mode: Int, color: Int, inLegend: Boolean,
org/nlogo/plot/PlotLoader.scala-65-    // part of the result, so we have to shuffle a token from one list to the other
org/nlogo/plot/PlotLoader.scala-66-    val (nameTokens, moreTokens) =
org/nlogo/plot/PlotLoader.scala:67:    spanPlusOne(tokens)(tok => !tok.endsWith("\"") || tok.endsWith("\\\""))
org/nlogo/plot/PlotLoader.scala-68-
org/nlogo/plot/PlotLoader.scala-69-    // dropRight drops the closing quote
org/nlogo/plot/PlotLoader.scala-75-      case List(interval, mode, color, inLegend, _*) =>
org/nlogo/plot/PlotLoader.scala-76-        if (!PlotPen.isValidPlotPenMode(mode.toInt))
org/nlogo/plot/PlotLoader.scala:77:          error(mode + " is not a valid plot pen mode")
org/nlogo/plot/PlotLoader.scala-78-        (interval.toDouble, mode.toInt, color.toInt, inLegend.toBoolean)
org/nlogo/plot/PlotLoader.scala-79-      case _ =>
org/nlogo/plot/PlotLoader.scala:80:        error("bad line: \"" + s + "\"")
org/nlogo/plot/PlotLoader.scala-81-    }
org/nlogo/plot/PlotLoader.scala-82-
org/nlogo/plot/PlotLoader.scala-100-    }
org/nlogo/plot/PlotLoader.scala-101-    def isCloseQuote(tok: String) =
org/nlogo/plot/PlotLoader.scala:102:      tok.endsWith("\"") && !tok.endsWith("\\\"")
org/nlogo/plot/PlotLoader.scala-103-    def recurse(toks: List[String]): List[String] =
org/nlogo/plot/PlotLoader.scala-104-      if(toks.isEmpty) Nil
org/nlogo/plot/PlotManager.scala-16-  @throws(classOf[PlotException])
org/nlogo/plot/PlotManager.scala-17-  def currentPlotOrBust = currentPlotOption.getOrElse({
org/nlogo/plot/PlotManager.scala:18:    throw new PlotException("There is no current plot. Please select a current plot using " +
org/nlogo/plot/PlotManager.scala:19:            "the set-current-plot command.")})
org/nlogo/plot/PlotManager.scala-20-
org/nlogo/plot/PlotManager.scala-21-  def setCurrentPlot(plot: Plot) {currentPlotOption = Some(plot)}
org/nlogo/plot/PlotManager.scala-41-  // used for letting the user choose which plot to export
org/nlogo/plot/PlotManager.scala-42-  def getPlotNames: Array[String] = _plots.map(_.name).toArray
org/nlogo/plot/PlotManager.scala:43:  def nextName = Stream.from(1).map("plot " + _).find(getPlot(_) == null).get
org/nlogo/plot/PlotManager.scala-44-
org/nlogo/plot/PlotManager.scala-45-  def forgetPlot(goner: Plot) {
org/nlogo/plot/PlotManager.scala-77-
org/nlogo/plot/PlotManager.scala-78-    def procName(setup:Boolean, pen:Option[PlotPen] = None) = {
org/nlogo/plot/PlotManager.scala:79:      "plot '" + plot.name + "' " + (pen.map("pen '" + _.name + "' ").getOrElse("")) +
org/nlogo/plot/PlotManager.scala:80:              (if(setup) "setup code" else "update code") 
org/nlogo/plot/PlotManager.scala-81-    }
org/nlogo/plot/PlotManager.scala-82-
org/nlogo/plot/PlotManager.scala-137-    def selector(r:Results):CompilationResult
org/nlogo/plot/PlotManager.scala-138-  }
org/nlogo/plot/PlotManager.scala:139:  object Update extends CodeType("update"){
org/nlogo/plot/PlotManager.scala-140-    def selector(r:Results):CompilationResult = r.update
org/nlogo/plot/PlotManager.scala-141-  }
org/nlogo/plot/PlotManager.scala:142:  object Setup extends CodeType("setup"){
org/nlogo/plot/PlotManager.scala-143-    def selector(r:Results):CompilationResult = r.setup
org/nlogo/plot/PlotManager.scala-144-  }
org/nlogo/plot/PlotPainter.scala-65-    var color = 0
org/nlogo/plot/PlotPainter.scala-69-    var (minY, maxY) = (0, 0)
org/nlogo/plot/PlotPen.scala-12-  val BAR_MODE = 1
org/nlogo/plot/PlotPen.scala-13-  val POINT_MODE = 2
org/nlogo/plot/PlotPen.scala:14:  private implicit val i18nPrefix = I18N.Prefix("edit.plot.pen")
org/nlogo/plot/PlotPen.scala:15:  val PLOT_PEN_MODES = scala.List(I18N.gui("mode.line"), I18N.gui("mode.bar"), I18N.gui("mode.point"))
org/nlogo/plot/PlotPen.scala-16-
org/nlogo/plot/PlotPen.scala-17-  def getPlotPenModeNames = PLOT_PEN_MODES.toArray
org/nlogo/plot/PlotPen.scala-19-}
org/nlogo/plot/PlotPen.scala-20-
org/nlogo/plot/PlotPen.scala-25-@serializable @SerialVersionUID(0)
org/nlogo/plot/PlotPen.scala-44-  hardReset()
org/nlogo/plot/PlotPen.scala-45-  plot.addPen(this)
org/nlogo/plot/PlotPen.scala:46:  override def toString = "PlotPen("+name+", "+plot+")"
org/nlogo/plot/PlotPen.scala-47-
org/nlogo/plot/PlotPen.scala-48-  var points: Buffer[PlotPoint] = Buffer()
org/nlogo/plot/PlotPen.scala-87-  def saveString = {
org/nlogo/plot/PlotPen.scala-88-    import org.nlogo.api.StringUtils.escapeString
org/nlogo/plot/PlotPen.scala:89:    "\"" + escapeString(setupCode) + "\"" + " " + "\"" + escapeString(updateCode) + "\""
org/nlogo/plot/PlotPen.scala-90-  }
org/nlogo/plot/PlotPen.scala-91-
org/nlogo/prim/_anyother.java-15-			( new int[] { Syntax.TYPE_AGENTSET } ,
org/nlogo/prim/_anyother.java-16-			  Syntax.TYPE_BOOLEAN ,
org/nlogo/prim/_anyother.java:17:			  "-TPL" ) ;
org/nlogo/prim/_anyother.java-18-	}
org/nlogo/prim/_anyother.java-19-	@Override public Object report( Context context )
org/nlogo/prim/_anyotherwith.java-16-		return Syntax.reporterSyntax
org/nlogo/prim/_anyotherwith.java-17-			( new int[] { Syntax.TYPE_AGENTSET , Syntax.TYPE_BOOLEAN_BLOCK } ,
org/nlogo/prim/_anyotherwith.java:18:			  Syntax.TYPE_BOOLEAN , "-TPL" ,
org/nlogo/prim/_anyotherwith.java-19-			  "?" ) ;  // takes reporter block of unknown agent type
org/nlogo/prim/_anyotherwith.java-20-	}
org/nlogo/prim/_anyotherwith.java-40-			{
org/nlogo/prim/_anyotherwith.java-41-				throw new EngineException
org/nlogo/prim/_anyotherwith.java:42:					( context , this , displayName() + " expected a true/false value from " +
org/nlogo/prim/_anyotherwith.java-43-					  Dump.logoObject( tester ) +
org/nlogo/prim/_anyotherwith.java:44:					  ", but got "+ Dump.logoObject( value ) + " instead" ) ;
org/nlogo/prim/_anyotherwith.java-45-			}
org/nlogo/prim/_anyotherwith.java-46-			if( ( ( Boolean ) value ).booleanValue() )
org/nlogo/prim/_anywith.java-17-		return Syntax.reporterSyntax
org/nlogo/prim/_anywith.java-18-			( new int[] { Syntax.TYPE_AGENTSET , Syntax.TYPE_BOOLEAN_BLOCK } ,
org/nlogo/prim/_anywith.java:19:			  Syntax.TYPE_BOOLEAN , "OTPL" , "?" ) ;
org/nlogo/prim/_anywith.java-20-	}
org/nlogo/prim/_anywith.java-21-	@Override public Object report( Context context ) throws LogoException
org/nlogo/prim/_anywith.java-35-			{
org/nlogo/prim/_anywith.java-36-				throw new EngineException
org/nlogo/prim/_anywith.java:37:					( context , this , "WITH expected a true/false value from " + Dump.logoObject( tester ) + ", " +
org/nlogo/prim/_anywith.java:38:					  "but got "+ Dump.logoObject( value ) + " instead" ) ;
org/nlogo/prim/_anywith.java-39-			}
org/nlogo/prim/_anywith.java-40-			if( ( ( Boolean ) value ).booleanValue() )
org/nlogo/prim/_ask.java-22-			( new int[] { Syntax.TYPE_AGENTSET | Syntax.TYPE_AGENT ,
org/nlogo/prim/_ask.java-23-						  Syntax.TYPE_COMMAND_BLOCK } ,
org/nlogo/prim/_ask.java:24:				"OTPL" , "?" , true ) ;
org/nlogo/prim/_ask.java-25-	}
org/nlogo/prim/_ask.java-26-	@Override
org/nlogo/prim/_ask.java-47-				{
org/nlogo/prim/_ask.java-48-					throw new EngineException
org/nlogo/prim/_ask.java:49:						( context , this , "only the observer can ASK the set of all turtles" ) ;
org/nlogo/prim/_ask.java-50-				}
org/nlogo/prim/_ask.java-51-				if( agentset == world.patches() )
org/nlogo/prim/_ask.java-52-				{
org/nlogo/prim/_ask.java-53-					throw new EngineException
org/nlogo/prim/_ask.java:54:						( context , this , "only the observer can ASK the set of all patches" ) ;
org/nlogo/prim/_ask.java-55-				}
org/nlogo/prim/_ask.java-56-			}
org/nlogo/prim/_ask.java-62-			{
org/nlogo/prim/_ask.java-63-				throw new EngineException
org/nlogo/prim/_ask.java:64:					( context , this , "that agent is dead" ) ;
org/nlogo/prim/_ask.java-65-			}
org/nlogo/prim/_ask.java-66-			agentset = new ArrayAgentSet( agent.getAgentClass() , 1, false , world ) ;
org/nlogo/prim/_ask.java-82-			{
org/nlogo/prim/_ask.java-83-				throw new EngineException
org/nlogo/prim/_ask.java:84:					( context , this , "only the observer can ASK the set of all turtles" ) ;
org/nlogo/prim/_ask.java-85-			}
org/nlogo/prim/_ask.java-86-			if( agentset == world.patches() )
org/nlogo/prim/_ask.java-87-			{
org/nlogo/prim/_ask.java-88-				throw new EngineException
org/nlogo/prim/_ask.java:89:					( context , this , "only the observer can ASK the set of all patches" ) ;
org/nlogo/prim/_ask.java-90-			}
org/nlogo/prim/_ask.java-91-		}
org/nlogo/prim/_ask.java-99-		{
org/nlogo/prim/_ask.java-100-			throw new EngineException
org/nlogo/prim/_ask.java:101:				( context , this , "that agent is dead" ) ;
org/nlogo/prim/_ask.java-102-		}
org/nlogo/prim/_ask.java-103-		AgentSet agentset = new ArrayAgentSet( agent.getAgentClass() , 1, false , world ) ;
org/nlogo/prim/_askconcurrent.java-16-		return Syntax.commandSyntax
org/nlogo/prim/_askconcurrent.java-17-			( new int[] { Syntax.TYPE_AGENTSET , Syntax.TYPE_COMMAND_BLOCK } ,
org/nlogo/prim/_askconcurrent.java:18:			  "OTPL" , "?" , true ) ;
org/nlogo/prim/_askconcurrent.java-19-	}
org/nlogo/prim/_askconcurrent.java-20-	@Override
org/nlogo/prim/_askconcurrent.java-32-			{
org/nlogo/prim/_askconcurrent.java-33-				throw new EngineException
org/nlogo/prim/_askconcurrent.java:34:					( context , this , "only the observer can ASK the set of all turtles" ) ;
org/nlogo/prim/_askconcurrent.java-35-			}
org/nlogo/prim/_askconcurrent.java-36-			if( agentset == world.patches() )
org/nlogo/prim/_askconcurrent.java-37-			{
org/nlogo/prim/_askconcurrent.java-38-				throw new EngineException
org/nlogo/prim/_askconcurrent.java:39:					( context , this , "only the observer can ASK the set of all patches" ) ;
org/nlogo/prim/_askconcurrent.java-40-			}
org/nlogo/prim/_askconcurrent.java-41-		}
org/nlogo/prim/_breedat.java-19-			( new int[] { Syntax.TYPE_NUMBER , Syntax.TYPE_NUMBER } ,
org/nlogo/prim/_breedat.java-20-			  Syntax.TYPE_TURTLESET ,
org/nlogo/prim/_breedat.java:21:			  "-TP-" ) ;
org/nlogo/prim/_breedat.java-22-	}
org/nlogo/prim/_breedat.java-23-	@Override
org/nlogo/prim/_breedhere.java-19-	@Override public Syntax getSyntax()
org/nlogo/prim/_breedhere.java-20-	{
org/nlogo/prim/_breedhere.java:21:		return Syntax.reporterSyntax( Syntax.TYPE_TURTLESET , "-TP-" ) ;
org/nlogo/prim/_breedhere.java-22-	}
org/nlogo/prim/_breedhere.java-23-	@Override public String toString()
org/nlogo/prim/_breedon.java-49-			if( turtle.id == -1 )
org/nlogo/prim/_breedon.java-50-			{
org/nlogo/prim/_breedon.java:51:				throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/_breedon.java-52-			}
org/nlogo/prim/_breedon.java-53-			for( Turtle t : turtle.getPatchHere().turtlesHere() )
org/nlogo/prim/_breedon.java-162-			if( turtle.id == -1 )
org/nlogo/prim/_breedon.java-163-			{
org/nlogo/prim/_breedon.java:164:				throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/_breedon.java-165-			}
org/nlogo/prim/_breedon.java-166-			for( Turtle t : turtle.getPatchHere().turtlesHere() )
org/nlogo/prim/_breedon.java-200-		if( turtle.id == -1 )
org/nlogo/prim/_breedon.java-201-		{
org/nlogo/prim/_breedon.java:202:			throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/_breedon.java-203-		}
org/nlogo/prim/_breedon.java-204-		for( Turtle t : turtle.getPatchHere().turtlesHere() )
org/nlogo/prim/_breedsingular.java-39-		{
org/nlogo/prim/_breedsingular.java-40-			throw new EngineException
org/nlogo/prim/_breedsingular.java:41:				( context , this , idDouble + " is not an integer" ) ;
org/nlogo/prim/_breedsingular.java-42-		}
org/nlogo/prim/_breedsingular.java-43-		Turtle turtle = world.getTurtle( id ) ;
org/nlogo/prim/_breedsingular.java-51-			throw new EngineException
org/nlogo/prim/_breedsingular.java-52-				( context , this ,
org/nlogo/prim/_breedsingular.java:53:				  turtle + " is not a " + world.getBreedSingular( breed ) ) ;
org/nlogo/prim/_breedsingular.java-54-		}
org/nlogo/prim/_breedsingular.java-55-		return turtle ;
org/nlogo/prim/_breedvariableof.java-37-			{
org/nlogo/prim/_breedvariableof.java-38-				throw new EngineException
org/nlogo/prim/_breedvariableof.java:39:					( context , this , "that turtle is dead" ) ;
org/nlogo/prim/_breedvariableof.java-40-			}
org/nlogo/prim/_breedvariableof.java-41-			try
org/nlogo/prim/_call.java-8-import org.nlogo.nvm.Context;
org/nlogo/prim/_call.java-9-
org/nlogo/prim/_callreport.java-9-import org.nlogo.nvm.Context;
org/nlogo/prim/_callreport.java-45-	    {
org/nlogo/prim/_callreport.java-46-			throw new EngineException
org/nlogo/prim/_callreport.java:47:				( context , this , "the " + procedure.name + " procedure failed to report a result" ) ;
org/nlogo/prim/_callreport.java-48-	    }
org/nlogo/prim/_callreport.java-49-		return result ;
org/nlogo/prim/_conststring.java-19-	@Override public String toString()
org/nlogo/prim/_conststring.java-20-	{
org/nlogo/prim/_conststring.java:21:		return super.toString() + ":\"" + value + "\"" ;
org/nlogo/prim/_conststring.java-22-	}
org/nlogo/prim/_conststring.java-23-	@Override public Object report( Context context )
org/nlogo/prim/_countother.java-13-		return Syntax.reporterSyntax
org/nlogo/prim/_countother.java-14-			( new int[] { Syntax.TYPE_AGENTSET } ,
org/nlogo/prim/_countother.java:15:			  Syntax.TYPE_NUMBER , "-TPL" ) ;
org/nlogo/prim/_countother.java-16-	}
org/nlogo/prim/_countother.java-17-	@Override public Object report( Context context )
org/nlogo/prim/_countotherwith.java-17-		return Syntax.reporterSyntax
org/nlogo/prim/_countotherwith.java-18-			( new int[] { Syntax.TYPE_AGENTSET , Syntax.TYPE_BOOLEAN_BLOCK } ,
org/nlogo/prim/_countotherwith.java:19:			  Syntax.TYPE_NUMBER , "-TPL" ,
org/nlogo/prim/_countotherwith.java-20-			  "?" ) ;  // takes reporter block of unknown agent type
org/nlogo/prim/_countotherwith.java-21-	}
org/nlogo/prim/_countotherwith.java-41-			{
org/nlogo/prim/_countotherwith.java-42-				throw new EngineException
org/nlogo/prim/_countotherwith.java:43:					( context , this , displayName() + " expected a true/false value from " +
org/nlogo/prim/_countotherwith.java-44-					  Dump.logoObject( tester ) +
org/nlogo/prim/_countotherwith.java:45:					  ", but got "+ Dump.logoObject( value ) + " instead" ) ;
org/nlogo/prim/_countotherwith.java-46-			}
org/nlogo/prim/_countotherwith.java-47-			if( ( ( Boolean ) value ).booleanValue() )
org/nlogo/prim/_countwith.java-16-		return Syntax.reporterSyntax
org/nlogo/prim/_countwith.java-17-			( new int[] { Syntax.TYPE_AGENTSET , Syntax.TYPE_BOOLEAN_BLOCK } ,
org/nlogo/prim/_countwith.java:18:			  Syntax.TYPE_NUMBER , "OTPL" , "?" ) ;
org/nlogo/prim/_countwith.java-19-	}
org/nlogo/prim/_countwith.java-20-	@Override public Object report( Context context ) throws LogoException
org/nlogo/prim/_countwith.java-38-				throw new EngineException
org/nlogo/prim/_countwith.java-39-					( context , this ,
org/nlogo/prim/_countwith.java:40:					  displayName() + " expected a true/false value from " +
org/nlogo/prim/_countwith.java-41-					  Dump.logoObject( tester ) + ", " +
org/nlogo/prim/_countwith.java:42:					  "but got "+ Dump.logoObject( value ) +
org/nlogo/prim/_countwith.java:43:					  " instead" ) ;
org/nlogo/prim/_countwith.java-44-			}
org/nlogo/prim/_countwith.java-45-			if( ( (Boolean) value ).booleanValue() )
org/nlogo/prim/_createlinkfrom.java-34-	public String toString()
org/nlogo/prim/_createlinkfrom.java-35-	{
org/nlogo/prim/_createlinkfrom.java:36:		return super.toString() + ":" + breedName + ",+" + offset ;
org/nlogo/prim/_createlinkfrom.java-37-	}
org/nlogo/prim/_createlinkfrom.java-38-	@Override
org/nlogo/prim/_createlinkfrom.java-54-				throw new EngineException
org/nlogo/prim/_createlinkfrom.java-55-					( context , this ,
org/nlogo/prim/_createlinkfrom.java:56:					  "A turtle cannot link to itself." ) ; 
org/nlogo/prim/_createlinkfrom.java-57-			}
org/nlogo/prim/_createlinkfrom.java-58-			if( src.id != -1 && dest.id != -1 )
org/nlogo/prim/_createlinksfrom.java-34-	public String toString()
org/nlogo/prim/_createlinksfrom.java-35-	{
org/nlogo/prim/_createlinksfrom.java:36:		return super.toString() + ":" + breedName + ",+" + offset ;
org/nlogo/prim/_createlinksfrom.java-37-	}
org/nlogo/prim/_createlinksfrom.java-38-	@Override
org/nlogo/prim/_createlinksfrom.java-61-					throw new EngineException
org/nlogo/prim/_createlinksfrom.java-62-						( context , this ,
org/nlogo/prim/_createlinksfrom.java:63:						  "A turtle cannot link to itself." ) ; 
org/nlogo/prim/_createlinksfrom.java-64-				}
org/nlogo/prim/_createlinksfrom.java-65-				if( src.id != -1 && dest.id != -1 )
org/nlogo/prim/_createlinksto.java-34-	public String toString()
org/nlogo/prim/_createlinksto.java-35-	{
org/nlogo/prim/_createlinksto.java:36:		return super.toString() + ":" + breedName + ",+" + offset ;
org/nlogo/prim/_createlinksto.java-37-	}
org/nlogo/prim/_createlinksto.java-38-	@Override
org/nlogo/prim/_createlinksto.java-61-					throw new EngineException
org/nlogo/prim/_createlinksto.java-62-						( context , this ,
org/nlogo/prim/_createlinksto.java:63:						  "A turtle cannot link to itself." ) ; 
org/nlogo/prim/_createlinksto.java-64-				}
org/nlogo/prim/_createlinksto.java-65-				if( src.id != -1 && dest.id != -1 )
org/nlogo/prim/_createlinkswith.java-34-	public String toString()
org/nlogo/prim/_createlinkswith.java-35-	{
org/nlogo/prim/_createlinkswith.java:36:		return super.toString() + ":" + breedName + ",+" + offset ;
org/nlogo/prim/_createlinkswith.java-37-	}
org/nlogo/prim/_createlinkswith.java-38-	@Override
org/nlogo/prim/_createlinkswith.java-61-					throw new EngineException
org/nlogo/prim/_createlinkswith.java-62-					( context , this ,
org/nlogo/prim/_createlinkswith.java:63:					  "A turtle cannot link to itself." ) ; 
org/nlogo/prim/_createlinkswith.java-64-				}
org/nlogo/prim/_createlinkswith.java-65-				if( src.id != -1 && dest.id != -1 )
org/nlogo/prim/_createlinkto.java-34-	public String toString()
org/nlogo/prim/_createlinkto.java-35-	{
org/nlogo/prim/_createlinkto.java:36:		return super.toString() + ":" + breedName + ",+" + offset ;
org/nlogo/prim/_createlinkto.java-37-	}
org/nlogo/prim/_createlinkto.java-38-	@Override
org/nlogo/prim/_createlinkto.java-56-				throw new EngineException
org/nlogo/prim/_createlinkto.java-57-					( context , this ,
org/nlogo/prim/_createlinkto.java:58:					  "A turtle cannot link to itself." ) ; 
org/nlogo/prim/_createlinkto.java-59-			}
org/nlogo/prim/_createlinkto.java-60-			if( src.id != -1 && dest.id != -1 )
org/nlogo/prim/_createlinkwith.java-34-	public String toString()
org/nlogo/prim/_createlinkwith.java-35-	{
org/nlogo/prim/_createlinkwith.java:36:		return super.toString() + ":" + breedName + ",+" + offset ;
org/nlogo/prim/_createlinkwith.java-37-	}
org/nlogo/prim/_createlinkwith.java-38-	@Override
org/nlogo/prim/_createlinkwith.java-54-				throw new EngineException
org/nlogo/prim/_createlinkwith.java-55-					( context , this ,
org/nlogo/prim/_createlinkwith.java:56:					  "A turtle cannot link to itself." ) ; 
org/nlogo/prim/_createlinkwith.java-57-			}
org/nlogo/prim/_createlinkwith.java-58-			if( src.id > dest.id )
org/nlogo/prim/_createorderedturtles.java-34-	public String toString()
org/nlogo/prim/_createorderedturtles.java-35-	{
org/nlogo/prim/_createorderedturtles.java:36:		return super.toString() + ":" + breedName + ",+" + offset ;
org/nlogo/prim/_createorderedturtles.java-37-	}
org/nlogo/prim/_createorderedturtles.java-38-	@Override
org/nlogo/prim/_createturtles.java-32-	public String toString()
org/nlogo/prim/_createturtles.java-33-	{
org/nlogo/prim/_createturtles.java:34:		return super.toString() + ":" + breedName + ",+" + offset ;
org/nlogo/prim/_createturtles.java-35-	}
org/nlogo/prim/_createturtles.java-36-	@Override
org/nlogo/prim/_diffuse.java-41-		{
org/nlogo/prim/_diffuse.java-42-			throw new EngineException
org/nlogo/prim/_diffuse.java:43:				( context , this , diffuseparam + " is not in the range 0.0 to 1.0" ) ;
org/nlogo/prim/_diffuse.java-44-		}
org/nlogo/prim/_diffuse.java-45-		try
org/nlogo/prim/_diffuse.java-56-			throw new EngineException
org/nlogo/prim/_diffuse.java-57-				( context , this , 
org/nlogo/prim/_diffuse.java:58:				  ex.patch() + " should contain a number in the " + world.patchesOwnNameAt( vn ) +
org/nlogo/prim/_diffuse.java:59:				  " variable, but contains " +
org/nlogo/prim/_diffuse.java-60-				  ( value instanceof org.nlogo.api.Nobody
org/nlogo/prim/_diffuse.java:61:					? "NOBODY"
org/nlogo/prim/_diffuse.java:62:					: "the " + Syntax.typeName(value) + " " + Dump.logoObject( value ) ) +
org/nlogo/prim/_diffuse.java:63:				  " instead" ) ;
org/nlogo/prim/_diffuse.java-64-		}
org/nlogo/prim/_diffuse.java-65-		context.ip = next ;
org/nlogo/prim/_diffuse4.java-40-		{
org/nlogo/prim/_diffuse4.java-41-			throw new EngineException
org/nlogo/prim/_diffuse4.java:42:				( context , this , diffuseparam + " is not in the range 0.0 to 1.0" ) ;
org/nlogo/prim/_diffuse4.java-43-		}
org/nlogo/prim/_diffuse4.java-44-		try
org/nlogo/prim/_diffuse4.java-52-		catch( UnsupportedOperationException e )
org/nlogo/prim/_diffuse4.java-53-		{
org/nlogo/prim/_diffuse4.java:54:			throw new EngineException( context , this , "Diffuse4 is not supported in 3D" ) ;
org/nlogo/prim/_diffuse4.java-55-		}
org/nlogo/prim/_diffuse4.java-56-		catch( PatchException e )
org/nlogo/prim/_diffuse4.java-58-			Object value = e.patch().getPatchVariable( vn ) ;
org/nlogo/prim/_diffuse4.java-59-			throw new EngineException
org/nlogo/prim/_diffuse4.java:60:				( context , this , e.patch() + " should contain a number in the " + world.patchesOwnNameAt( vn ) +
org/nlogo/prim/_diffuse4.java:61:				  " variable, but contains " +
org/nlogo/prim/_diffuse4.java-62-				  ( value instanceof org.nlogo.api.Nobody
org/nlogo/prim/_diffuse4.java:63:					? "NOBODY"
org/nlogo/prim/_diffuse4.java:64:					: "the " + Syntax.typeName(value) + " " + Dump.logoObject( value ) ) +
org/nlogo/prim/_diffuse4.java:65:				  " instead" ) ;
org/nlogo/prim/_diffuse4.java-66-		}
org/nlogo/prim/_diffuse4.java-67-		context.ip = next ;
org/nlogo/prim/_extern.java-66-			LogoException le =
org/nlogo/prim/_extern.java-67-				new EngineException
org/nlogo/prim/_extern.java:68:				( context , this , "Extension exception: " + ex.getMessage() ) ;
org/nlogo/prim/_extern.java-69-			// it might be better to use the Java 1.4 setCause() stuff, for
org/nlogo/prim/_extern.java-70-			// the long term... but then i think the handler would have to
org/nlogo/prim/_externreport.java-62-		{
org/nlogo/prim/_externreport.java-63-			EngineException ee =
org/nlogo/prim/_externreport.java:64:				new EngineException( context , this , "Extension exception: "
org/nlogo/prim/_externreport.java-65-									 + ex.getMessage() ) ;
org/nlogo/prim/_externreport.java-66-			// it might be better to use the Java 1.4 setCause() stuff, for
org/nlogo/prim/_fastrecurse.java-36-		{
org/nlogo/prim/_fastrecurse.java-37-			// if we're inside an ask inside the current procedure, then we have
org/nlogo/prim/_fastrecurse.java:38:			// to do normal recursion, not "fast" tail recursion - ST 11/17/04
org/nlogo/prim/_fastrecurse.java-39-			original.perform( context ) ;
org/nlogo/prim/_fastrecurse.java-40-		}
org/nlogo/prim/_foreach.java-16-{
org/nlogo/prim/_foreach.java-17-	private static final String FOREACH_SPANS_AGENTS =
org/nlogo/prim/_foreach.java:18:		"FOREACH is not allowed directly inside a concurrent ask.  "
org/nlogo/prim/_foreach.java:19:		+ "Use WITHOUT-INTERRUPTION around the FOREACH, "
org/nlogo/prim/_foreach.java:20:		+ "or place the FOREACH in a separate procedure." ;
org/nlogo/prim/_foreach.java-21-	public int vn ;
org/nlogo/prim/_foreach.java-22-	@Override
org/nlogo/prim/_foreach.java-35-	public String toString()
org/nlogo/prim/_foreach.java-36-	{
org/nlogo/prim/_foreach.java:37:		return super.toString() + ":" + vn + ",+" + offset ;
org/nlogo/prim/_foreach.java-38-	}
org/nlogo/prim/_foreach.java-39-	@Override
org/nlogo/prim/_foreach.java-61-				throw new EngineException
org/nlogo/prim/_foreach.java-62-					( context , this ,
org/nlogo/prim/_foreach.java:63:					  "All the list arguments to FOREACH must be the same length." ) ;
org/nlogo/prim/_foreach.java-64-			}
org/nlogo/prim/_foreach.java-65-			iters[ i ] = list.iterator() ;
org/nlogo/prim/_greaterthan.java-54-		throw new EngineException
org/nlogo/prim/_greaterthan.java-55-			( context , this , 
org/nlogo/prim/_greaterthan.java:56:			  "the > operator can only be used on two numbers, " 
org/nlogo/prim/_greaterthan.java:57:			  + "two strings, or two agents of the same type, " +
org/nlogo/prim/_greaterthan.java:58:			  "but not on " + Syntax.aTypeName( o1 ) + " and " + Syntax.aTypeName( o2 ) ) ;
org/nlogo/prim/_greaterthan.java-59-	}
org/nlogo/prim/_greaterthan.java-60-	public boolean report_2( Context context , String arg0 , String arg1 )
org/nlogo/prim/_greaterthan.java-86-		throw new EngineException
org/nlogo/prim/_greaterthan.java-87-			( context , this , 
org/nlogo/prim/_greaterthan.java:88:			  "the > operator can only be used on two numbers, " 
org/nlogo/prim/_greaterthan.java:89:			  + "two strings, or two agents of the same type, " +
org/nlogo/prim/_greaterthan.java:90:			  "but not on a " + Syntax.aTypeName( arg0 ) + " and " +
org/nlogo/prim/_greaterthan.java-91-			  Syntax.aTypeName( arg1 ) ) ;
org/nlogo/prim/_greaterthan.java-92-	}
org/nlogo/prim/_greaterthan.java-99-		throw new EngineException
org/nlogo/prim/_greaterthan.java-100-			( context , this , 
org/nlogo/prim/_greaterthan.java:101:			  "the > operator can only be used on two numbers, " 
org/nlogo/prim/_greaterthan.java:102:			  + "two strings, or two agents of the same type, " +
org/nlogo/prim/_greaterthan.java:103:			  "but not on a " + Syntax.aTypeName( arg0 ) + " and " +
org/nlogo/prim/_greaterthan.java-104-			  Syntax.aTypeName( arg1 ) ) ;
org/nlogo/prim/_greaterthan.java-105-	}
org/nlogo/prim/_hatch.java-32-	public String toString()
org/nlogo/prim/_hatch.java-33-	{
org/nlogo/prim/_hatch.java:34:		return super.toString() + ":" + breedName + ",+" + offset ;
org/nlogo/prim/_hatch.java-35-	}
org/nlogo/prim/_hatch.java-36-	@Override
org/nlogo/prim/_lessthan.java-54-		throw new EngineException
org/nlogo/prim/_lessthan.java-55-			( context , this , 
org/nlogo/prim/_lessthan.java:56:			  "the < operator can only be used on two numbers, " 
org/nlogo/prim/_lessthan.java:57:			  + "two strings, or two agents of the same type, " +
org/nlogo/prim/_lessthan.java:58:			  "but not on " + Syntax.aTypeName( o1 ) + " and " + Syntax.aTypeName( o2 ) ) ;
org/nlogo/prim/_lessthan.java-59-	}
org/nlogo/prim/_lessthan.java-60-	public boolean report_2( Context context , String arg0 , String arg1 )
org/nlogo/prim/_lessthan.java-86-		throw new EngineException
org/nlogo/prim/_lessthan.java-87-			( context , this , 
org/nlogo/prim/_lessthan.java:88:			  "the < operator can only be used on two numbers, " 
org/nlogo/prim/_lessthan.java:89:			  + "two strings, or two agents of the same type, " +
org/nlogo/prim/_lessthan.java:90:			  "but not on a " + Syntax.aTypeName( arg0 ) + " and " +
org/nlogo/prim/_lessthan.java-91-			  Syntax.aTypeName( arg1 ) ) ;
org/nlogo/prim/_lessthan.java-92-	}
org/nlogo/prim/_lessthan.java-99-		throw new EngineException
org/nlogo/prim/_lessthan.java-100-			( context , this , 
org/nlogo/prim/_lessthan.java:101:			  "the < operator can only be used on two numbers, " 
org/nlogo/prim/_lessthan.java:102:			  + "two strings, or two agents of the same type, " +
org/nlogo/prim/_lessthan.java:103:			  "but not on a " + Syntax.aTypeName( arg0 ) + " and " +
org/nlogo/prim/_lessthan.java-104-			  Syntax.aTypeName( arg1 ) ) ;
org/nlogo/prim/_lessthan.java-105-	}
org/nlogo/prim/_letvariable.java-22-	@Override public String toString()
org/nlogo/prim/_letvariable.java-23-	{
org/nlogo/prim/_letvariable.java:24:		return super.toString() + "(" + name + ")";
org/nlogo/prim/_letvariable.java-25-	}
org/nlogo/prim/_letvariable.java-26-	@Override public Object report( Context context )
org/nlogo/prim/_linkbreedvariableof.java-27-			{
org/nlogo/prim/_linkbreedvariableof.java-28-				throw new EngineException
org/nlogo/prim/_linkbreedvariableof.java:29:					( context , this , "that link is dead" ) ;
org/nlogo/prim/_linkbreedvariableof.java-30-			}
org/nlogo/prim/_linkbreedvariableof.java-31-			try
org/nlogo/prim/_linkvariableof.java-28-			{
org/nlogo/prim/_linkvariableof.java-29-				throw new EngineException
org/nlogo/prim/_linkvariableof.java:30:					( context , this , "that link is dead" ) ;
org/nlogo/prim/_linkvariableof.java-31-			}
org/nlogo/prim/_linkvariableof.java-32-			try
org/nlogo/prim/_linkvariableof.java-92-			{
org/nlogo/prim/_linkvariableof.java-93-				throw new EngineException
org/nlogo/prim/_linkvariableof.java:94:					( context , this , "that link is dead" ) ;
org/nlogo/prim/_linkvariableof.java-95-			}
org/nlogo/prim/_linkvariableof.java-96-			try
org/nlogo/prim/_linkvariableof.java-135-		{
org/nlogo/prim/_linkvariableof.java-136-			throw new EngineException
org/nlogo/prim/_linkvariableof.java:137:				( context , this , "that link is dead" ) ;
org/nlogo/prim/_linkvariableof.java-138-		}
org/nlogo/prim/_linkvariableof.java-139-		try
org/nlogo/prim/_map.java-45-				throw new EngineException
org/nlogo/prim/_map.java-46-					( context , this ,
org/nlogo/prim/_map.java:47:					  "All the list arguments to MAP must be the same length." ) ;
org/nlogo/prim/_map.java-48-			}
org/nlogo/prim/_map.java-49-			iters[ i ] = list.iterator() ;
org/nlogo/prim/_max.java-39-		{
org/nlogo/prim/_max.java-40-			throw new EngineException
org/nlogo/prim/_max.java:41:				( context , this , "can't find the maximum of a list with no numbers: " +
org/nlogo/prim/_max.java-42-				  Dump.logoObject( list ) ) ;
org/nlogo/prim/_max.java-43-		}
org/nlogo/prim/_mean.java-34-				throw new EngineException
org/nlogo/prim/_mean.java-35-					( context , this , 
org/nlogo/prim/_mean.java:36:					  "can't find the mean of a list that contains non-numbers " 
org/nlogo/prim/_mean.java-37-					  + Dump.logoObject( elt ) 
org/nlogo/prim/_mean.java:38:					  + " is a " + Syntax.typeName( elt ) + "." ) ;
org/nlogo/prim/_mean.java-39-			}
org/nlogo/prim/_mean.java-40-			sum += ( (Double) elt ).doubleValue() ;
org/nlogo/prim/_min.java-42-		{
org/nlogo/prim/_min.java-43-			throw new EngineException
org/nlogo/prim/_min.java:44:				( context , this , "can't find the minimum of a list with no numbers: " +
org/nlogo/prim/_min.java-45-				  Dump.logoObject( list ) ) ;
org/nlogo/prim/_min.java-46-		}
org/nlogo/prim/_neighbors.java-13-	@Override public Syntax getSyntax()
org/nlogo/prim/_neighbors.java-14-	{
org/nlogo/prim/_neighbors.java:15:		return Syntax.reporterSyntax( Syntax.TYPE_PATCHSET , "-TP-" ) ;
org/nlogo/prim/_neighbors.java-16-	}
org/nlogo/prim/_neighbors.java-17-	@Override public Object report( Context context )
org/nlogo/prim/_neighbors4.java-13-	@Override public Syntax getSyntax()
org/nlogo/prim/_neighbors4.java-14-	{
org/nlogo/prim/_neighbors4.java:15:		return Syntax.reporterSyntax( Syntax.TYPE_PATCHSET , "-TP-" ) ;
org/nlogo/prim/_neighbors4.java-16-	}
org/nlogo/prim/_neighbors4.java-17-	@Override public Object report( Context context )
org/nlogo/prim/_nsum.java-18-		return Syntax.reporterSyntax
org/nlogo/prim/_nsum.java-19-			( new int[] { Syntax.TYPE_REFERENCE } ,
org/nlogo/prim/_nsum.java:20:			  Syntax.TYPE_NUMBER , "-TP-" ) ;
org/nlogo/prim/_nsum.java-21-	}
org/nlogo/prim/_nsum.java-22-	@Override public String toString()
org/nlogo/prim/_nsum.java-51-				throw new EngineException
org/nlogo/prim/_nsum.java-52-					( context , this , 
org/nlogo/prim/_nsum.java:53:					  "can't find the sum of a list that contains non-numbers " 
org/nlogo/prim/_nsum.java-54-					  + Dump.logoObject( value ) 
org/nlogo/prim/_nsum.java:55:					  + " is a " + Syntax.typeName( value ) + "." ) ;
org/nlogo/prim/_nsum.java-56-			}
org/nlogo/prim/_nsum.java-57-
org/nlogo/prim/_nsum4.java-18-		return Syntax.reporterSyntax
org/nlogo/prim/_nsum4.java-19-			( new int[] { Syntax.TYPE_REFERENCE } ,
org/nlogo/prim/_nsum4.java:20:			  Syntax.TYPE_NUMBER , "-TP-" ) ;
org/nlogo/prim/_nsum4.java-21-	}
org/nlogo/prim/_nsum4.java-22-	@Override public String toString()
org/nlogo/prim/_nsum4.java-51-				throw new EngineException
org/nlogo/prim/_nsum4.java-52-					( context , this , 
org/nlogo/prim/_nsum4.java:53:					  "can't find the sum of a list that contains non-numbers " 
org/nlogo/prim/_nsum4.java-54-					  + Dump.logoObject( value ) 
org/nlogo/prim/_nsum4.java:55:					  + " is a " + Syntax.typeName( value ) + "." ) ;
org/nlogo/prim/_nsum4.java-56-			}
org/nlogo/prim/_nsum4.java-57-
org/nlogo/prim/_nvalues.java-32-		{
org/nlogo/prim/_nvalues.java-33-			throw new EngineException
org/nlogo/prim/_nvalues.java:34:				( context , this , displayName() + " cannot take a negative number" ) ;	
org/nlogo/prim/_nvalues.java-35-		}
org/nlogo/prim/_nvalues.java-36-
org/nlogo/prim/_of.java-22-			  Syntax.NORMAL_PRECEDENCE + 1 ,
org/nlogo/prim/_of.java-23-			  true , // right associative
org/nlogo/prim/_of.java:24:			  "OTPL" ,
org/nlogo/prim/_of.java-25-			  "?"    // takes reporter block of unknown agent type
org/nlogo/prim/_of.java-26-				) ;
org/nlogo/prim/_of.java-35-			if( agent.id == -1 )
org/nlogo/prim/_of.java-36-			{
org/nlogo/prim/_of.java:37:				throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/_of.java-38-			}
org/nlogo/prim/_of.java-39-			args[ 0 ].checkAgentClass( agent , context ) ;
org/nlogo/prim/_other.java-11-	extends Reporter
org/nlogo/prim/_other.java-12-{
org/nlogo/prim/_other.java:13:	// super( "TPL" ) ;
org/nlogo/prim/_other.java-14-	@Override
org/nlogo/prim/_other.java-15-	public Syntax getSyntax()
org/nlogo/prim/_otherwith.java-21-			( new int[] { Syntax.TYPE_AGENTSET , Syntax.TYPE_BOOLEAN_BLOCK } ,
org/nlogo/prim/_otherwith.java-22-			  Syntax.TYPE_AGENTSET ,
org/nlogo/prim/_otherwith.java:23:			  "OTPL" , "?" ) ;
org/nlogo/prim/_otherwith.java-24-	}
org/nlogo/prim/_otherwith.java-25-	@Override public Object report( final Context context )
org/nlogo/prim/_otherwith.java-46-			{
org/nlogo/prim/_otherwith.java-47-				throw new EngineException
org/nlogo/prim/_otherwith.java:48:					( context , this , displayName() + " expected a true/false value from " +
org/nlogo/prim/_otherwith.java-49-					  Dump.logoObject( tester ) +
org/nlogo/prim/_otherwith.java:50:					  ", but got "+ Dump.logoObject( value ) + " instead" ) ;
org/nlogo/prim/_otherwith.java-51-			}
org/nlogo/prim/_otherwith.java-52-			if( ( ( Boolean ) value ).booleanValue() )
org/nlogo/prim/_parallelupdate.java-18-			( new int[] { Syntax.TYPE_AGENTSET , Syntax.TYPE_REFERENCE ,
org/nlogo/prim/_parallelupdate.java-19-						  Syntax.TYPE_REPORTER_BLOCK } ,
org/nlogo/prim/_parallelupdate.java:20:				"OTPL" , "?" , true ) ;
org/nlogo/prim/_parallelupdate.java-21-	}
org/nlogo/prim/_parallelupdate.java-22-	@Override
org/nlogo/prim/_patch.java-21-	}
org/nlogo/prim/_patch.java-22-	// I've tried to rejigger this and the result gets past TryCatchSafeChecker but then
org/nlogo/prim/_patch.java:23:	// doesn't work at runtime ("Inconsistent stack height") - ST 2/10/09
org/nlogo/prim/_patch.java-24-	@Override
org/nlogo/prim/_patch.java-25-	public Object report( final Context context ) throws LogoException
org/nlogo/prim/_patchat.java-16-						Syntax.TYPE_NUMBER } ;
org/nlogo/prim/_patchat.java-17-		int ret = Syntax.TYPE_PATCH ;
org/nlogo/prim/_patchat.java:18:		return Syntax.reporterSyntax( right , ret , "-TP-" ) ;
org/nlogo/prim/_patchat.java-19-	}
org/nlogo/prim/_patchat.java-20-	// I've tried to rejigger this and the result gets past TryCatchSafeChecker but then
org/nlogo/prim/_patchat.java:21:	// doesn't work at runtime ("Inconsistent stack height") - ST 2/10/09
org/nlogo/prim/_patchat.java-22-	@Override
org/nlogo/prim/_patchat.java-23-	public Object report( final Context context ) throws LogoException
org/nlogo/prim/_patcheast.java-14-	{
org/nlogo/prim/_patcheast.java-15-		return Syntax.reporterSyntax
org/nlogo/prim/_patcheast.java:16:			( Syntax.TYPE_PATCH , "-TP-" ) ;
org/nlogo/prim/_patcheast.java-17-	}
org/nlogo/prim/_patcheast.java-18-	@Override public Object report( Context context )
org/nlogo/prim/_patchhereinternal.java-15-	{
org/nlogo/prim/_patchhereinternal.java-16-		return Syntax.reporterSyntax
org/nlogo/prim/_patchhereinternal.java:17:			( Syntax.TYPE_PATCH , "-TP-" ) ;
org/nlogo/prim/_patchhereinternal.java-18-	}
org/nlogo/prim/_patchhereinternal.java-19-	@Override public Object report( Context context )
org/nlogo/prim/_patchne.java-14-	{
org/nlogo/prim/_patchne.java-15-		return Syntax.reporterSyntax
org/nlogo/prim/_patchne.java:16:			( Syntax.TYPE_PATCH , "-TP-" ) ;
org/nlogo/prim/_patchne.java-17-	}
org/nlogo/prim/_patchne.java-18-	@Override public Object report( Context context )
org/nlogo/prim/_patchnorth.java-13-	{
org/nlogo/prim/_patchnorth.java-14-		return Syntax.reporterSyntax
org/nlogo/prim/_patchnorth.java:15:			( Syntax.TYPE_PATCH , "-TP-" ) ;
org/nlogo/prim/_patchnorth.java-16-	}
org/nlogo/prim/_patchnorth.java-17-	@Override public Object report( Context context )
org/nlogo/prim/_patchnw.java-13-	{
org/nlogo/prim/_patchnw.java-14-		return Syntax.reporterSyntax
org/nlogo/prim/_patchnw.java:15:			( Syntax.TYPE_PATCH , "-TP-" ) ;
org/nlogo/prim/_patchnw.java-16-	}
org/nlogo/prim/_patchnw.java-17-	@Override public Object report( Context context )
org/nlogo/prim/_patchse.java-12-	@Override public Syntax getSyntax()
org/nlogo/prim/_patchse.java-13-	{
org/nlogo/prim/_patchse.java:14:		return Syntax.reporterSyntax( Syntax.TYPE_PATCH , "-TP-" ) ;
org/nlogo/prim/_patchse.java-15-	}
org/nlogo/prim/_patchse.java-16-	@Override public Object report( Context context )
org/nlogo/prim/_patchsouth.java-12-	@Override public Syntax getSyntax()
org/nlogo/prim/_patchsouth.java-13-	{
org/nlogo/prim/_patchsouth.java:14:		return Syntax.reporterSyntax( Syntax.TYPE_PATCH , "-TP-" ) ;
org/nlogo/prim/_patchsouth.java-15-	}
org/nlogo/prim/_patchsouth.java-16-	@Override public Object report( Context context )
org/nlogo/prim/_patchsw.java-14-	{
org/nlogo/prim/_patchsw.java-15-		return Syntax.reporterSyntax
org/nlogo/prim/_patchsw.java:16:			( Syntax.TYPE_PATCH , "-TP-" ) ;
org/nlogo/prim/_patchsw.java-17-	}
org/nlogo/prim/_patchsw.java-18-	@Override public Object report( Context context )
org/nlogo/prim/_patchvariable.java-23-		return Syntax.reporterSyntax
org/nlogo/prim/_patchvariable.java-24-			( Syntax.TYPE_WILDCARD | Syntax.TYPE_REFERENCE ,
org/nlogo/prim/_patchvariable.java:25:			  "-TP-" ) ;
org/nlogo/prim/_patchvariable.java-26-	}
org/nlogo/prim/_patchvariable.java-27-	@Override public String toString()
org/nlogo/prim/_patchvariabledouble.java-15-	@Override public Syntax getSyntax()
org/nlogo/prim/_patchvariabledouble.java-16-	{
org/nlogo/prim/_patchvariabledouble.java:17:		return Syntax.reporterSyntax( Syntax.TYPE_NUMBER , "-TP-" ) ;
org/nlogo/prim/_patchvariabledouble.java-18-	}
org/nlogo/prim/_patchvariabledouble.java-19-	@Override public String toString()
org/nlogo/prim/_patchvariableof.java-28-			{
org/nlogo/prim/_patchvariableof.java-29-				throw new EngineException
org/nlogo/prim/_patchvariableof.java:30:					( context , this , "that turtle is dead" ) ;
org/nlogo/prim/_patchvariableof.java-31-			}
org/nlogo/prim/_patchvariableof.java-32-			try
org/nlogo/prim/_patchvariableof.java-94-			{
org/nlogo/prim/_patchvariableof.java-95-				throw new EngineException
org/nlogo/prim/_patchvariableof.java:96:					( context , this , "that turtle is dead" ) ;
org/nlogo/prim/_patchvariableof.java-97-			}
org/nlogo/prim/_patchvariableof.java-98-			try
org/nlogo/prim/_patchvariableof.java-155-		{
org/nlogo/prim/_patchvariableof.java-156-			throw new EngineException
org/nlogo/prim/_patchvariableof.java:157:				( context , this , "that turtle is dead" ) ;
org/nlogo/prim/_patchvariableof.java-158-		}
org/nlogo/prim/_patchvariableof.java-159-		try
org/nlogo/prim/_patchwest.java-14-	{
org/nlogo/prim/_patchwest.java-15-		return Syntax.reporterSyntax
org/nlogo/prim/_patchwest.java:16:			( Syntax.TYPE_PATCH , "-TP-" ) ;
org/nlogo/prim/_patchwest.java-17-	}
org/nlogo/prim/_patchwest.java-18-	@Override public Object report( Context context )
org/nlogo/prim/_reduce.java-27-		{
org/nlogo/prim/_reduce.java-28-			throw new EngineException
org/nlogo/prim/_reduce.java:29:				( context , this , "The list argument to 'reduce' must not be empty." ) ;
org/nlogo/prim/_reduce.java-30-		}
org/nlogo/prim/_reduce.java-31-		Iterator<Object> it = list.iterator() ;
org/nlogo/prim/_reference.java-25-	public String toString()
org/nlogo/prim/_reference.java-26-	{
org/nlogo/prim/_reference.java:27:		return super.toString() + ":" + agentClass.getName() + "," + vn ;
org/nlogo/prim/_reference.java-28-	}
org/nlogo/prim/_reference.java-29-	@Override
org/nlogo/prim/_repeatlocal.java-25-	public String toString()
org/nlogo/prim/_repeatlocal.java-26-	{
org/nlogo/prim/_repeatlocal.java:27:		return super.toString() + ":" + vn + ",+" + offset ;
org/nlogo/prim/_repeatlocal.java-28-	}
org/nlogo/prim/_repeatlocal.java-29-	@Override
org/nlogo/prim/_repeatlocalinternal.java-22-	public String toString()
org/nlogo/prim/_repeatlocalinternal.java-23-	{
org/nlogo/prim/_repeatlocalinternal.java:24:		return super.toString() + ":" + offset + "," + vn ;
org/nlogo/prim/_repeatlocalinternal.java-25-	}
org/nlogo/prim/_repeatlocalinternal.java-26-	@Override
org/nlogo/prim/_report.java-23-		{
org/nlogo/prim/_report.java-24-			throw new EngineException
org/nlogo/prim/_report.java:25:				( context , this  , displayName() + " can only be used inside TO-REPORT" ) ;
org/nlogo/prim/_report.java-26-		}
org/nlogo/prim/_report.java-27-		if( ! context.atTopActivation() )
org/nlogo/prim/_report.java-31-			// maybe you should be able to, but at least for now, you can't
org/nlogo/prim/_report.java-32-			throw new EngineException
org/nlogo/prim/_report.java:33:				( context , this  , displayName() + " must be immediately inside a TO-REPORT" ) ;
org/nlogo/prim/_report.java-34-		}
org/nlogo/prim/_report.java-35-		context.job.result = args[ 0 ].report( context ) ;
org/nlogo/prim/_report.java-42-		{
org/nlogo/prim/_report.java-43-			throw new EngineException
org/nlogo/prim/_report.java:44:				( context , this  , displayName() + " can only be used inside TO-REPORT" ) ;
org/nlogo/prim/_report.java-45-		}
org/nlogo/prim/_report.java-46-		if( ! context.atTopActivation() )
org/nlogo/prim/_report.java-50-			// maybe you should be able to, but at least for now, you can't
org/nlogo/prim/_report.java-51-			throw new EngineException
org/nlogo/prim/_report.java:52:				( context , this  , displayName() + " must be immediately inside a TO-REPORT" ) ;
org/nlogo/prim/_report.java-53-		}
org/nlogo/prim/_report.java-54-		context.job.result = arg0 ;
org/nlogo/prim/_return.java-13-	@Override public String displayName()
org/nlogo/prim/_return.java-14-	{
org/nlogo/prim/_return.java:15:		return "END" ; // for use in error messages
org/nlogo/prim/_return.java-16-	}
org/nlogo/prim/_return.java-17-	@Override public void perform( Context context )
org/nlogo/prim/_returnreport.java-15-	@Override public String displayName()
org/nlogo/prim/_returnreport.java-16-	{
org/nlogo/prim/_returnreport.java:17:		return "END" ; // for use in error messages
org/nlogo/prim/_returnreport.java-18-	}
org/nlogo/prim/_returnreport.java-19-	@Override public void perform( Context context ) throws LogoException
org/nlogo/prim/_returnreport.java-25-		throw new EngineException
org/nlogo/prim/_returnreport.java-26-			( context , this ,
org/nlogo/prim/_returnreport.java:27:			  "reached end of reporter procedure without REPORT being called" ) ;
org/nlogo/prim/_returnreport.java-28-    }
org/nlogo/prim/_returnreport.java-29-}
org/nlogo/prim/_setpatchvariable.java-20-		return Syntax.commandSyntax
org/nlogo/prim/_setpatchvariable.java-21-			( new int[] { Syntax.TYPE_WILDCARD } ,
org/nlogo/prim/_setpatchvariable.java:22:			  "-TP-" , true ) ;
org/nlogo/prim/_setpatchvariable.java-23-	}
org/nlogo/prim/_setpatchvariable.java-24-	@Override
org/nlogo/prim/_sortby.java-22-		int[] right = { Syntax.TYPE_BOOLEAN_BLOCK ,
org/nlogo/prim/_sortby.java-23-						Syntax.TYPE_LIST | Syntax.TYPE_AGENTSET } ;
org/nlogo/prim/_sortby.java:24:		return Syntax.reporterSyntax( right , Syntax.TYPE_LIST , "OTPL" , "?" ) ;
org/nlogo/prim/_sortby.java-25-	}
org/nlogo/prim/_sortby.java-26-	public void setLeftVarIndex( int vn1 )
org/nlogo/prim/_sprout.java-35-	public String toString()
org/nlogo/prim/_sprout.java-36-	{
org/nlogo/prim/_sprout.java:37:		return super.toString() + ":" + breedName + ",+" + offset ;
org/nlogo/prim/_sprout.java-38-	}
org/nlogo/prim/_sprout.java-39-	@Override
org/nlogo/prim/_templatevariable.java-47-		{
org/nlogo/prim/_templatevariable.java-48-			throw new EngineException
org/nlogo/prim/_templatevariable.java:49:				( context , this , "? can only be used inside map and foreach" ) ;
org/nlogo/prim/_templatevariable.java-50-		}
org/nlogo/prim/_templatevariable.java-51-		return context.activation.args[ slotNumber ] ;
org/nlogo/prim/_turtle.java-28-		{
org/nlogo/prim/_turtle.java-29-			throw new EngineException
org/nlogo/prim/_turtle.java:30:				( context , this , idDouble + " is not an integer" ) ;
org/nlogo/prim/_turtle.java-31-		}
org/nlogo/prim/_turtle.java-32-		Turtle turtle = world.getTurtle( id ) ;
org/nlogo/prim/_turtleorlinkvariableof.java-28-			{
org/nlogo/prim/_turtleorlinkvariableof.java-29-				throw new EngineException
org/nlogo/prim/_turtleorlinkvariableof.java:30:					( context , this , "that " + 
org/nlogo/prim/_turtleorlinkvariableof.java:31:					  ( agent instanceof org.nlogo.agent.Link ? "link" : "turtle" )
org/nlogo/prim/_turtleorlinkvariableof.java:32:					  + " is dead" ) ;
org/nlogo/prim/_turtleorlinkvariableof.java-33-			}
org/nlogo/prim/_turtleorlinkvariableof.java-34-			try
org/nlogo/prim/_turtleorlinkvariableof.java-88-			{
org/nlogo/prim/_turtleorlinkvariableof.java-89-				throw new EngineException
org/nlogo/prim/_turtleorlinkvariableof.java:90:					( context , this , "that " + 
org/nlogo/prim/_turtleorlinkvariableof.java:91:					  ( agent instanceof org.nlogo.agent.Link ? "link" : "turtle" )
org/nlogo/prim/_turtleorlinkvariableof.java:92:					  + " is dead" ) ;
org/nlogo/prim/_turtleorlinkvariableof.java-93-			}
org/nlogo/prim/_turtleorlinkvariableof.java-94-			try
org/nlogo/prim/_turtleorlinkvariableof.java-134-		{
org/nlogo/prim/_turtleorlinkvariableof.java-135-			throw new EngineException
org/nlogo/prim/_turtleorlinkvariableof.java:136:				( context , this , "that " + 
org/nlogo/prim/_turtleorlinkvariableof.java:137:				  ( agent instanceof org.nlogo.agent.Link ? "link" : "turtle" )
org/nlogo/prim/_turtleorlinkvariableof.java:138:				  + " is dead" ) ;
org/nlogo/prim/_turtleorlinkvariableof.java-139-		}
org/nlogo/prim/_turtleorlinkvariableof.java-140-		try
org/nlogo/prim/_turtlevariableof.java-28-			{
org/nlogo/prim/_turtlevariableof.java-29-				throw new EngineException
org/nlogo/prim/_turtlevariableof.java:30:					( context , this , "that turtle is dead" ) ;
org/nlogo/prim/_turtlevariableof.java-31-			}
org/nlogo/prim/_turtlevariableof.java-32-			try
org/nlogo/prim/_turtlevariableof.java-92-			{
org/nlogo/prim/_turtlevariableof.java-93-				throw new EngineException
org/nlogo/prim/_turtlevariableof.java:94:					( context , this , "that turtle is dead" ) ;
org/nlogo/prim/_turtlevariableof.java-95-			}
org/nlogo/prim/_turtlevariableof.java-96-			try
org/nlogo/prim/_turtlevariableof.java-135-		{
org/nlogo/prim/_turtlevariableof.java-136-			throw new EngineException
org/nlogo/prim/_turtlevariableof.java:137:				( context , this , "that turtle is dead" ) ;
org/nlogo/prim/_turtlevariableof.java-138-		}
org/nlogo/prim/_turtlevariableof.java-139-		try
org/nlogo/prim/_unknownidentifier.java-1-package org.nlogo.prim ;
org/nlogo/prim/_unknownidentifier.java-2-
org/nlogo/prim/_unknownidentifier.java:3:// This is used by IdentifierParser's "forgiving" mode, used by
org/nlogo/prim/_unknownidentifier.java-4-// AutoConverter, in which unknown identifiers are assumed to be
org/nlogo/prim/_unknownidentifier.java-5-// references to global variables that the compiler doesn't know
org/nlogo/prim/_with.java-25-			  Syntax.NORMAL_PRECEDENCE + 2 ,
org/nlogo/prim/_with.java-26-			  false , // left associative
org/nlogo/prim/_with.java:27:			  "OTPL" ,
org/nlogo/prim/_with.java-28-			  "?"    // takes reporter block of unknown agent type
org/nlogo/prim/_with.java-29-				) ;
org/nlogo/prim/_with.java-49-			{
org/nlogo/prim/_with.java-50-				throw new EngineException
org/nlogo/prim/_with.java:51:					( context , this , displayName() + " expected a true/false value from " +
org/nlogo/prim/_with.java-52-					  Dump.logoObject( tester ) +
org/nlogo/prim/_with.java:53:					  ", but got "+ Dump.logoObject( value ) + " instead" ) ;
org/nlogo/prim/_with.java-54-			}
org/nlogo/prim/_with.java-55-			if( ( ( Boolean ) value ).booleanValue() )
org/nlogo/prim/dead/_randomorrandomfloat.scala-4-
org/nlogo/prim/dead/_randomorrandomfloat.scala-5-/**
org/nlogo/prim/dead/_randomorrandomfloat.scala:6: * This primitive never existed; we convert "random" (in very, very old models) or
org/nlogo/prim/dead/_randomorrandomfloat.scala:7: * "random-int-or-float" (in more recent models) to this to force the user to change it; we need to
org/nlogo/prim/dead/_randomorrandomfloat.scala-8- * have a class for it so the tokenizer and parser can parse it.
org/nlogo/prim/dead/_randomorrandomfloat.scala-9- */
org/nlogo/prim/etc/_all.java-18-		return Syntax.reporterSyntax
org/nlogo/prim/etc/_all.java-19-			( new int[] { Syntax.TYPE_AGENTSET , Syntax.TYPE_BOOLEAN_BLOCK } ,
org/nlogo/prim/etc/_all.java:20:			  Syntax.TYPE_BOOLEAN , "OTPL" , "?" ) ;
org/nlogo/prim/etc/_all.java-21-	}
org/nlogo/prim/etc/_all.java-22-	@Override
org/nlogo/prim/etc/_all.java-41-			{
org/nlogo/prim/etc/_all.java-42-				throw new EngineException
org/nlogo/prim/etc/_all.java:43:					( context , this , displayName() + " expected a true/false value from " +
org/nlogo/prim/etc/_all.java-44-					  Dump.logoObject( tester ) +
org/nlogo/prim/etc/_all.java:45:					  ", but got "+ Dump.logoObject( value ) + " instead" ) ;
org/nlogo/prim/etc/_all.java-46-			}
org/nlogo/prim/etc/_all.java-47-			if( ! ( ( Boolean ) value ).booleanValue() )
org/nlogo/prim/etc/_atan.java-25-		if( d1 == 0 && d2 == 0 )
org/nlogo/prim/etc/_atan.java-26-		{
org/nlogo/prim/etc/_atan.java:27:			throw new EngineException( context , this , "atan is undefined when both inputs are zero" ) ;
org/nlogo/prim/etc/_atan.java-28-		}
org/nlogo/prim/etc/_atan.java-29-		if( d1 == 0 )
org/nlogo/prim/etc/_atpoints.java-37-				throw new EngineException
org/nlogo/prim/etc/_atpoints.java-38-					( context , this , 
org/nlogo/prim/etc/_atpoints.java:39:					  "invalid list of points: " + Dump.logoObject( points ) ) ;
org/nlogo/prim/etc/_atpoints.java-40-			}
org/nlogo/prim/etc/_atpoints.java-41-		}
org/nlogo/prim/etc/_atpoints.java-165-							throw new EngineException
org/nlogo/prim/etc/_atpoints.java-166-								( context , this , 
org/nlogo/prim/etc/_atpoints.java:167:									"invalid list of points: " +
org/nlogo/prim/etc/_atpoints.java-168-									Dump.logoObject( points ) ) ;
org/nlogo/prim/etc/_atpoints.java-169-					    }
org/nlogo/prim/etc/_atpoints.java-173-						throw new EngineException
org/nlogo/prim/etc/_atpoints.java-174-							( context , this , 
org/nlogo/prim/etc/_atpoints.java:175:							  "invalid list of points: " +
org/nlogo/prim/etc/_atpoints.java-176-							  Dump.logoObject( points ) ) ;
org/nlogo/prim/etc/_atpoints.java-177-				}
org/nlogo/prim/etc/_atpoints.java-182-				throw new EngineException
org/nlogo/prim/etc/_atpoints.java-183-					( context , this , 
org/nlogo/prim/etc/_atpoints.java:184:					  "invalid list of points: " +
org/nlogo/prim/etc/_atpoints.java-185-					  Dump.logoObject( points ) ) ;
org/nlogo/prim/etc/_atpoints.java-186-			}
org/nlogo/prim/etc/_averagepathlength.java-33-		{
org/nlogo/prim/etc/_averagepathlength.java-34-			throw new EngineException
org/nlogo/prim/etc/_averagepathlength.java:35:				( context , this , "expected last input to be a link breed." ) ;
org/nlogo/prim/etc/_averagepathlength.java-36-		}
org/nlogo/prim/etc/_averagepathlength.java-37-		return world.linkManager.networkMetrics
org/nlogo/prim/etc/_boom.java-21-		throws LogoException
org/nlogo/prim/etc/_boom.java-22-	{
org/nlogo/prim/etc/_boom.java:23:		throw new EngineException( context , this , "boom!" ) ;
org/nlogo/prim/etc/_boom.java-24-	}
org/nlogo/prim/etc/_boom.java-25-}
org/nlogo/prim/etc/_butfirst.java-33-			{
org/nlogo/prim/etc/_butfirst.java-34-				throw new EngineException
org/nlogo/prim/etc/_butfirst.java:35:					( context , this , displayName() + " got an empty list as input" ) ;
org/nlogo/prim/etc/_butfirst.java-36-			}
org/nlogo/prim/etc/_butfirst.java-37-			return list.butFirst() ;
org/nlogo/prim/etc/_butfirst.java-43-			{
org/nlogo/prim/etc/_butfirst.java-44-				throw new EngineException
org/nlogo/prim/etc/_butfirst.java:45:					( context , this , token().name() + " got an empty string as input" ) ;
org/nlogo/prim/etc/_butfirst.java-46-			}
org/nlogo/prim/etc/_butfirst.java-47-			return string.substring( 1 ) ;
org/nlogo/prim/etc/_butfirst.java-60-		{
org/nlogo/prim/etc/_butfirst.java-61-			throw new EngineException
org/nlogo/prim/etc/_butfirst.java:62:				( context , this , token().name() + " got an empty string as input" ) ;
org/nlogo/prim/etc/_butfirst.java-63-		}
org/nlogo/prim/etc/_butfirst.java-64-		return arg0.substring( 1 ) ;
org/nlogo/prim/etc/_butfirst.java-71-		{
org/nlogo/prim/etc/_butfirst.java-72-			throw new EngineException
org/nlogo/prim/etc/_butfirst.java:73:				( context , this , displayName() + " got an empty list as input" ) ;
org/nlogo/prim/etc/_butfirst.java-74-		}
org/nlogo/prim/etc/_butfirst.java-75-		return arg0.butFirst() ;
org/nlogo/prim/etc/_butlast.java-33-			{
org/nlogo/prim/etc/_butlast.java-34-				throw new EngineException
org/nlogo/prim/etc/_butlast.java:35:					( context , this , displayName() + " got an empty list as input" ) ;
org/nlogo/prim/etc/_butlast.java-36-			}
org/nlogo/prim/etc/_butlast.java-37-			return list.butLast() ;
org/nlogo/prim/etc/_butlast.java-43-			{
org/nlogo/prim/etc/_butlast.java-44-				throw new EngineException
org/nlogo/prim/etc/_butlast.java:45:					( context , this , token().name() + " got an empty string as input" ) ;
org/nlogo/prim/etc/_butlast.java-46-			}
org/nlogo/prim/etc/_butlast.java-47-			return string.substring( 0 , string.length() - 1 ) ;
org/nlogo/prim/etc/_butlast.java-60-		{
org/nlogo/prim/etc/_butlast.java-61-			throw new EngineException
org/nlogo/prim/etc/_butlast.java:62:				( context , this , token().name() + " got an empty string as input" ) ;
org/nlogo/prim/etc/_butlast.java-63-		}
org/nlogo/prim/etc/_butlast.java-64-		return arg0.substring( 0 , arg0.length() - 1 ) ;
org/nlogo/prim/etc/_butlast.java-71-		{
org/nlogo/prim/etc/_butlast.java-72-			throw new EngineException
org/nlogo/prim/etc/_butlast.java:73:				( context , this , displayName() + " got an empty list as input" ) ;
org/nlogo/prim/etc/_butlast.java-74-		}
org/nlogo/prim/etc/_butlast.java-75-		return arg0.butLast() ;
org/nlogo/prim/etc/_createnetworkpreferential.java-38-		if ( linkBreed.isDirected() )
org/nlogo/prim/etc/_createnetworkpreferential.java-39-		{
org/nlogo/prim/etc/_createnetworkpreferential.java:40:			throw new EngineException(context, "This command only supports undirected link breeds.");
org/nlogo/prim/etc/_createnetworkpreferential.java-41-		}
org/nlogo/prim/etc/_createnetworkpreferential.java-42-		if (mEdges < 1)
org/nlogo/prim/etc/_createnetworkpreferential.java-43-		{
org/nlogo/prim/etc/_createnetworkpreferential.java:44:			throw new EngineException(context, "The number of neighbors to link to in each step must be at least 1.");
org/nlogo/prim/etc/_createnetworkpreferential.java-45-		}
org/nlogo/prim/etc/_createnetworkpreferential.java-46-
org/nlogo/prim/etc/_createnetworkpreferential.java-49-		if (numNodes < mEdges + 1)
org/nlogo/prim/etc/_createnetworkpreferential.java-50-		{
org/nlogo/prim/etc/_createnetworkpreferential.java:51:			throw new EngineException(context, "This agentset has only " + numNodes + " members, so it is impossible to attach any turtle to " + mEdges + " neighbors!");
org/nlogo/prim/etc/_createnetworkpreferential.java-52-		}
org/nlogo/prim/etc/_createnetworkpreferential.java-53-		
org/nlogo/prim/etc/_createnetworkpreferential.java-63-			{
org/nlogo/prim/etc/_createnetworkpreferential.java-64-				throw new EngineException
org/nlogo/prim/etc/_createnetworkpreferential.java:65:					(context, "You can only create links between turtles!");
org/nlogo/prim/etc/_createnetworkpreferential.java-66-			}
org/nlogo/prim/etc/_createnetworkpreferential.java-67-			nodes[i] = (Turtle) agt;
org/nlogo/prim/etc/_distance.java-14-		return Syntax.reporterSyntax
org/nlogo/prim/etc/_distance.java-15-			( new int[] { Syntax.TYPE_TURTLE | Syntax.TYPE_PATCH } ,
org/nlogo/prim/etc/_distance.java:16:			  Syntax.TYPE_NUMBER , "-TP-" ) ;
org/nlogo/prim/etc/_distance.java-17-	}
org/nlogo/prim/etc/_distance.java-18-	@Override public Object report( Context context ) throws LogoException
org/nlogo/prim/etc/_distance.java-26-			throw new EngineException
org/nlogo/prim/etc/_distance.java-27-				( context , this ,
org/nlogo/prim/etc/_distance.java:28:				  "expected this to be a turtle or a patch but got a link instead" ) ;
org/nlogo/prim/etc/_distance.java-29-		}		
org/nlogo/prim/etc/_distance.java-30-		if( otherAgent.id == -1 )
org/nlogo/prim/etc/_distance.java-31-		{
org/nlogo/prim/etc/_distance.java:32:			throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/etc/_distance.java-33-		}
org/nlogo/prim/etc/_distance.java-34-		return world.protractor.distance( context.agent , otherAgent , true ) ; // true = wrap
org/nlogo/prim/etc/_distancenowrap.java-13-	{
org/nlogo/prim/etc/_distancenowrap.java-14-		int[] right = { Syntax.TYPE_TURTLE | Syntax.TYPE_PATCH } ;
org/nlogo/prim/etc/_distancenowrap.java:15:		return Syntax.reporterSyntax( right , Syntax.TYPE_NUMBER , "-TP-" ) ;
org/nlogo/prim/etc/_distancenowrap.java-16-	}
org/nlogo/prim/etc/_distancenowrap.java-17-	@Override public Object report( Context context ) throws LogoException
org/nlogo/prim/etc/_distancenowrap.java-24-		{
org/nlogo/prim/etc/_distancenowrap.java-25-			throw new EngineException
org/nlogo/prim/etc/_distancenowrap.java:26:				( context , this , "expected this to be a turtle or a patch but got a link instead" ) ;
org/nlogo/prim/etc/_distancenowrap.java-27-		}		
org/nlogo/prim/etc/_distancenowrap.java-28-		if( arg0.id == -1 )
org/nlogo/prim/etc/_distancenowrap.java-29-		{
org/nlogo/prim/etc/_distancenowrap.java:30:			throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/etc/_distancenowrap.java-31-		}
org/nlogo/prim/etc/_distancenowrap.java-32-		return world.protractor.distance( context.agent , arg0 , false ) ; // false = don't wrap
org/nlogo/prim/etc/_distancexy.java-11-	{
org/nlogo/prim/etc/_distancexy.java-12-		int[] right = { Syntax.TYPE_NUMBER , Syntax.TYPE_NUMBER } ;
org/nlogo/prim/etc/_distancexy.java:13:		return Syntax.reporterSyntax( right , Syntax.TYPE_NUMBER , "-TP-" ) ;
org/nlogo/prim/etc/_distancexy.java-14-	}
org/nlogo/prim/etc/_distancexy.java-15-	@Override public Object report( Context context ) throws LogoException
org/nlogo/prim/etc/_distancexynowrap.java-11-	{
org/nlogo/prim/etc/_distancexynowrap.java-12-		int[] right = { Syntax.TYPE_NUMBER , Syntax.TYPE_NUMBER } ;
org/nlogo/prim/etc/_distancexynowrap.java:13:		return Syntax.reporterSyntax( right , Syntax.TYPE_NUMBER , "-TP-" ) ;
org/nlogo/prim/etc/_distancexynowrap.java-14-	}
org/nlogo/prim/etc/_distancexynowrap.java-15-	@Override public Object report( Context context ) throws LogoException
org/nlogo/prim/etc/_div.java-28-		if( arg1 == 0 )
org/nlogo/prim/etc/_div.java-29-		{
org/nlogo/prim/etc/_div.java:30:			throw new EngineException( context , this , "division by zero" ) ;
org/nlogo/prim/etc/_div.java-31-		}
org/nlogo/prim/etc/_div.java-32-		return arg0 / arg1 ;
org/nlogo/prim/etc/_edit.java-31-        }
org/nlogo/prim/etc/_edit.java-32-        workspace.outputObject
org/nlogo/prim/etc/_edit.java:33:                ("Now editing: " + path,
org/nlogo/prim/etc/_edit.java-34-                        context.agent, true, false,
org/nlogo/prim/etc/_edit.java-35-                        Workspace.OutputDestination.NORMAL);
org/nlogo/prim/etc/_every.java-37-								   ( argEvalDoubleValue( context , 0 ) * 1000000000 ) ) ;
org/nlogo/prim/etc/_every.java-38-			
org/nlogo/prim/etc/_every.java:39:		// follow parentContext links to go backwards through the chain of "asks"
org/nlogo/prim/etc/_every.java:40:		// until we are at the top level "ask" (or button press etc.)
org/nlogo/prim/etc/_every.java-41-		WeakHashMap<Agent,WeakHashMap<Command,MutableLong>> runTimes =
org/nlogo/prim/etc/_every.java-42-			workspace.lastRunTimes().get( context.job ) ;
org/nlogo/prim/etc/_exportdrawing.java-20-								( workspace.fileManager().attachPrefix
org/nlogo/prim/etc/_exportdrawing.java-21-								  ( filePath ) ,
org/nlogo/prim/etc/_exportdrawing.java:22:								  "png" ) ;
org/nlogo/prim/etc/_exportdrawing.java-23-						}
org/nlogo/prim/etc/_exportdrawing.java-24-						catch( java.io.IOException ex )
org/nlogo/prim/etc/_exportoutput.java-16-		{
org/nlogo/prim/etc/_exportoutput.java-17-			throw new EngineException
org/nlogo/prim/etc/_exportoutput.java:18:				( context , this , "can't export to empty pathname" ) ;
org/nlogo/prim/etc/_exportoutput.java-19-		}
org/nlogo/prim/etc/_exportoutput.java-20-		final org.nlogo.nvm.Command comm = this ;
org/nlogo/prim/etc/_exportview.java-20-								( workspace.fileManager().attachPrefix
org/nlogo/prim/etc/_exportview.java-21-								  ( filePath ) ,
org/nlogo/prim/etc/_exportview.java:22:								  "png" ) ;
org/nlogo/prim/etc/_exportview.java-23-						}
org/nlogo/prim/etc/_exportview.java-24-						catch( java.io.IOException ex )
org/nlogo/prim/etc/_extracthsb.java-30-			{
org/nlogo/prim/etc/_extracthsb.java-31-				throw new org.nlogo.nvm.EngineException
org/nlogo/prim/etc/_extracthsb.java:32:					( context , this , displayName() + " an rgb list must have 3 elements" ) ;
org/nlogo/prim/etc/_extracthsb.java-33-			}
org/nlogo/prim/etc/_extracthsb.java-34-			try
org/nlogo/prim/etc/_extracthsb.java-47-			{
org/nlogo/prim/etc/_extracthsb.java-48-				throw new org.nlogo.nvm.EngineException
org/nlogo/prim/etc/_extracthsb.java:49:					( context , this , displayName() + " an rgb list must contain only numbers" ) ;
org/nlogo/prim/etc/_extracthsb.java-50-			}
org/nlogo/prim/etc/_extracthsb.java-51-		}
org/nlogo/prim/etc/_extracthsb.java-85-		{
org/nlogo/prim/etc/_extracthsb.java-86-			throw new org.nlogo.nvm.EngineException
org/nlogo/prim/etc/_extracthsb.java:87:				( context , this , displayName() + " an rgb list must have 3 elements" ) ;
org/nlogo/prim/etc/_extracthsb.java-88-		}
org/nlogo/prim/etc/_extracthsb.java-89-		try
org/nlogo/prim/etc/_extracthsb.java-102-		{
org/nlogo/prim/etc/_extracthsb.java-103-			throw new org.nlogo.nvm.EngineException
org/nlogo/prim/etc/_extracthsb.java:104:				( context , this , displayName() + " an rgb list must contain only numbers" ) ;
org/nlogo/prim/etc/_extracthsb.java-105-		}
org/nlogo/prim/etc/_extracthsb.java-106-	}
org/nlogo/prim/etc/_face.java-17-		return Syntax.commandSyntax
org/nlogo/prim/etc/_face.java-18-			( new int[] { Syntax.TYPE_TURTLE | Syntax.TYPE_PATCH } ,
org/nlogo/prim/etc/_face.java:19:			  "OT--" , true ) ;
org/nlogo/prim/etc/_face.java-20-	}
org/nlogo/prim/etc/_face.java-21-	@Override
org/nlogo/prim/etc/_face.java-30-		if( target instanceof org.nlogo.agent.Link )
org/nlogo/prim/etc/_face.java-31-		{
org/nlogo/prim/etc/_face.java:32:			throw new EngineException( context , this , "expected a turtle or a patch but got a link" ) ;
org/nlogo/prim/etc/_face.java-33-		}
org/nlogo/prim/etc/_face.java-34-		if( target.id == -1 )
org/nlogo/prim/etc/_face.java-35-		{
org/nlogo/prim/etc/_face.java:36:			throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/etc/_face.java-37-		}
org/nlogo/prim/etc/_face.java-38-		if( context.agent instanceof Turtle )
org/nlogo/prim/etc/_facenowrap.java-24-		if( agentToFace.id == -1 )
org/nlogo/prim/etc/_facenowrap.java-25-		{
org/nlogo/prim/etc/_facenowrap.java:26:			throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/etc/_facenowrap.java-27-		}
org/nlogo/prim/etc/_facenowrap.java-28-		org.nlogo.agent.Turtle turtle = (org.nlogo.agent.Turtle ) context.agent ;	
org/nlogo/prim/etc/_facexy.java-15-		return Syntax.commandSyntax
org/nlogo/prim/etc/_facexy.java-16-			( new int[] { Syntax.TYPE_NUMBER , Syntax.TYPE_NUMBER } ,
org/nlogo/prim/etc/_facexy.java:17:			  "OT--" , true ) ;
org/nlogo/prim/etc/_facexy.java-18-	}
org/nlogo/prim/etc/_facexy.java-19-	@Override
org/nlogo/prim/etc/_filedelete.java-25-			throw new EngineException
org/nlogo/prim/etc/_filedelete.java-26-				( context , _filedelete.this ,
org/nlogo/prim/etc/_filedelete.java:27:				  argEvalString( context , 0 ) + " is not a valid path name: " + ex.getMessage() );
org/nlogo/prim/etc/_filedelete.java-28-		}
org/nlogo/prim/etc/_filedelete.java-29-		catch( java.io.IOException ex )
org/nlogo/prim/etc/_fileexists.java-25-			throw new EngineException
org/nlogo/prim/etc/_fileexists.java-26-				( context , _fileexists.this ,
org/nlogo/prim/etc/_fileexists.java:27:				  argEvalString( context , 0 ) + " is not a valid path name: " + ex.getMessage() );
org/nlogo/prim/etc/_fileexists.java-28-		}
org/nlogo/prim/etc/_fileexists.java-29-		catch( java.io.IOException ex )
org/nlogo/prim/etc/_fileread.java-34-		catch( java.io.EOFException ex )
org/nlogo/prim/etc/_fileread.java-35-		{
org/nlogo/prim/etc/_fileread.java:36:			throw new EngineException( context , this , "The end of file has been reached" ) ;
org/nlogo/prim/etc/_fileread.java-37-		}
org/nlogo/prim/etc/_fileread.java-38-		catch( java.io.IOException ex )
org/nlogo/prim/etc/_filereadchars.java-20-		catch( java.io.EOFException ex )
org/nlogo/prim/etc/_filereadchars.java-21-		{
org/nlogo/prim/etc/_filereadchars.java:22:			throw new EngineException( context , this , "The end of file has been reached" ) ;
org/nlogo/prim/etc/_filereadchars.java-23-		}
org/nlogo/prim/etc/_filereadchars.java-24-		catch( java.io.IOException ex )
org/nlogo/prim/etc/_filereadline.java-18-		catch( java.io.EOFException ex )
org/nlogo/prim/etc/_filereadline.java-19-		{
org/nlogo/prim/etc/_filereadline.java:20:			throw new EngineException( context , this , "The end of file has been reached" ) ;
org/nlogo/prim/etc/_filereadline.java-21-		}
org/nlogo/prim/etc/_filereadline.java-22-		catch( java.io.IOException ex )
org/nlogo/prim/etc/_first.java-32-			if( list.isEmpty() )
org/nlogo/prim/etc/_first.java-33-			{
org/nlogo/prim/etc/_first.java:34:				throw new EngineException( context , this , "list is empty" ) ;
org/nlogo/prim/etc/_first.java-35-			}
org/nlogo/prim/etc/_first.java-36-			return list.first() ;
org/nlogo/prim/etc/_first.java-41-			if( string.length() == 0 )
org/nlogo/prim/etc/_first.java-42-			{
org/nlogo/prim/etc/_first.java:43:				throw new EngineException( context , this , "string is empty" ) ;
org/nlogo/prim/etc/_first.java-44-			}
org/nlogo/prim/etc/_first.java-45-			return string.substring( 0 , 1 ) ;
org/nlogo/prim/etc/_first.java-56-		if( list.isEmpty() )
org/nlogo/prim/etc/_first.java-57-		{
org/nlogo/prim/etc/_first.java:58:			throw new EngineException( context , this , "list is empty" ) ;
org/nlogo/prim/etc/_first.java-59-		}
org/nlogo/prim/etc/_first.java-60-		return list.first() ;
org/nlogo/prim/etc/_first.java-65-		if( string.length() == 0 )
org/nlogo/prim/etc/_first.java-66-		{
org/nlogo/prim/etc/_first.java:67:			throw new EngineException( context , this , "string is empty" ) ;
org/nlogo/prim/etc/_first.java-68-		}
org/nlogo/prim/etc/_first.java-69-		return string.substring( 0 , 1 ) ;
org/nlogo/prim/etc/_follow.java-27-		{
org/nlogo/prim/etc/_follow.java-28-			throw new EngineException
org/nlogo/prim/etc/_follow.java:29:				( context , this , "that turtle is dead" ) ;
org/nlogo/prim/etc/_follow.java-30-		}
org/nlogo/prim/etc/_follow.java-31-		world.observer().setPerspective( Perspective.FOLLOW , turtle ) ;
org/nlogo/prim/etc/_foreverbuttonend.java-21-		// flag on contexts is for the forever button stopped
org/nlogo/prim/etc/_foreverbuttonend.java-22-		// because the procedure invoked by the button used the
org/nlogo/prim/etc/_foreverbuttonend.java:23:		// "stop" command to exit
org/nlogo/prim/etc/_foreverbuttonend.java-24-		if( context.job.stopping || context.stopping )
org/nlogo/prim/etc/_foreverbuttonend.java-25-		{
org/nlogo/prim/etc/_greaterorequal.java-54-		throw new EngineException
org/nlogo/prim/etc/_greaterorequal.java-55-			( context , this , 
org/nlogo/prim/etc/_greaterorequal.java:56:			  "the >= operator can only be used on two numbers, " 
org/nlogo/prim/etc/_greaterorequal.java:57:			  + "two strings, or two agents of the same type, " +
org/nlogo/prim/etc/_greaterorequal.java:58:			  "but not on " + Syntax.aTypeName( o1 ) + " and " + Syntax.aTypeName( o2 ) ) ;
org/nlogo/prim/etc/_greaterorequal.java-59-	}
org/nlogo/prim/etc/_greaterorequal.java-60-	public boolean report_2( Context context , String arg0 , String arg1 )
org/nlogo/prim/etc/_greaterorequal.java-86-		throw new EngineException
org/nlogo/prim/etc/_greaterorequal.java-87-			( context , this , 
org/nlogo/prim/etc/_greaterorequal.java:88:			  "the >= operator can only be used on two numbers, " 
org/nlogo/prim/etc/_greaterorequal.java:89:			  + "two strings, or two agents of the same type, " +
org/nlogo/prim/etc/_greaterorequal.java:90:			  "but not on a " + Syntax.aTypeName( arg0 ) + " and " +
org/nlogo/prim/etc/_greaterorequal.java-91-			  Syntax.aTypeName( arg1 ) ) ;
org/nlogo/prim/etc/_greaterorequal.java-92-	}
org/nlogo/prim/etc/_greaterorequal.java-99-		throw new EngineException
org/nlogo/prim/etc/_greaterorequal.java-100-			( context , this , 
org/nlogo/prim/etc/_greaterorequal.java:101:			  "the >= operator can only be used on two numbers, " 
org/nlogo/prim/etc/_greaterorequal.java:102:			  + "two strings, or two agents of the same type, " +
org/nlogo/prim/etc/_greaterorequal.java:103:			  "but not on a " + Syntax.aTypeName( arg0 ) + " and " +
org/nlogo/prim/etc/_greaterorequal.java-104-			  Syntax.aTypeName( arg1 ) ) ;
org/nlogo/prim/etc/_greaterorequal.java-105-	}
org/nlogo/prim/etc/_ignore.java-8-// This is only used for testing purposes.  It's better not to
org/nlogo/prim/etc/_ignore.java-9-// rejigger this, because when we test the bytecode generator, we get
org/nlogo/prim/etc/_ignore.java:10:// the disassembly for a reporter r by compiling "__ignore r" and
org/nlogo/prim/etc/_ignore.java-11-// we don't want extra stuff in the output. - ST 2/6/09
org/nlogo/prim/etc/_ignore.java-12-
org/nlogo/prim/etc/_importdrawing.java-21-		{
org/nlogo/prim/etc/_importdrawing.java-22-			throw new EngineException( context , this ,
org/nlogo/prim/etc/_importdrawing.java:23:									   "you can't import drawing in 3D" ) ;
org/nlogo/prim/etc/_importdrawing.java-24-		}
org/nlogo/prim/etc/_importdrawing.java-25-		try
org/nlogo/prim/etc/_incone.java-22-			  new int[] { Syntax.TYPE_NUMBER , Syntax.TYPE_NUMBER } , // right
org/nlogo/prim/etc/_incone.java-23-			  Syntax.TYPE_TURTLESET | Syntax.TYPE_PATCHSET ,          // return
org/nlogo/prim/etc/_incone.java:24:			  Syntax.NORMAL_PRECEDENCE + 2 , false , "OTPL" , "-T--" ) ;
org/nlogo/prim/etc/_incone.java-25-	}
org/nlogo/prim/etc/_incone.java-26-	@Override
org/nlogo/prim/etc/_incone.java-39-		{
org/nlogo/prim/etc/_incone.java-40-			throw new EngineException
org/nlogo/prim/etc/_incone.java:41:				( context , this , "expected a turtle or a patch but got a link" ) ;
org/nlogo/prim/etc/_incone.java-42-		}
org/nlogo/prim/etc/_incone.java-43-		if( radius < 0 )
org/nlogo/prim/etc/_incone.java-44-		{
org/nlogo/prim/etc/_incone.java-45-			throw new EngineException
org/nlogo/prim/etc/_incone.java:46:				( context , this , displayName() + " cannot take a negative radius" ) ;	
org/nlogo/prim/etc/_incone.java-47-		}
org/nlogo/prim/etc/_incone.java-48-		if( angle < 0 )
org/nlogo/prim/etc/_incone.java-49-		{
org/nlogo/prim/etc/_incone.java-50-			throw new EngineException
org/nlogo/prim/etc/_incone.java:51:				( context , this , displayName() + " cannot take a negative angle" ) ;	
org/nlogo/prim/etc/_incone.java-52-		}
org/nlogo/prim/etc/_incone.java-53-		if( angle > 360 )
org/nlogo/prim/etc/_incone.java-54-		{
org/nlogo/prim/etc/_incone.java-55-			throw new EngineException
org/nlogo/prim/etc/_incone.java:56:				( context , this , displayName() + " cannot take an angle greater than 360" ) ;
org/nlogo/prim/etc/_incone.java-57-		}
org/nlogo/prim/etc/_incone.java-58-		List<Agent> result = 
org/nlogo/prim/etc/_inconenowrap.java-21-		int ret = Syntax.TYPE_AGENTSET ;
org/nlogo/prim/etc/_inconenowrap.java-22-		return Syntax.reporterSyntax( left , right , ret , Syntax.NORMAL_PRECEDENCE + 2 ,
org/nlogo/prim/etc/_inconenowrap.java:23:									  false , "OTPL" , "-T--" ) ;
org/nlogo/prim/etc/_inconenowrap.java-24-	}
org/nlogo/prim/etc/_inconenowrap.java-25-	@Override
org/nlogo/prim/etc/_inconenowrap.java-37-		{
org/nlogo/prim/etc/_inconenowrap.java-38-			throw new EngineException
org/nlogo/prim/etc/_inconenowrap.java:39:				( context , this , "expected a turtle or a patch but got a link" ) ;
org/nlogo/prim/etc/_inconenowrap.java-40-		}
org/nlogo/prim/etc/_inconenowrap.java-41-		if( radius < 0 )
org/nlogo/prim/etc/_inconenowrap.java-42-		{
org/nlogo/prim/etc/_inconenowrap.java-43-			throw new EngineException
org/nlogo/prim/etc/_inconenowrap.java:44:				( context , this , displayName() + " cannot take a negative radius" ) ;	
org/nlogo/prim/etc/_inconenowrap.java-45-		}
org/nlogo/prim/etc/_inconenowrap.java-46-		if( angle < 0 )
org/nlogo/prim/etc/_inconenowrap.java-47-		{
org/nlogo/prim/etc/_inconenowrap.java-48-			throw new EngineException
org/nlogo/prim/etc/_inconenowrap.java:49:				( context , this , displayName() + " cannot take a negative angle" ) ;	
org/nlogo/prim/etc/_inconenowrap.java-50-		}
org/nlogo/prim/etc/_inconenowrap.java-51-		if( angle > 360 )
org/nlogo/prim/etc/_inconenowrap.java-52-		{
org/nlogo/prim/etc/_inconenowrap.java-53-			throw new EngineException
org/nlogo/prim/etc/_inconenowrap.java:54:				( context , this , displayName() + " cannot take an angle greater than 360" ) ;
org/nlogo/prim/etc/_inconenowrap.java-55-		}
org/nlogo/prim/etc/_inconenowrap.java-56-
org/nlogo/prim/etc/_innetworkradius.java-44-		{
org/nlogo/prim/etc/_innetworkradius.java-45-			throw new EngineException
org/nlogo/prim/etc/_innetworkradius.java:46:				( context , this , "expected last input to be a link breed." ) ;
org/nlogo/prim/etc/_innetworkradius.java-47-		}
org/nlogo/prim/etc/_innetworkradius.java-48-		if( radius < 0 )
org/nlogo/prim/etc/_innetworkradius.java-49-		{
org/nlogo/prim/etc/_innetworkradius.java-50-			throw new EngineException
org/nlogo/prim/etc/_innetworkradius.java:51:				( context , this , displayName() + " should not be given a negative radius" ) ;	
org/nlogo/prim/etc/_innetworkradius.java-52-		}
org/nlogo/prim/etc/_innetworkradius.java-53-		
org/nlogo/prim/etc/_inradius.java-23-		return Syntax.reporterSyntax
org/nlogo/prim/etc/_inradius.java-24-			( left , right , ret , Syntax.NORMAL_PRECEDENCE + 2 ,
org/nlogo/prim/etc/_inradius.java:25:			  false , "-TP-" , null ) ;
org/nlogo/prim/etc/_inradius.java-26-	}
org/nlogo/prim/etc/_inradius.java-27-	@Override
org/nlogo/prim/etc/_inradius.java-37-		{
org/nlogo/prim/etc/_inradius.java-38-			throw new EngineException
org/nlogo/prim/etc/_inradius.java:39:				( context , this , "expected a turtle or a patch but got a link" ) ;
org/nlogo/prim/etc/_inradius.java-40-		}
org/nlogo/prim/etc/_inradius.java-41-		if( radius < 0 )
org/nlogo/prim/etc/_inradius.java-42-		{
org/nlogo/prim/etc/_inradius.java-43-			throw new EngineException
org/nlogo/prim/etc/_inradius.java:44:				( context , this , displayName() + " cannot take a negative radius" ) ;	
org/nlogo/prim/etc/_inradius.java-45-		}
org/nlogo/prim/etc/_inradius.java-46-		List<Agent> result =
org/nlogo/prim/etc/_inradiusnowrap.java-22-		return Syntax.reporterSyntax
org/nlogo/prim/etc/_inradiusnowrap.java-23-			( left , right , ret , Syntax.NORMAL_PRECEDENCE + 2 ,
org/nlogo/prim/etc/_inradiusnowrap.java:24:			  false , "-TP-" , null ) ;
org/nlogo/prim/etc/_inradiusnowrap.java-25-	}
org/nlogo/prim/etc/_inradiusnowrap.java-26-	@Override
org/nlogo/prim/etc/_inradiusnowrap.java-36-		{
org/nlogo/prim/etc/_inradiusnowrap.java-37-			throw new EngineException
org/nlogo/prim/etc/_inradiusnowrap.java:38:				( context , this , "expected a turtle or a patch but got a link" ) ;
org/nlogo/prim/etc/_inradiusnowrap.java-39-		}
org/nlogo/prim/etc/_inradiusnowrap.java-40-		if( radius < 0 )
org/nlogo/prim/etc/_inradiusnowrap.java-41-		{
org/nlogo/prim/etc/_inradiusnowrap.java-42-			throw new EngineException
org/nlogo/prim/etc/_inradiusnowrap.java:43:				( context , this , displayName() + " cannot take a negative radius" ) ;	
org/nlogo/prim/etc/_inradiusnowrap.java-44-		}
org/nlogo/prim/etc/_inradiusnowrap.java-45-		List<Agent> result =
org/nlogo/prim/etc/_inrect.java-26-		return Syntax.reporterSyntax
org/nlogo/prim/etc/_inrect.java-27-			( left , right , ret , Syntax.NORMAL_PRECEDENCE + 2 ,
org/nlogo/prim/etc/_inrect.java:28:			  false , "-TP-" , null ) ;
org/nlogo/prim/etc/_inrect.java-29-	}
org/nlogo/prim/etc/_inrect.java-30-	@Override
org/nlogo/prim/etc/_item.java-21-		{
org/nlogo/prim/etc/_item.java-22-			throw new EngineException
org/nlogo/prim/etc/_item.java:23:				( context , this , index + " isn't greater than or equal to zero " ) ;
org/nlogo/prim/etc/_item.java-24-		}
org/nlogo/prim/etc/_item.java-25-		if ( obj instanceof LogoList )
org/nlogo/prim/etc/_item.java-29-			{
org/nlogo/prim/etc/_item.java-30-				throw new EngineException
org/nlogo/prim/etc/_item.java:31:					( context , this , "can't find element " + index + " of the list " +
org/nlogo/prim/etc/_item.java:32:					  Dump.logoObject( list ) + ", which is only of length " + list.size() ) ;
org/nlogo/prim/etc/_item.java-33-			}
org/nlogo/prim/etc/_item.java-34-			return list.get( index ) ;
org/nlogo/prim/etc/_item.java-40-			{
org/nlogo/prim/etc/_item.java-41-				throw new EngineException
org/nlogo/prim/etc/_item.java:42:					( context , this , "can't find element " + index + " of the string " +
org/nlogo/prim/etc/_item.java:43:					  Dump.logoObject( string ) + ", which is only of length " + string.length() ) ;
org/nlogo/prim/etc/_item.java-44-			}
org/nlogo/prim/etc/_item.java-45-			return string.substring( index, index + 1 ) ;
org/nlogo/prim/etc/_last.java-28-			if( list.size() == 0 )
org/nlogo/prim/etc/_last.java-29-			{
org/nlogo/prim/etc/_last.java:30:				throw new EngineException( context , this , "list is empty" ) ;
org/nlogo/prim/etc/_last.java-31-			}
org/nlogo/prim/etc/_last.java-32-			return list.get( list.size() - 1 ) ;
org/nlogo/prim/etc/_last.java-37-			if( string.length() == 0 )
org/nlogo/prim/etc/_last.java-38-			{
org/nlogo/prim/etc/_last.java:39:				throw new EngineException( context , this , "string is empty" ) ;
org/nlogo/prim/etc/_last.java-40-			}
org/nlogo/prim/etc/_last.java-41-			return string.substring( string.length() - 1 ) ;
org/nlogo/prim/etc/_layoutcircle.java-40-					throw new EngineException
org/nlogo/prim/etc/_layoutcircle.java-41-						( context , this ,
org/nlogo/prim/etc/_layoutcircle.java:42:						  "Patches are immovable." ) ;
org/nlogo/prim/etc/_layoutcircle.java-43-				}
org/nlogo/prim/etc/_layoutcircle.java-44-				org.nlogo.agent.Layouts.circle( set , radius , context.job.random ) ;
org/nlogo/prim/etc/_lessorequal.java-54-		throw new EngineException
org/nlogo/prim/etc/_lessorequal.java-55-			( context , this , 
org/nlogo/prim/etc/_lessorequal.java:56:			  "the <= operator can only be used on two numbers, " 
org/nlogo/prim/etc/_lessorequal.java:57:			  + "two strings, or two agents of the same type, " +
org/nlogo/prim/etc/_lessorequal.java:58:			  "but not on " + Syntax.aTypeName( o1 ) + " and " + Syntax.aTypeName( o2 ) ) ;
org/nlogo/prim/etc/_lessorequal.java-59-	}
org/nlogo/prim/etc/_lessorequal.java-60-	public boolean report_2( Context context , String arg0 , String arg1 )
org/nlogo/prim/etc/_lessorequal.java-86-		throw new EngineException
org/nlogo/prim/etc/_lessorequal.java-87-			( context , this , 
org/nlogo/prim/etc/_lessorequal.java:88:			  "the <= operator can only be used on two numbers, " 
org/nlogo/prim/etc/_lessorequal.java:89:			  + "two strings, or two agents of the same type, " +
org/nlogo/prim/etc/_lessorequal.java:90:			  "but not on a " + Syntax.aTypeName( arg0 ) + " and " +
org/nlogo/prim/etc/_lessorequal.java-91-			  Syntax.aTypeName( arg1 ) ) ;
org/nlogo/prim/etc/_lessorequal.java-92-	}
org/nlogo/prim/etc/_lessorequal.java-99-		throw new EngineException
org/nlogo/prim/etc/_lessorequal.java-100-			( context , this , 
org/nlogo/prim/etc/_lessorequal.java:101:			  "the <= operator can only be used on two numbers, " 
org/nlogo/prim/etc/_lessorequal.java:102:			  + "two strings, or two agents of the same type, " +
org/nlogo/prim/etc/_lessorequal.java:103:			  "but not on a " + Syntax.aTypeName( arg0 ) + " and " +
org/nlogo/prim/etc/_lessorequal.java-104-			  Syntax.aTypeName( arg1 ) ) ;
org/nlogo/prim/etc/_lessorequal.java-105-	}
org/nlogo/prim/etc/_life.java-35-		double fgcolor =
org/nlogo/prim/etc/_life.java-36-			( (Double) world.observer().variables
org/nlogo/prim/etc/_life.java:37:			  [ world.program().globals.indexOf( "FGCOLOR" ) ] )
org/nlogo/prim/etc/_life.java-38-			.doubleValue() ;
org/nlogo/prim/etc/_life.java-39-		double bgcolor =
org/nlogo/prim/etc/_life.java-40-			( (Double) world.observer().variables
org/nlogo/prim/etc/_life.java:41:			  [ world.program().globals.indexOf( "BGCOLOR" ) ] )
org/nlogo/prim/etc/_life.java-42-			.doubleValue() ;
org/nlogo/prim/etc/_life.java-43-		for( int i = 0 ; i < patchCount ; i++ )
org/nlogo/prim/etc/_linkheading.java-29-			throw new org.nlogo.nvm.EngineException
org/nlogo/prim/etc/_linkheading.java-30-				( context , this , 
org/nlogo/prim/etc/_linkheading.java:31:				  "there is no heading of a link whose endpoints are in the same position" ) ;
org/nlogo/prim/etc/_linkheading.java-32-		}
org/nlogo/prim/etc/_linkheading.java-33-	}
org/nlogo/prim/etc/_linkset.java-81-				if( tempSet.type() != org.nlogo.agent.Link.class )
org/nlogo/prim/etc/_linkset.java-82-				{
org/nlogo/prim/etc/_linkset.java:83:					throw new EngineException( context , this , "List inputs to " + this.displayName() 
org/nlogo/prim/etc/_linkset.java:84:											   + " must only contain link, link agentset, or list elements.  The list " 
org/nlogo/prim/etc/_linkset.java-85-											   +  Dump.logoObject( tempList , true , false) 
org/nlogo/prim/etc/_linkset.java:86:											   + " contained a different type agentset: " 
org/nlogo/prim/etc/_linkset.java-87-											   + Dump.logoObject( obj , true , false)); 
org/nlogo/prim/etc/_linkset.java-88-				}
org/nlogo/prim/etc/_linkset.java-99-			else if( ! ( obj instanceof org.nlogo.api.Nobody ) )
org/nlogo/prim/etc/_linkset.java-100-			{
org/nlogo/prim/etc/_linkset.java:101:				throw new EngineException( context , this , "List inputs to " + this.displayName() 
org/nlogo/prim/etc/_linkset.java:102:										   + " must only contain link, link agentset, or list elements.  The list " 
org/nlogo/prim/etc/_linkset.java-103-										   +  Dump.logoObject( tempList , true , false) 
org/nlogo/prim/etc/_linkset.java:104:										   + " contained " + Dump.logoObject( obj , true , false) 
org/nlogo/prim/etc/_linkset.java:105:										   + " which is NOT a link or link agentset") ;
org/nlogo/prim/etc/_linkset.java-106-			}
org/nlogo/prim/etc/_linkset.java-107-		}
org/nlogo/prim/etc/_linkshapes.java-14-	public Object report( final org.nlogo.nvm.Context context )
org/nlogo/prim/etc/_linkshapes.java-15-	{
org/nlogo/prim/etc/_linkshapes.java:16:		// obLisp: oh, for "mapcar"... - ST 11/30/04
org/nlogo/prim/etc/_linkshapes.java-17-		List<Shape> shapes = world.linkShapeList().getShapes() ;
org/nlogo/prim/etc/_linkshapes.java-18-		LogoList result = new LogoList() ;
org/nlogo/prim/etc/_ln.java-23-		if( d <= 0 )
org/nlogo/prim/etc/_ln.java-24-		{
org/nlogo/prim/etc/_ln.java:25:			throw new EngineException( context , this , "can't take the logarithm of " + d ) ;
org/nlogo/prim/etc/_ln.java-26-		}
org/nlogo/prim/etc/_ln.java-27-		return validDouble( StrictMath.log( d ) ) ;
org/nlogo/prim/etc/_log.java-28-		{
org/nlogo/prim/etc/_log.java-29-			throw new EngineException
org/nlogo/prim/etc/_log.java:30:				( context , this , "can't take the logarithm of " + n ) ;
org/nlogo/prim/etc/_log.java-31-		}
org/nlogo/prim/etc/_log.java-32-		if( base <= 0 )
org/nlogo/prim/etc/_log.java-33-		{
org/nlogo/prim/etc/_log.java-34-			throw new EngineException
org/nlogo/prim/etc/_log.java:35:				( context , this , base + " isn't a valid base for a logarithm" ) ;
org/nlogo/prim/etc/_log.java-36-		}
org/nlogo/prim/etc/_log.java-37-		return validDouble( StrictMath.log( n ) / StrictMath.log( base ) ) ;
org/nlogo/prim/etc/_maxnof.java-21-		int[] right = { Syntax.TYPE_NUMBER , Syntax.TYPE_AGENTSET, Syntax.TYPE_NUMBER_BLOCK } ;
org/nlogo/prim/etc/_maxnof.java-22-		int ret = Syntax.TYPE_AGENTSET ;
org/nlogo/prim/etc/_maxnof.java:23:		return Syntax.reporterSyntax( right , ret , "OTPL" , "?" ) ;
org/nlogo/prim/etc/_maxnof.java-24-	}
org/nlogo/prim/etc/_maxnof.java-25-	@Override
org/nlogo/prim/etc/_maxnof.java-30-		{
org/nlogo/prim/etc/_maxnof.java-31-			throw new EngineException
org/nlogo/prim/etc/_maxnof.java:32:				( context , this , "first input to " + displayName() +
org/nlogo/prim/etc/_maxnof.java:33:				  " can't be negative" ) ;
org/nlogo/prim/etc/_maxnof.java-34-		}
org/nlogo/prim/etc/_maxnof.java-35-		AgentSet sourceSet = argEvalAgentSet( context , 1 ) ;
org/nlogo/prim/etc/_maxnof.java-38-		{
org/nlogo/prim/etc/_maxnof.java-39-			throw new EngineException
org/nlogo/prim/etc/_maxnof.java:40:				( context , this , "requested " + n +
org/nlogo/prim/etc/_maxnof.java:41:				  " random agents from a set of only " +
org/nlogo/prim/etc/_maxnof.java:42:				  count + " agents" ) ;
org/nlogo/prim/etc/_maxnof.java-43-		}
org/nlogo/prim/etc/_maxnof.java-44-		args[ 2 ].checkAgentSetClass( sourceSet , context ) ;
org/nlogo/prim/etc/_maxnofwithties.java-25-			  Syntax.NORMAL_PRECEDENCE ,
org/nlogo/prim/etc/_maxnofwithties.java-26-			  false , // left associative
org/nlogo/prim/etc/_maxnofwithties.java:27:			  "OTPL" ,
org/nlogo/prim/etc/_maxnofwithties.java-28-			  "?"    // takes reporter block of unknown agent type
org/nlogo/prim/etc/_maxnofwithties.java-29-				) ;
org/nlogo/prim/etc/_maxnofwithties.java-36-		{
org/nlogo/prim/etc/_maxnofwithties.java-37-			throw new EngineException
org/nlogo/prim/etc/_maxnofwithties.java:38:				( context , this , "first input to " + displayName() +
org/nlogo/prim/etc/_maxnofwithties.java:39:				  " can't be negative" ) ;
org/nlogo/prim/etc/_maxnofwithties.java-40-		}
org/nlogo/prim/etc/_maxnofwithties.java-41-		AgentSet sourceSet = argEvalAgentSet( context , 0 ) ;
org/nlogo/prim/etc/_maxnofwithties.java-44-		{
org/nlogo/prim/etc/_maxnofwithties.java-45-			throw new EngineException
org/nlogo/prim/etc/_maxnofwithties.java:46:				( context , this , "requested " + n +
org/nlogo/prim/etc/_maxnofwithties.java:47:				  " random agents from a set of only " +
org/nlogo/prim/etc/_maxnofwithties.java:48:				  count + " agents" ) ;
org/nlogo/prim/etc/_maxnofwithties.java-49-		}
org/nlogo/prim/etc/_maxnofwithties.java-50-		args[ 2 ].checkAgentSetClass( sourceSet , context ) ;
org/nlogo/prim/etc/_maxoneof.java-18-		int[] right = { Syntax.TYPE_AGENTSET, Syntax.TYPE_NUMBER_BLOCK } ;
org/nlogo/prim/etc/_maxoneof.java-19-		int ret = Syntax.TYPE_AGENT ;
org/nlogo/prim/etc/_maxoneof.java:20:		return Syntax.reporterSyntax( right , ret , "OTPL" , "?" ) ;
org/nlogo/prim/etc/_maxoneof.java-21-	}
org/nlogo/prim/etc/_maxoneof.java-22-	@Override
org/nlogo/prim/etc/_median.java-37-		{
org/nlogo/prim/etc/_median.java-38-			throw new EngineException
org/nlogo/prim/etc/_median.java:39:				( context , this , "can't find the median of a list with no numbers: " +
org/nlogo/prim/etc/_median.java-40-				  Dump.logoObject( list ) ) ;
org/nlogo/prim/etc/_median.java-41-		}
org/nlogo/prim/etc/_minnof.java-20-		int[] right = { Syntax.TYPE_NUMBER , Syntax.TYPE_AGENTSET, Syntax.TYPE_NUMBER_BLOCK } ;
org/nlogo/prim/etc/_minnof.java-21-		int ret = Syntax.TYPE_AGENTSET ;
org/nlogo/prim/etc/_minnof.java:22:		return Syntax.reporterSyntax( right , ret , "OTPL" , "?" ) ;
org/nlogo/prim/etc/_minnof.java-23-	}
org/nlogo/prim/etc/_minnof.java-24-	@Override
org/nlogo/prim/etc/_minnof.java-29-		{
org/nlogo/prim/etc/_minnof.java-30-			throw new EngineException
org/nlogo/prim/etc/_minnof.java:31:				( context , this , "first input to " + displayName() +
org/nlogo/prim/etc/_minnof.java:32:				  " can't be negative" ) ;
org/nlogo/prim/etc/_minnof.java-33-		}
org/nlogo/prim/etc/_minnof.java-34-		AgentSet sourceSet = argEvalAgentSet( context , 1 ) ;
org/nlogo/prim/etc/_minnof.java-37-		{
org/nlogo/prim/etc/_minnof.java-38-			throw new EngineException
org/nlogo/prim/etc/_minnof.java:39:				( context , this , "requested " + n +
org/nlogo/prim/etc/_minnof.java:40:				  " random agents from a set of only " +
org/nlogo/prim/etc/_minnof.java:41:				  count + " agents" ) ;
org/nlogo/prim/etc/_minnof.java-42-		}
org/nlogo/prim/etc/_minnof.java-43-		args[ 2 ].checkAgentSetClass( sourceSet , context ) ;
org/nlogo/prim/etc/_minnofwithties.java-24-			  Syntax.NORMAL_PRECEDENCE ,
org/nlogo/prim/etc/_minnofwithties.java-25-			  false , // left associative
org/nlogo/prim/etc/_minnofwithties.java:26:			  "OTPL" ,
org/nlogo/prim/etc/_minnofwithties.java-27-			  "?"    // takes reporter block of unknown agent type
org/nlogo/prim/etc/_minnofwithties.java-28-				) ;
org/nlogo/prim/etc/_minnofwithties.java-35-		{
org/nlogo/prim/etc/_minnofwithties.java-36-			throw new EngineException
org/nlogo/prim/etc/_minnofwithties.java:37:				( context , this , "first input to " + displayName() +
org/nlogo/prim/etc/_minnofwithties.java:38:				  " can't be negative" ) ;
org/nlogo/prim/etc/_minnofwithties.java-39-		}
org/nlogo/prim/etc/_minnofwithties.java-40-		AgentSet sourceSet = argEvalAgentSet( context , 0 ) ;
org/nlogo/prim/etc/_minnofwithties.java-43-		{
org/nlogo/prim/etc/_minnofwithties.java-44-			throw new EngineException
org/nlogo/prim/etc/_minnofwithties.java:45:				( context , this , "requested " + n +
org/nlogo/prim/etc/_minnofwithties.java:46:				  " random agents from a set of only " +
org/nlogo/prim/etc/_minnofwithties.java:47:				  count + " agents" ) ;
org/nlogo/prim/etc/_minnofwithties.java-48-		}
org/nlogo/prim/etc/_minnofwithties.java-49-		args[ 2 ].checkAgentSetClass( sourceSet , context ) ;
org/nlogo/prim/etc/_minoneof.java-19-		int[] right = { Syntax.TYPE_AGENTSET, Syntax.TYPE_NUMBER_BLOCK } ;
org/nlogo/prim/etc/_minoneof.java-20-		int ret = Syntax.TYPE_AGENT ;
org/nlogo/prim/etc/_minoneof.java:21:		return Syntax.reporterSyntax( right , ret , "OTPL" , "?" ) ;
org/nlogo/prim/etc/_minoneof.java-22-	}
org/nlogo/prim/etc/_minoneof.java-23-	@Override
org/nlogo/prim/etc/_mod.java-27-		if( d1 == 0 )
org/nlogo/prim/etc/_mod.java-28-		{
org/nlogo/prim/etc/_mod.java:29:			throw new EngineException( context , this , "division by zero" ) ;
org/nlogo/prim/etc/_mod.java-30-		}
org/nlogo/prim/etc/_mod.java-31-		return validDouble( d0 - ( StrictMath.floor( d0 / d1 ) * d1 ) ) ;
org/nlogo/prim/etc/_moveto.java-16-	{
org/nlogo/prim/etc/_moveto.java-17-		int[] right = { Syntax.TYPE_TURTLE | Syntax.TYPE_PATCH } ;
org/nlogo/prim/etc/_moveto.java:18:		return Syntax.commandSyntax( right , "OT--" , true ) ;
org/nlogo/prim/etc/_moveto.java-19-	}
org/nlogo/prim/etc/_moveto.java-20-	@Override
org/nlogo/prim/etc/_moveto.java-25-		if( otherAgent.id == -1 )
org/nlogo/prim/etc/_moveto.java-26-		{
org/nlogo/prim/etc/_moveto.java:27:			throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/etc/_moveto.java-28-		}
org/nlogo/prim/etc/_moveto.java-29-		if( otherAgent instanceof org.nlogo.agent.Link )
org/nlogo/prim/etc/_moveto.java-30-		{
org/nlogo/prim/etc/_moveto.java:31:			throw new EngineException( context , this , "you can't move-to a link" ) ;
org/nlogo/prim/etc/_moveto.java-32-		}
org/nlogo/prim/etc/_moveto.java-33-		try
org/nlogo/prim/etc/_myself.java-16-	{
org/nlogo/prim/etc/_myself.java-17-		return Syntax.reporterSyntax
org/nlogo/prim/etc/_myself.java:18:			( Syntax.TYPE_AGENT , "-TPL" ) ;
org/nlogo/prim/etc/_myself.java-19-	}
org/nlogo/prim/etc/_myself.java-20-	@Override
org/nlogo/prim/etc/_myself.java-25-		{
org/nlogo/prim/etc/_myself.java-26-			throw new EngineException
org/nlogo/prim/etc/_myself.java:27:				( context , this , "no agent for MYSELF to refer to" ) ;
org/nlogo/prim/etc/_myself.java-28-		}
org/nlogo/prim/etc/_myself.java-29-		return myself ;
org/nlogo/prim/etc/_myself.java-35-		{
org/nlogo/prim/etc/_myself.java-36-			throw new EngineException
org/nlogo/prim/etc/_myself.java:37:				( context , this , "no agent for MYSELF to refer to" ) ;
org/nlogo/prim/etc/_myself.java-38-		}
org/nlogo/prim/etc/_myself.java-39-		return myself ;
org/nlogo/prim/etc/_networkdistance.java-29-		{
org/nlogo/prim/etc/_networkdistance.java-30-			throw new EngineException
org/nlogo/prim/etc/_networkdistance.java:31:				( context , this , "expected the last input to be a link breed." ) ;
org/nlogo/prim/etc/_networkdistance.java-32-		}
org/nlogo/prim/etc/_networkdistance.java-33-		if( destNode.id == -1 )
org/nlogo/prim/etc/_networkdistance.java-34-		{
org/nlogo/prim/etc/_networkdistance.java:35:			throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/etc/_networkdistance.java-36-		}
org/nlogo/prim/etc/_networkdistance.java-37-		return world.linkManager.networkMetrics.networkDistance
org/nlogo/prim/etc/_networkshortestpathlinks.java-30-		{
org/nlogo/prim/etc/_networkshortestpathlinks.java-31-			throw new EngineException
org/nlogo/prim/etc/_networkshortestpathlinks.java:32:				( context , this , "expected the last input to be a link breed." ) ;
org/nlogo/prim/etc/_networkshortestpathlinks.java-33-		}
org/nlogo/prim/etc/_networkshortestpathlinks.java-34-
org/nlogo/prim/etc/_networkshortestpathlinks.java-35-		if( destNode.id == -1 )
org/nlogo/prim/etc/_networkshortestpathlinks.java-36-		{
org/nlogo/prim/etc/_networkshortestpathlinks.java:37:			throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/etc/_networkshortestpathlinks.java-38-		}
org/nlogo/prim/etc/_networkshortestpathlinks.java-39-		return world.linkManager.networkMetrics.networkShortestPathLinks(context.job.random, (Turtle) context.agent , destNode , linkBreed) ;
org/nlogo/prim/etc/_networkshortestpathnodes.java-33-		{
org/nlogo/prim/etc/_networkshortestpathnodes.java-34-			throw new EngineException
org/nlogo/prim/etc/_networkshortestpathnodes.java:35:				( context , this , "expected the last input to be a link breed." ) ;
org/nlogo/prim/etc/_networkshortestpathnodes.java-36-		}
org/nlogo/prim/etc/_networkshortestpathnodes.java-37-
org/nlogo/prim/etc/_networkshortestpathnodes.java-38-		if( destNode.id == -1 )
org/nlogo/prim/etc/_networkshortestpathnodes.java-39-		{
org/nlogo/prim/etc/_networkshortestpathnodes.java:40:			throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/etc/_networkshortestpathnodes.java-41-		}
org/nlogo/prim/etc/_networkshortestpathnodes.java-42-		return world.linkManager.networkMetrics.networkShortestPathNodes
org/nlogo/prim/etc/_nof.java-23-		{
org/nlogo/prim/etc/_nof.java-24-			throw new EngineException
org/nlogo/prim/etc/_nof.java:25:				( context , this , "first input to " + displayName() +
org/nlogo/prim/etc/_nof.java:26:				  " can't be negative" ) ;
org/nlogo/prim/etc/_nof.java-27-		}
org/nlogo/prim/etc/_nof.java-28-		Object obj = args[ 1 ].report( context ) ;
org/nlogo/prim/etc/_nof.java-33-			{
org/nlogo/prim/etc/_nof.java-34-				throw new EngineException
org/nlogo/prim/etc/_nof.java:35:					( context , this , "requested " + n +
org/nlogo/prim/etc/_nof.java:36:					  " random items from a list of length " +
org/nlogo/prim/etc/_nof.java-37-					  list.size() ) ;
org/nlogo/prim/etc/_nof.java-38-			}
org/nlogo/prim/etc/_nof.java-52-			{
org/nlogo/prim/etc/_nof.java-53-				throw new EngineException
org/nlogo/prim/etc/_nof.java:54:					( context , this , "requested " + n +
org/nlogo/prim/etc/_nof.java:55:					  " random agents from a set of only " +
org/nlogo/prim/etc/_nof.java:56:					  count + " agents" ) ;
org/nlogo/prim/etc/_nof.java-57-			}
org/nlogo/prim/etc/_nof.java-58-			return agents.randomSubset( n , count , context.job.random ) ;
org/nlogo/prim/etc/_oneof.java-24-			{
org/nlogo/prim/etc/_oneof.java-25-				throw new EngineException
org/nlogo/prim/etc/_oneof.java:26:					( context , this , displayName() + " got an empty list as input" ) ;
org/nlogo/prim/etc/_oneof.java-27-			}
org/nlogo/prim/etc/_oneof.java-28-			return list.get( context.job.random.nextInt( size ) ) ;
org/nlogo/prim/etc/_oneof.java-72-		{
org/nlogo/prim/etc/_oneof.java-73-			throw new EngineException
org/nlogo/prim/etc/_oneof.java:74:				( context , this , displayName() + " got an empty list as input" ) ;
org/nlogo/prim/etc/_oneof.java-75-		}
org/nlogo/prim/etc/_oneof.java-76-		return list.get( context.job.random.nextInt( size ) ) ;
org/nlogo/prim/etc/_oneof.java-86-			{
org/nlogo/prim/etc/_oneof.java-87-				throw new EngineException( context , this , displayName()
org/nlogo/prim/etc/_oneof.java:88:						+ " got an empty list as input" ) ;
org/nlogo/prim/etc/_oneof.java-89-			}
org/nlogo/prim/etc/_oneof.java-90-			return list.get( context.job.random.nextInt( size ) ) ;
org/nlogo/prim/etc/_otherend.java-28-			{
org/nlogo/prim/etc/_otherend.java-29-				throw new EngineException( context , this , 
org/nlogo/prim/etc/_otherend.java:30:										   "Only a turtle can get the OTHER-END of a link" ) ;
org/nlogo/prim/etc/_otherend.java-31-			}
org/nlogo/prim/etc/_otherend.java-32-			node = (Turtle) context.myself() ;
org/nlogo/prim/etc/_otherend.java-38-			{
org/nlogo/prim/etc/_otherend.java-39-				throw new EngineException( context , this , 
org/nlogo/prim/etc/_otherend.java:40:										   "Only a link can get the OTHER-END from a turtle." ) ;
org/nlogo/prim/etc/_otherend.java-41-			}
org/nlogo/prim/etc/_otherend.java-42-			link = (Link) context.myself() ;
org/nlogo/prim/etc/_otherend.java-55-		
org/nlogo/prim/etc/_otherend.java-56-		throw new EngineException( context , this ,
org/nlogo/prim/etc/_otherend.java:57:								   node.toString() + " is not linked by " + 
org/nlogo/prim/etc/_otherend.java-58-								   link.toString() + ".");
org/nlogo/prim/etc/_otherend.java-59-	}
org/nlogo/prim/etc/_patchatheadinganddistance.java-14-		return Syntax.reporterSyntax
org/nlogo/prim/etc/_patchatheadinganddistance.java-15-			( new int[] { Syntax.TYPE_NUMBER , Syntax.TYPE_NUMBER } ,
org/nlogo/prim/etc/_patchatheadinganddistance.java:16:			  Syntax.TYPE_PATCH , "-TP-" ) ;
org/nlogo/prim/etc/_patchatheadinganddistance.java-17-	}
org/nlogo/prim/etc/_patchatheadinganddistance.java-18-	@Override
org/nlogo/prim/etc/_patchset.java-85-				if( tempSet.type() != org.nlogo.agent.Patch.class )
org/nlogo/prim/etc/_patchset.java-86-				{
org/nlogo/prim/etc/_patchset.java:87:					throw new EngineException( context , this , "List inputs to " + this.displayName() 
org/nlogo/prim/etc/_patchset.java:88:											   + " must only contain patch, patch agentset, or list elements.  The list " 
org/nlogo/prim/etc/_patchset.java-89-											   +  Dump.logoObject( tempList , true , false) 
org/nlogo/prim/etc/_patchset.java:90:											   + " contained a different type agentset: " 
org/nlogo/prim/etc/_patchset.java-91-											   + Dump.logoObject( obj , true , false)); 
org/nlogo/prim/etc/_patchset.java-92-				}
org/nlogo/prim/etc/_patchset.java-103-			else if( ! ( obj instanceof org.nlogo.api.Nobody ) )
org/nlogo/prim/etc/_patchset.java-104-			{
org/nlogo/prim/etc/_patchset.java:105:				throw new EngineException( context , this , "List inputs to " + this.displayName() 
org/nlogo/prim/etc/_patchset.java:106:										   + " must only contain patch, patch agentset, or list elements.  The list " 
org/nlogo/prim/etc/_patchset.java-107-										   +  Dump.logoObject( tempList , true , false) 
org/nlogo/prim/etc/_patchset.java:108:										   + " contained " + Dump.logoObject( obj , true , false) 
org/nlogo/prim/etc/_patchset.java:109:										   + " which is NOT a patch or patch agentset") ;
org/nlogo/prim/etc/_patchset.java-110-			}
org/nlogo/prim/etc/_patchset.java-111-		}
org/nlogo/prim/etc/_pwd.java-24-		if( path == null )
org/nlogo/prim/etc/_pwd.java-25-	    {
org/nlogo/prim/etc/_pwd.java:26:			path = "no model loaded!" ;
org/nlogo/prim/etc/_pwd.java-27-	    }
org/nlogo/prim/etc/_pwd.java-28-		workspace.outputObject
org/nlogo/prim/etc/_randomgamma.java-26-		{
org/nlogo/prim/etc/_randomgamma.java-27-			throw new EngineException
org/nlogo/prim/etc/_randomgamma.java:28:				( context , this , "both inputs to " + displayName() +
org/nlogo/prim/etc/_randomgamma.java:29:				  " must be positive" ) ;
org/nlogo/prim/etc/_randomgamma.java-30-		}
org/nlogo/prim/etc/_randomgamma.java-31-		return validDouble
org/nlogo/prim/etc/_reloadextensions.java-14-	public Syntax getSyntax()
org/nlogo/prim/etc/_reloadextensions.java-15-	{
org/nlogo/prim/etc/_reloadextensions.java:16:		return Syntax.commandSyntax( "OTPL" , true ) ;
org/nlogo/prim/etc/_reloadextensions.java-17-	}
org/nlogo/prim/etc/_reloadextensions.java-18-	@Override
org/nlogo/prim/etc/_remainder.java-27-		if( d2 == 0 )
org/nlogo/prim/etc/_remainder.java-28-		{
org/nlogo/prim/etc/_remainder.java:29:			throw new EngineException( context , this , "division by zero" ) ;
org/nlogo/prim/etc/_remainder.java-30-		}
org/nlogo/prim/etc/_remainder.java-31-		return validDouble( d1 % d2 ) ;
org/nlogo/prim/etc/_removeitem.java-21-		{
org/nlogo/prim/etc/_removeitem.java-22-			throw new EngineException
org/nlogo/prim/etc/_removeitem.java:23:				( context , this  , index + " isn't greater than or equal to zero" ) ;
org/nlogo/prim/etc/_removeitem.java-24-		}
org/nlogo/prim/etc/_removeitem.java-25-		if( obj instanceof LogoList )
org/nlogo/prim/etc/_removeitem.java-29-			{
org/nlogo/prim/etc/_removeitem.java-30-				throw new EngineException
org/nlogo/prim/etc/_removeitem.java:31:					( context , this  , "can't find element " + index + " of the list " +
org/nlogo/prim/etc/_removeitem.java:32:					  Dump.logoObject( list ) + ", which is only of length " +
org/nlogo/prim/etc/_removeitem.java-33-					  list.size() ) ;
org/nlogo/prim/etc/_removeitem.java-34-			}
org/nlogo/prim/etc/_removeitem.java-41-			{
org/nlogo/prim/etc/_removeitem.java-42-				throw new EngineException
org/nlogo/prim/etc/_removeitem.java:43:					( context , this  , "can't find element " + index + " of the string " +
org/nlogo/prim/etc/_removeitem.java-44-					  Dump.logoObject( string ) +
org/nlogo/prim/etc/_removeitem.java:45:					  ", which is only of length " + string.length() ) ;
org/nlogo/prim/etc/_removeitem.java-46-			}
org/nlogo/prim/etc/_removeitem.java-47-			StringBuilder buf = new StringBuilder() ;
org/nlogo/prim/etc/_replaceitem.java-22-		{
org/nlogo/prim/etc/_replaceitem.java-23-			throw new EngineException
org/nlogo/prim/etc/_replaceitem.java:24:				( context , this  , index + " isn't greater than or equal to zero" ) ;
org/nlogo/prim/etc/_replaceitem.java-25-		}
org/nlogo/prim/etc/_replaceitem.java-26-		if( obj instanceof LogoList )
org/nlogo/prim/etc/_replaceitem.java-31-			{
org/nlogo/prim/etc/_replaceitem.java-32-				throw new EngineException
org/nlogo/prim/etc/_replaceitem.java:33:					( context , this  , "can't find element " + index + " of the list " +
org/nlogo/prim/etc/_replaceitem.java:34:					  Dump.logoObject( list ) + ", which is only of length " + list.size() ) ;
org/nlogo/prim/etc/_replaceitem.java-35-			}
org/nlogo/prim/etc/_replaceitem.java-36-			return result ;
org/nlogo/prim/etc/_replaceitem.java-47-			{
org/nlogo/prim/etc/_replaceitem.java-48-				throw new EngineException
org/nlogo/prim/etc/_replaceitem.java:49:					( context , this  , "can't find element " + index + " of the string " +
org/nlogo/prim/etc/_replaceitem.java:50:					  Dump.logoObject( string ) + ", which is only of length " + string.length() ) ;
org/nlogo/prim/etc/_replaceitem.java-51-			}
org/nlogo/prim/etc/_replaceitem.java-52-			return string.substring( 0 , index ) + ( String ) elt + string.substring( index + 1 ) ;
org/nlogo/prim/etc/_resetperspective.java-11-	public Syntax getSyntax()
org/nlogo/prim/etc/_resetperspective.java-12-	{
org/nlogo/prim/etc/_resetperspective.java:13:		return Syntax.commandSyntax( "OTPL" , true ) ;
org/nlogo/prim/etc/_resetperspective.java-14-	}
org/nlogo/prim/etc/_resetperspective.java-15-	@Override
org/nlogo/prim/etc/_resizeworld.java-34-		{
org/nlogo/prim/etc/_resizeworld.java-35-			throw new EngineException
org/nlogo/prim/etc/_resizeworld.java:36:				( context , this , "You must include the point (0, 0) in the world." ) ;
org/nlogo/prim/etc/_resizeworld.java-37-		}
org/nlogo/prim/etc/_resizeworld.java-38-		
org/nlogo/prim/etc/_ride.java-24-		if( turtle.id == -1 )
org/nlogo/prim/etc/_ride.java-25-		{
org/nlogo/prim/etc/_ride.java:26:			throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/etc/_ride.java-27-		}
org/nlogo/prim/etc/_ride.java-28-		world.observer().setPerspective( Perspective.RIDE , turtle ) ;
org/nlogo/prim/etc/_run.java-43-		{
org/nlogo/prim/etc/_run.java-44-			throw new EngineException
org/nlogo/prim/etc/_run.java:45:				( context , this , "syntax error: " + error.getMessage() ) ;
org/nlogo/prim/etc/_run.java-46-		}
org/nlogo/prim/etc/_run.java-47-	}
org/nlogo/prim/etc/_runresult.java-27-			if( result == null )
org/nlogo/prim/etc/_runresult.java-28-			{
org/nlogo/prim/etc/_runresult.java:29:				throw new EngineException( context , this , "failed to report a result" ) ;
org/nlogo/prim/etc/_runresult.java-30-			}
org/nlogo/prim/etc/_runresult.java-31-			return result ;
org/nlogo/prim/etc/_runresult.java-34-		{
org/nlogo/prim/etc/_runresult.java-35-			throw new EngineException
org/nlogo/prim/etc/_runresult.java:36:				( context , this , "syntax error: " + error.getMessage() ) ;
org/nlogo/prim/etc/_runresult.java-37-		}
org/nlogo/prim/etc/_runresult.java-38-		catch( LogoException ex )
org/nlogo/prim/etc/_self.java-13-	{
org/nlogo/prim/etc/_self.java-14-		return Syntax.reporterSyntax
org/nlogo/prim/etc/_self.java:15:			( Syntax.TYPE_AGENT , "-TPL" ) ;
org/nlogo/prim/etc/_self.java-16-	}
org/nlogo/prim/etc/_self.java-17-	@Override
org/nlogo/prim/etc/_setdefaultshape.java-26-		{
org/nlogo/prim/etc/_setdefaultshape.java-27-			throw new EngineException
org/nlogo/prim/etc/_setdefaultshape.java:28:				( context , this  , "cannot set the default shape of patches, because patches do not have shapes" ) ;
org/nlogo/prim/etc/_setdefaultshape.java-29-		}
org/nlogo/prim/etc/_setdefaultshape.java-30-		if( breed.type() == org.nlogo.agent.Observer.class )
org/nlogo/prim/etc/_setdefaultshape.java-31-		{
org/nlogo/prim/etc/_setdefaultshape.java-32-			throw new EngineException
org/nlogo/prim/etc/_setdefaultshape.java:33:				( context , this  , "cannot set the default shape of the observer, because the observer does not have a shape" ) ;
org/nlogo/prim/etc/_setdefaultshape.java-34-		}
org/nlogo/prim/etc/_setdefaultshape.java-35-		if( breed != world.turtles() && ! world.isBreed( breed ) &&
org/nlogo/prim/etc/_setdefaultshape.java-37-		{
org/nlogo/prim/etc/_setdefaultshape.java-38-			throw new EngineException
org/nlogo/prim/etc/_setdefaultshape.java:39:				( context , this  , "can only set the default shape of all turtles , all links, or an entire breed" ) ;
org/nlogo/prim/etc/_setdefaultshape.java-40-		}
org/nlogo/prim/etc/_setdefaultshape.java-41-		if( breed.type() == org.nlogo.agent.Turtle.class )
org/nlogo/prim/etc/_setdefaultshape.java-45-			{
org/nlogo/prim/etc/_setdefaultshape.java-46-				throw new EngineException
org/nlogo/prim/etc/_setdefaultshape.java:47:					( context , this  , "\"" + shape + "\" is not a currently defined turtle shape" ) ;
org/nlogo/prim/etc/_setdefaultshape.java-48-			}
org/nlogo/prim/etc/_setdefaultshape.java-49-			world.turtleBreedShapes.setBreedShape( breed , checkedShape ) ;
org/nlogo/prim/etc/_setdefaultshape.java-55-			{
org/nlogo/prim/etc/_setdefaultshape.java-56-				throw new EngineException
org/nlogo/prim/etc/_setdefaultshape.java:57:					( context , this  , "\"" + shape + "\" is not a currently defined link shape" ) ;
org/nlogo/prim/etc/_setdefaultshape.java-58-			}
org/nlogo/prim/etc/_setdefaultshape.java-59-			world.linkBreedShapes.setBreedShape( breed , checkedShape ) ;
org/nlogo/prim/etc/_setxy.java-43-			throw new EngineException
org/nlogo/prim/etc/_setxy.java-44-				( context , this ,
org/nlogo/prim/etc/_setxy.java:45:				  "The point [ "
org/nlogo/prim/etc/_setxy.java-46-				  + newx.doubleValue() + " , "
org/nlogo/prim/etc/_setxy.java-47-				  + newy.doubleValue() + " ] "
org/nlogo/prim/etc/_setxy.java:48:				  + "is outside of the boundaries of the world "
org/nlogo/prim/etc/_setxy.java:49:				  + "and wrapping is not permitted in one or both directions." ) ;
org/nlogo/prim/etc/_setxy.java-50-        }
org/nlogo/prim/etc/_setxy.java-51-        context.ip = next ;
org/nlogo/prim/etc/_setxy.java-64-			throw new EngineException
org/nlogo/prim/etc/_setxy.java-65-				( context , this ,
org/nlogo/prim/etc/_setxy.java:66:				  "The point [ "
org/nlogo/prim/etc/_setxy.java-67-				  + xvalue + " , "
org/nlogo/prim/etc/_setxy.java-68-				  + yvalue + " ] "
org/nlogo/prim/etc/_setxy.java:69:				  + "is outside of the boundaries of the world "
org/nlogo/prim/etc/_setxy.java:70:				  + "and wrapping is not permitted in one or both directions." ) ;
org/nlogo/prim/etc/_setxy.java-71-        }
org/nlogo/prim/etc/_setxy.java-72-        context.ip = next ;
org/nlogo/prim/etc/_sqrt.java-23-		if( arg0 < 0 )
org/nlogo/prim/etc/_sqrt.java-24-		{
org/nlogo/prim/etc/_sqrt.java:25:			throw new EngineException( context , this , "the square root of " + arg0
org/nlogo/prim/etc/_sqrt.java:26:					+ " is an imaginary number" ) ;
org/nlogo/prim/etc/_sqrt.java-27-		}
org/nlogo/prim/etc/_sqrt.java-28-		return StrictMath.sqrt( arg0 ) ;
org/nlogo/prim/etc/_standarddeviation.java-42-		{
org/nlogo/prim/etc/_standarddeviation.java-43-			throw new EngineException
org/nlogo/prim/etc/_standarddeviation.java:44:				( context , this , "can't find the standard deviation of a list without at least two numbers: " +
org/nlogo/prim/etc/_standarddeviation.java-45-				  Dump.logoObject( list ) ) ;
org/nlogo/prim/etc/_standarddeviation.java-46-		}
org/nlogo/prim/etc/_stop.java-25-		if( ! context.atTopActivation() )
org/nlogo/prim/etc/_stop.java-26-	    {
org/nlogo/prim/etc/_stop.java-29-			context.finished = true ;
org/nlogo/prim/etc/_stop.java-31-		else
org/nlogo/prim/etc/_stop.java-32-	    {
org/nlogo/prim/etc/_stop.java-37-		    {
org/nlogo/prim/etc/_stop.java-38-				throw new EngineException
org/nlogo/prim/etc/_stop.java:39:					( context , this , displayName() + " is not allowed inside TO-REPORT" ) ;
org/nlogo/prim/etc/_stop.java-40-		    }
org/nlogo/prim/etc/_stop.java-41-			if( context.activation.procedure.topLevel )
org/nlogo/prim/etc/_stop.java-85-		    {
org/nlogo/prim/etc/_stop.java-86-				throw new EngineException
org/nlogo/prim/etc/_stop.java:87:					( context , this , displayName() + " is not allowed inside TO-REPORT" ) ;
org/nlogo/prim/etc/_stop.java-88-		    }
org/nlogo/prim/etc/_sublist.java-21-		{
org/nlogo/prim/etc/_sublist.java-22-			throw new EngineException
org/nlogo/prim/etc/_sublist.java:23:				( context , this  , start + " is less than zero" ) ;
org/nlogo/prim/etc/_sublist.java-24-		}
org/nlogo/prim/etc/_sublist.java-25-		else if( stop < start )
org/nlogo/prim/etc/_sublist.java-26-		{
org/nlogo/prim/etc/_sublist.java-27-			throw new EngineException
org/nlogo/prim/etc/_sublist.java:28:				( context , this  , stop + " is less than " + start ) ;
org/nlogo/prim/etc/_sublist.java-29-		}
org/nlogo/prim/etc/_sublist.java-30-		else if( stop > size )
org/nlogo/prim/etc/_sublist.java-31-		{
org/nlogo/prim/etc/_sublist.java-32-			throw new EngineException
org/nlogo/prim/etc/_sublist.java:33:				( context , this  , stop + " is greater than the length of the input list (" +
org/nlogo/prim/etc/_sublist.java-34-				  size + ")" ) ;
org/nlogo/prim/etc/_sublist.java-35-		}
org/nlogo/prim/etc/_substring.java-20-		{
org/nlogo/prim/etc/_substring.java-21-			throw new EngineException
org/nlogo/prim/etc/_substring.java:22:				( context , this  , start + " isn't greater than or equal to zero " ) ;
org/nlogo/prim/etc/_substring.java-23-		}
org/nlogo/prim/etc/_substring.java-24-		else if( start > stop )
org/nlogo/prim/etc/_substring.java-25-		{
org/nlogo/prim/etc/_substring.java-26-			throw new EngineException
org/nlogo/prim/etc/_substring.java:27:				( context , this  , start + " is greater than " + stop ) ;
org/nlogo/prim/etc/_substring.java-28-		}
org/nlogo/prim/etc/_substring.java-29-		else if( stop > string.length() )
org/nlogo/prim/etc/_substring.java-30-		{
org/nlogo/prim/etc/_substring.java-31-			throw new EngineException
org/nlogo/prim/etc/_substring.java:32:				( context , this  , stop + " is too big for " + Dump.logoObject( string ) + 
org/nlogo/prim/etc/_substring.java:33:				  ", which is only of length " + string.length() ) ;
org/nlogo/prim/etc/_substring.java-34-		}
org/nlogo/prim/etc/_substring.java-35-		return string.substring( start , stop ) ;
org/nlogo/prim/etc/_tickadvance.scala-12-      throw new EngineException(
org/nlogo/prim/etc/_tickadvance.scala-13-        context, this,
org/nlogo/prim/etc/_tickadvance.scala:14:        "Cannot advance the tick counter by a negative amount")
org/nlogo/prim/etc/_tickadvance.scala-15-    if(world.tickCounter.ticks == -1)
org/nlogo/prim/etc/_tickadvance.scala-16-      throw new EngineException(
org/nlogo/prim/etc/_tickadvance.scala-17-        context, this,
org/nlogo/prim/etc/_tickadvance.scala:18:        "The tick counter has not been started yet. Use RESET-TICKS." )
org/nlogo/prim/etc/_tickadvance.scala-19-    world.tickCounter.tick(amount)
org/nlogo/prim/etc/_tickadvance.scala-20-    workspace.requestDisplayUpdate(false)
org/nlogo/prim/etc/_ticks.java-25-			throw new EngineException(
org/nlogo/prim/etc/_ticks.java-26-				context , this ,
org/nlogo/prim/etc/_ticks.java:27:				"The tick counter has not been started yet. Use RESET-TICKS." ) ;
org/nlogo/prim/etc/_ticks.java-28-		}
org/nlogo/prim/etc/_ticks.java-29-		return result ;
org/nlogo/prim/etc/_time.java-19-	public String report_1( final org.nlogo.nvm.Context context )
org/nlogo/prim/etc/_time.java-20-	{
org/nlogo/prim/etc/_time.java:21:		return new java.text.SimpleDateFormat( "hh:mm:ss.SSS a dd-MMM-yyyy" )
org/nlogo/prim/etc/_time.java-22-			.format( new java.util.Date() ) ;
org/nlogo/prim/etc/_time.java-23-	}
org/nlogo/prim/etc/_towards.java-13-	{
org/nlogo/prim/etc/_towards.java-14-		int[] right = { Syntax.TYPE_TURTLE | Syntax.TYPE_PATCH } ;
org/nlogo/prim/etc/_towards.java:15:		return Syntax.reporterSyntax( right , Syntax.TYPE_NUMBER , "-TP-" ) ;
org/nlogo/prim/etc/_towards.java-16-	}
org/nlogo/prim/etc/_towards.java-17-	@Override public Object report( Context context ) throws LogoException
org/nlogo/prim/etc/_towards.java-21-		{
org/nlogo/prim/etc/_towards.java-22-			throw new EngineException
org/nlogo/prim/etc/_towards.java:23:				( context , this , "expected this to be a turtle or a patch but got a link instead" ) ;
org/nlogo/prim/etc/_towards.java-24-		}
org/nlogo/prim/etc/_towards.java-25-		if( agent.id == -1 )
org/nlogo/prim/etc/_towards.java-26-		{
org/nlogo/prim/etc/_towards.java:27:			throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/etc/_towards.java-28-		}
org/nlogo/prim/etc/_towards.java-29-		try
org/nlogo/prim/etc/_towardsnowrap.java-12-	{
org/nlogo/prim/etc/_towardsnowrap.java-13-		int[] right = { Syntax.TYPE_TURTLE | Syntax.TYPE_PATCH } ;
org/nlogo/prim/etc/_towardsnowrap.java:14:		return Syntax.reporterSyntax( right , Syntax.TYPE_NUMBER , "-TP-" ) ;
org/nlogo/prim/etc/_towardsnowrap.java-15-	}
org/nlogo/prim/etc/_towardsnowrap.java-16-	@Override public Object report( Context context ) throws LogoException
org/nlogo/prim/etc/_towardsnowrap.java-21-			throw new EngineException
org/nlogo/prim/etc/_towardsnowrap.java-22-				( context , this , 
org/nlogo/prim/etc/_towardsnowrap.java:23:				  "expected this to be a turtle or a patch but got a link instead" ) ;
org/nlogo/prim/etc/_towardsnowrap.java-24-		}
org/nlogo/prim/etc/_towardsnowrap.java-25-		if( agent.id == -1 )
org/nlogo/prim/etc/_towardsnowrap.java-26-		{
org/nlogo/prim/etc/_towardsnowrap.java:27:			throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/etc/_towardsnowrap.java-28-		}
org/nlogo/prim/etc/_towardsnowrap.java-29-		try
org/nlogo/prim/etc/_towardsxy.java-14-						Syntax.TYPE_NUMBER } ;
org/nlogo/prim/etc/_towardsxy.java-15-		int ret = Syntax.TYPE_NUMBER ;
org/nlogo/prim/etc/_towardsxy.java:16:		return Syntax.reporterSyntax( right , ret , "-TP-" ) ;
org/nlogo/prim/etc/_towardsxy.java-17-	}
org/nlogo/prim/etc/_towardsxy.java-18-	@Override public Object report( Context context ) throws LogoException
org/nlogo/prim/etc/_towardsxynowrap.java-13-		int[] right = { Syntax.TYPE_NUMBER , Syntax.TYPE_NUMBER } ;
org/nlogo/prim/etc/_towardsxynowrap.java-14-		return Syntax.reporterSyntax
org/nlogo/prim/etc/_towardsxynowrap.java:15:			( right , Syntax.TYPE_NUMBER , "-TP-" ) ;
org/nlogo/prim/etc/_towardsxynowrap.java-16-	}
org/nlogo/prim/etc/_towardsxynowrap.java-17-	@Override public Object report( Context context ) throws LogoException
org/nlogo/prim/etc/_turtlesat.java-14-		return Syntax.reporterSyntax
org/nlogo/prim/etc/_turtlesat.java-15-			( new int[] { Syntax.TYPE_NUMBER , Syntax.TYPE_NUMBER } ,
org/nlogo/prim/etc/_turtlesat.java:16:			  Syntax.TYPE_TURTLESET , "-TP-" ) ;
org/nlogo/prim/etc/_turtlesat.java-17-	}
org/nlogo/prim/etc/_turtlesat.java-18-	@Override
org/nlogo/prim/etc/_turtleset.java-86-				if( tempSet.type() != org.nlogo.agent.Turtle.class )
org/nlogo/prim/etc/_turtleset.java-87-				{
org/nlogo/prim/etc/_turtleset.java:88:					throw new EngineException( context , this , "List inputs to " + this.displayName() 
org/nlogo/prim/etc/_turtleset.java:89:											   + " must only contain turtle or turtle agentset elements.  The list " 
org/nlogo/prim/etc/_turtleset.java-90-											   +  Dump.logoObject( tempList , true , false) 
org/nlogo/prim/etc/_turtleset.java:91:											   + " contained a different type agentset: " 
org/nlogo/prim/etc/_turtleset.java-92-											   + Dump.logoObject( obj , true , false)); 
org/nlogo/prim/etc/_turtleset.java-93-				}
org/nlogo/prim/etc/_turtleset.java-104-			else if( ! ( obj instanceof org.nlogo.api.Nobody ) )
org/nlogo/prim/etc/_turtleset.java-105-			{
org/nlogo/prim/etc/_turtleset.java:106:				throw new EngineException( context , this , "List inputs to " + this.displayName() 
org/nlogo/prim/etc/_turtleset.java:107:										   + " must only contain turtle or turtle agentset elements.  The list " 
org/nlogo/prim/etc/_turtleset.java-108-										   +  Dump.logoObject( tempList , true , false) 
org/nlogo/prim/etc/_turtleset.java:109:										   + " contained " + Dump.logoObject( obj , true , false) 
org/nlogo/prim/etc/_turtleset.java:110:										   + " which is NOT a turtle or turtle agentset") ;
org/nlogo/prim/etc/_turtleset.java-111-			}
org/nlogo/prim/etc/_turtleset.java-112-		}
org/nlogo/prim/etc/_turtleshere.java-17-	{
org/nlogo/prim/etc/_turtleshere.java-18-		return Syntax.reporterSyntax
org/nlogo/prim/etc/_turtleshere.java:19:			( Syntax.TYPE_TURTLESET , "-TP-" ) ;
org/nlogo/prim/etc/_turtleshere.java-20-	}
org/nlogo/prim/etc/_turtleshere.java-21-	@Override
org/nlogo/prim/etc/_turtleson.java-33-			if( turtle.id == -1 )
org/nlogo/prim/etc/_turtleson.java-34-			{
org/nlogo/prim/etc/_turtleson.java:35:				throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/etc/_turtleson.java-36-			}
org/nlogo/prim/etc/_turtleson.java-37-			addAll( resultList , turtle.getPatchHere().turtlesHere() ) ;
org/nlogo/prim/etc/_variance.java-42-			throw new EngineException
org/nlogo/prim/etc/_variance.java-43-				( context , this  ,
org/nlogo/prim/etc/_variance.java:44:				  "can't find the variance of a list without at least two numbers: " +
org/nlogo/prim/etc/_variance.java-45-				  Dump.logoObject( list ) ) ;
org/nlogo/prim/etc/_variance.java-46-		}
org/nlogo/prim/etc/_watch.java-23-		if( agent.id == -1 )
org/nlogo/prim/etc/_watch.java-24-		{
org/nlogo/prim/etc/_watch.java:25:			throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/etc/_watch.java-26-		}
org/nlogo/prim/etc/_watch.java-27-		world.observer().home() ;
org/nlogo/prim/etc/_watchme.java-11-	public Syntax getSyntax()
org/nlogo/prim/etc/_watchme.java-12-	{
org/nlogo/prim/etc/_watchme.java:13:		return Syntax.commandSyntax( "-TPL" , true ) ;
org/nlogo/prim/etc/_watchme.java-14-	}
org/nlogo/prim/etc/_watchme.java-15-	@Override
org/nlogo/prim/etc/_withmax.java-23-			  Syntax.NORMAL_PRECEDENCE + 2 ,
org/nlogo/prim/etc/_withmax.java-24-			  false , // left associative
org/nlogo/prim/etc/_withmax.java:25:			  "OTPL" ,
org/nlogo/prim/etc/_withmax.java-26-			  "?"    // takes reporter block of unknown agent type
org/nlogo/prim/etc/_withmax.java-27-				) ;
org/nlogo/prim/etc/_withmin.java-23-			  Syntax.NORMAL_PRECEDENCE + 2 ,
org/nlogo/prim/etc/_withmin.java-24-			  false , // left associative
org/nlogo/prim/etc/_withmin.java:25:			  "OTPL" ,
org/nlogo/prim/etc/_withmin.java-26-			  "?"    // takes reporter block of unknown agent type
org/nlogo/prim/etc/_withmin.java-27-				) ;
org/nlogo/prim/gui/_bench.java-20-		final int minTime = argEvalIntValue( context , 0 ) ;
org/nlogo/prim/gui/_bench.java-21-		final int maxTime = argEvalIntValue( context , 1 ) ;
org/nlogo/prim/gui/_bench.java:22:		new Thread( "__bench" ) {
org/nlogo/prim/gui/_bench.java-23-			@Override public void run() {
org/nlogo/prim/gui/_bench.java-24-				Benchmarker.benchmark( (AbstractWorkspace) workspace , minTime , maxTime ) ;
org/nlogo/prim/gui/_exportinterface.java-22-		{
org/nlogo/prim/gui/_exportinterface.java-23-			throw new EngineException(
org/nlogo/prim/gui/_exportinterface.java:24:				context , this , token().name() + " can only be used in the GUI" ) ;
org/nlogo/prim/gui/_exportinterface.java-25-		}
org/nlogo/prim/gui/_exportinterface.java-26-		( (GUIWorkspace) workspace).forceDisplayAndTicksUpdates() ;
org/nlogo/prim/gui/_inspect.java-15-		{
org/nlogo/prim/gui/_inspect.java-16-			throw new EngineException
org/nlogo/prim/gui/_inspect.java:17:				( context , this , "that turtle is dead" ) ;
org/nlogo/prim/gui/_inspect.java-18-		}
org/nlogo/prim/gui/_inspect.java-19-		org.nlogo.awt.Utils.invokeLater
org/nlogo/prim/gui/_inspectwithradius.java-16-		{
org/nlogo/prim/gui/_inspectwithradius.java-17-			throw new EngineException
org/nlogo/prim/gui/_inspectwithradius.java:18:				( context , this , "that turtle is dead" ) ;
org/nlogo/prim/gui/_inspectwithradius.java-19-		}
org/nlogo/prim/gui/_inspectwithradius.java-20-		if( radius < 0 || radius > ( ( world.worldWidth() - 1 ) / 2 ) )
org/nlogo/prim/gui/_inspectwithradius.java-21-	    {
org/nlogo/prim/gui/_inspectwithradius.java-22-			throw new EngineException
org/nlogo/prim/gui/_inspectwithradius.java:23:				( context , this , "the radius must be between 0 and " + ( (world.worldWidth() - 1 ) / 2 ) ) ;
org/nlogo/prim/gui/_inspectwithradius.java-24-		}
org/nlogo/prim/gui/_inspectwithradius.java-25-		
org/nlogo/prim/gui/_load3Dshapes.java-32-			catch( org.nlogo.shape.InvalidShapeDescriptionException e )
org/nlogo/prim/gui/_load3Dshapes.java-33-			{
org/nlogo/prim/gui/_load3Dshapes.java:34:				throw new EngineException( context , this , "Invalid shape file" ) ;
org/nlogo/prim/gui/_load3Dshapes.java-35-			}
org/nlogo/prim/gui/_load3Dshapes.java-36-		}
org/nlogo/prim/gui/_makepreview.java-22-		{
org/nlogo/prim/gui/_makepreview.java-23-			throw new EngineException(
org/nlogo/prim/gui/_makepreview.java:24:				context , this , token().name() + " can only be used in the GUI" ) ;
org/nlogo/prim/gui/_makepreview.java-25-		}
org/nlogo/prim/gui/_makepreview.java-26-		// must create separate thread, we can't block the job thread
org/nlogo/prim/gui/_makepreview.java:27:		new Thread( "_makepreview" ) {
org/nlogo/prim/gui/_makepreview.java-28-			@Override public void run() {
org/nlogo/prim/gui/_makepreview.java-29-				String modelPath = workspace.getModelPath() ;
org/nlogo/prim/gui/_makepreview.java-30-				makePreview( (GUIWorkspace) workspace ,
org/nlogo/prim/gui/_makepreview.java:31:							 modelPath.substring( 0 , modelPath.lastIndexOf( ".nlogo" ) ) + ".png" ) ;
org/nlogo/prim/gui/_makepreview.java-32-			} }.start() ;
org/nlogo/prim/gui/_makepreview.java-33-		context.ip = next ;
org/nlogo/prim/gui/_makepreview.java-39-		{
org/nlogo/prim/gui/_makepreview.java-40-			String previewCommands = workspace.previewCommands ;
org/nlogo/prim/gui/_makepreview.java:41:			workspace.evaluateCommands( "random-seed 0" );
org/nlogo/prim/gui/_makepreview.java-42-			workspace.evaluateCommands( previewCommands ) ;
org/nlogo/prim/gui/_makepreview.java-43-			workspace.displaySwitchOn( true ) ;
org/nlogo/prim/gui/_makepreview.java-44-			workspace.evaluateCommands(
org/nlogo/prim/gui/_makepreview.java:45:				"export-view \"" + org.nlogo.api.StringUtils.escapeString( previewPath ) + "\"" ) ;
org/nlogo/prim/gui/_makepreview.java:46:			System.out.println( "GENERATED: " + previewPath ) ;
org/nlogo/prim/gui/_makepreview.java-47-		}
org/nlogo/prim/gui/_makepreview.java-48-		catch( CompilerException ex )
org/nlogo/prim/gui/_makepreview.java-49-		{
org/nlogo/prim/gui/_makepreview.java-50-			System.out.println
org/nlogo/prim/gui/_makepreview.java:51:				( "FAILED: " + previewPath + " (" + ex.getMessage() + ")" ) ;
org/nlogo/prim/gui/_makepreview.java-52-		}
org/nlogo/prim/gui/_makepreview.java-53-		finally
org/nlogo/prim/gui/_moviecancel.java-21-		{
org/nlogo/prim/gui/_moviecancel.java-22-			throw new EngineException(
org/nlogo/prim/gui/_moviecancel.java:23:				context , this , token().name() + " can only be used in the GUI" ) ;
org/nlogo/prim/gui/_moviecancel.java-24-		}
org/nlogo/prim/gui/_moviecancel.java-25-		workspace.waitFor
org/nlogo/prim/gui/_movieclose.java-21-		{
org/nlogo/prim/gui/_movieclose.java-22-			throw new EngineException(
org/nlogo/prim/gui/_movieclose.java:23:				context , this , token().name() + " can only be used in the GUI" ) ;
org/nlogo/prim/gui/_movieclose.java-24-		}
org/nlogo/prim/gui/_movieclose.java-25-		workspace.waitFor
org/nlogo/prim/gui/_movieclose.java-30-							throw new EngineException
org/nlogo/prim/gui/_movieclose.java-31-								( context , _movieclose.this ,
org/nlogo/prim/gui/_movieclose.java:32:								  "Must call MOVIE-START first" ) ;
org/nlogo/prim/gui/_movieclose.java-33-						}
org/nlogo/prim/gui/_movieclose.java-34-						
org/nlogo/prim/gui/_movieclose.java-41-									  ( (GUIWorkspace) workspace ).movieEncoder = null;
org/nlogo/prim/gui/_movieclose.java-42-								  } }, 
org/nlogo/prim/gui/_movieclose.java:43:							  "Exporting movie..." ) ;
org/nlogo/prim/gui/_movieclose.java-44-					} } ) ;
org/nlogo/prim/gui/_movieclose.java-45-		context.ip = next ;
org/nlogo/prim/gui/_moviegrabinterface.java-21-		{
org/nlogo/prim/gui/_moviegrabinterface.java-22-			throw new EngineException(
org/nlogo/prim/gui/_moviegrabinterface.java:23:				context , this , token().name() + " can only be used in the GUI" ) ;
org/nlogo/prim/gui/_moviegrabinterface.java-24-		}
org/nlogo/prim/gui/_moviegrabinterface.java-25-		if( world.program().is3D )
org/nlogo/prim/gui/_moviegrabinterface.java-27-			throw new EngineException(
org/nlogo/prim/gui/_moviegrabinterface.java-28-				context , this ,
org/nlogo/prim/gui/_moviegrabinterface.java:29:				token().name()  + " is not supported in NetLogo 3D" ) ;
org/nlogo/prim/gui/_moviegrabinterface.java-30-		}
org/nlogo/prim/gui/_moviegrabinterface.java-31-		((GUIWorkspace)workspace).forceDisplayAndTicksUpdates() ;
org/nlogo/prim/gui/_moviegrabinterface.java-39-								throw new EngineException
org/nlogo/prim/gui/_moviegrabinterface.java-40-									( context , _moviegrabinterface.this ,
org/nlogo/prim/gui/_moviegrabinterface.java:41:									  "Must call MOVIE-START first" ) ;
org/nlogo/prim/gui/_moviegrabinterface.java-42-							}
org/nlogo/prim/gui/_moviegrabinterface.java-43-							( (GUIWorkspace) workspace )
org/nlogo/prim/gui/_moviegrabview.java-21-		{
org/nlogo/prim/gui/_moviegrabview.java-22-			throw new EngineException(
org/nlogo/prim/gui/_moviegrabview.java:23:				context , this , token().name() + " can only be used in the GUI" ) ;
org/nlogo/prim/gui/_moviegrabview.java-24-		}
org/nlogo/prim/gui/_moviegrabview.java-25-		workspace.waitFor
org/nlogo/prim/gui/_moviegrabview.java-32-								throw new EngineException
org/nlogo/prim/gui/_moviegrabview.java-33-									( context , _moviegrabview.this ,
org/nlogo/prim/gui/_moviegrabview.java:34:									  "Must call MOVIE-START first" ) ;
org/nlogo/prim/gui/_moviegrabview.java-35-							}
org/nlogo/prim/gui/_moviegrabview.java-36-							( (GUIWorkspace) workspace )
org/nlogo/prim/gui/_moviesetframerate.java-23-		{
org/nlogo/prim/gui/_moviesetframerate.java-24-			throw new EngineException(
org/nlogo/prim/gui/_moviesetframerate.java:25:				context , this , token().name() + " can only be used in the GUI" ) ;
org/nlogo/prim/gui/_moviesetframerate.java-26-		}
org/nlogo/prim/gui/_moviesetframerate.java-27-		workspace.waitFor
org/nlogo/prim/gui/_moviesetframerate.java-37-								throw new EngineException
org/nlogo/prim/gui/_moviesetframerate.java-38-									( context , _moviesetframerate.this ,
org/nlogo/prim/gui/_moviesetframerate.java:39:									  "Must call MOVIE-START first" ) ;
org/nlogo/prim/gui/_moviesetframerate.java-40-							}
org/nlogo/prim/gui/_moviesetframerate.java-41-							if( encoder.isSetup() )
org/nlogo/prim/gui/_moviesetframerate.java-43-								throw new EngineException
org/nlogo/prim/gui/_moviesetframerate.java-44-									( context , _moviesetframerate.this ,
org/nlogo/prim/gui/_moviesetframerate.java:45:									  "Can't change frame rate after frames have been grabbed" ) ;
org/nlogo/prim/gui/_moviesetframerate.java-46-							}
org/nlogo/prim/gui/_moviesetframerate.java-47-							encoder.setFrameRate( framerate ) ;
org/nlogo/prim/gui/_moviestart.java-22-		{
org/nlogo/prim/gui/_moviestart.java-23-			throw new EngineException(
org/nlogo/prim/gui/_moviestart.java:24:				context , this , token().name() + " can only be used in the GUI" ) ;
org/nlogo/prim/gui/_moviestart.java-25-		}
org/nlogo/prim/gui/_moviestart.java-26-		final String filePath ;
org/nlogo/prim/gui/_moviestart.java-35-			throw new EngineException
org/nlogo/prim/gui/_moviestart.java-36-				( context , _moviestart.this ,
org/nlogo/prim/gui/_moviestart.java:37:				  argEvalString( context, 0 ) + " is not a valid path name: " + ex.getMessage() ) ;
org/nlogo/prim/gui/_moviestart.java-38-		}
org/nlogo/prim/gui/_moviestart.java-39-		workspace.waitFor
org/nlogo/prim/gui/_moviestart.java-48-							throw new EngineException
org/nlogo/prim/gui/_moviestart.java-49-								( context , _moviestart.this ,
org/nlogo/prim/gui/_moviestart.java:50:								  "There is already a movie being made. Must call MOVIE-CLOSE or MOVIE-CANCEL" ) ;
org/nlogo/prim/gui/_moviestart.java-51-						}
org/nlogo/prim/gui/_moviestart.java-52-						( (GUIWorkspace) workspace ).movieEncoder = 
org/nlogo/prim/gui/_moviestatus.java-20-		{
org/nlogo/prim/gui/_moviestatus.java-21-			throw new EngineException(
org/nlogo/prim/gui/_moviestatus.java:22:				context , this , token().name() + " can only be used in the GUI" ) ;
org/nlogo/prim/gui/_moviestatus.java-23-		}
org/nlogo/prim/gui/_moviestatus.java-24-		org.nlogo.awt.MovieEncoder encoder = 
org/nlogo/prim/gui/_moviestatus.java-27-		if ( encoder == null )
org/nlogo/prim/gui/_moviestatus.java-28-		{
org/nlogo/prim/gui/_moviestatus.java:29:			return "No movie.";
org/nlogo/prim/gui/_moviestatus.java-30-		}
org/nlogo/prim/gui/_moviestatus.java:31:		String status =  "" + encoder.getNumFrames() + " frames"
org/nlogo/prim/gui/_moviestatus.java:32:			+ "; frame rate = " + encoder.getFrameRate() ;
org/nlogo/prim/gui/_moviestatus.java-33-		
org/nlogo/prim/gui/_moviestatus.java-34-		if ( encoder.isSetup() ) 
org/nlogo/prim/gui/_moviestatus.java-35-		{
org/nlogo/prim/gui/_moviestatus.java-36-			java.awt.Dimension size = encoder.getFrameSize();
org/nlogo/prim/gui/_moviestatus.java:37:			status += "; size = " + size.width + "x" + size.height;
org/nlogo/prim/gui/_moviestatus.java-38-		}
org/nlogo/prim/gui/_moviestatus.java-39-		return status;
org/nlogo/prim/gui/_reload.java-19-		{
org/nlogo/prim/gui/_reload.java-20-			throw new EngineException(
org/nlogo/prim/gui/_reload.java:21:				context , this , token().name() + " can only be used in the GUI" ) ;
org/nlogo/prim/gui/_reload.java-22-		}
org/nlogo/prim/gui/_reload.java-23-		( (GUIWorkspace) workspace ).reload() ;
org/nlogo/prim/gui/_userdirectory.java-21-		{
org/nlogo/prim/gui/_userdirectory.java-22-			throw new EngineException
org/nlogo/prim/gui/_userdirectory.java:23:				( context , this , "You cannot choose a file from an applet." ) ;
org/nlogo/prim/gui/_userdirectory.java-24-		}
org/nlogo/prim/gui/_userdirectory.java-25-		Object result = null ;
org/nlogo/prim/gui/_userdirectory.java-39-								return org.nlogo.swing.FileDialog.show 
org/nlogo/prim/gui/_userdirectory.java-40-									( ( (GUIWorkspace) workspace ).getFrame() ,
org/nlogo/prim/gui/_userdirectory.java:41:									  "Choose Directory" ,
org/nlogo/prim/gui/_userdirectory.java-42-									  java.awt.FileDialog.LOAD ,
org/nlogo/prim/gui/_userdirectory.java-43-									  true // directories only please
org/nlogo/prim/gui/_userdirectory.java-53-		else
org/nlogo/prim/gui/_userdirectory.java-54-		{
org/nlogo/prim/gui/_userdirectory.java:55:			throw new EngineException( context , this , "You can't get user input headless." ) ;
org/nlogo/prim/gui/_userdirectory.java-56-		}
org/nlogo/prim/gui/_userdirectory.java-57-		if( result == null )
org/nlogo/prim/gui/_userdirectory.java-58-		{
org/nlogo/prim/gui/_userdirectory.java:59:			throw new EngineException( context , this , "This directory does not exist" ) ;
org/nlogo/prim/gui/_userdirectory.java-60-		}
org/nlogo/prim/gui/_userdirectory.java-61-		return result ;
org/nlogo/prim/gui/_userfile.java-21-		{
org/nlogo/prim/gui/_userfile.java-22-			throw new EngineException
org/nlogo/prim/gui/_userfile.java:23:				( context , this , "You cannot choose a file from an applet." ) ;
org/nlogo/prim/gui/_userfile.java-24-		}
org/nlogo/prim/gui/_userfile.java-25-		Object result = null ;
org/nlogo/prim/gui/_userfile.java-38-								return org.nlogo.swing.FileDialog.show 
org/nlogo/prim/gui/_userfile.java-39-									( ( (GUIWorkspace) workspace ).getFrame() ,
org/nlogo/prim/gui/_userfile.java:40:									  "Choose File" ,
org/nlogo/prim/gui/_userfile.java-41-									  java.awt.FileDialog.LOAD ) ;
org/nlogo/prim/gui/_userfile.java-42-							}
org/nlogo/prim/gui/_userfile.java-49-		else
org/nlogo/prim/gui/_userfile.java-50-		{
org/nlogo/prim/gui/_userfile.java:51:			throw new EngineException( context , this , "You can't get user input headless." ) ;
org/nlogo/prim/gui/_userfile.java-52-		}
org/nlogo/prim/gui/_userfile.java-53-		if( result == null )
org/nlogo/prim/gui/_userfile.java-58-			! new java.io.File( (String) result ).exists() )
org/nlogo/prim/gui/_userfile.java-59-		{
org/nlogo/prim/gui/_userfile.java:60:			throw new EngineException( context , this , "This file doesn't exist" ) ;
org/nlogo/prim/gui/_userfile.java-61-		}
org/nlogo/prim/gui/_userfile.java-62-		return result ;
org/nlogo/prim/gui/_userinput.java-32-								new org.nlogo.swing.InputDialog
org/nlogo/prim/gui/_userinput.java-33-								( ( (GUIWorkspace)workspace ).getFrame() ,
org/nlogo/prim/gui/_userinput.java:34:								  "User Input" ,
org/nlogo/prim/gui/_userinput.java-35-								  Dump.logoObject
org/nlogo/prim/gui/_userinput.java-36-								  ( inputMessage ) ).showInputDialog() ;
org/nlogo/prim/gui/_userinput.java-42-			return result ;
org/nlogo/prim/gui/_userinput.java-43-		}
org/nlogo/prim/gui/_userinput.java:44:		throw new EngineException( context , this , "You can't get user input headless." ) ;
org/nlogo/prim/gui/_userinput.java-45-	}
org/nlogo/prim/gui/_userinput.java-46-}
org/nlogo/prim/gui/_usermessage.java-30-							  return ( 1 == org.nlogo.swing.OptionDialog.show
org/nlogo/prim/gui/_usermessage.java-31-									   ( ( (GUIWorkspace) workspace ).getFrame() ,
org/nlogo/prim/gui/_usermessage.java:32:										 "User Message" ,
org/nlogo/prim/gui/_usermessage.java-33-										 Dump.logoObject( object ) ,
org/nlogo/prim/gui/_usermessage.java-35-								  ? Boolean.TRUE
org/nlogo/prim/gui/_usermessage.java-36-								  : Boolean.FALSE ;
org/nlogo/prim/gui/_usernewfile.java-21-		{
org/nlogo/prim/gui/_usernewfile.java-22-			throw new EngineException
org/nlogo/prim/gui/_usernewfile.java:23:				( context , this , "You cannot choose a file from an applet." ) ;
org/nlogo/prim/gui/_usernewfile.java-24-		}
org/nlogo/prim/gui/_usernewfile.java-25-		Object result = null ;
org/nlogo/prim/gui/_usernewfile.java-38-								return org.nlogo.swing.FileDialog.show
org/nlogo/prim/gui/_usernewfile.java-39-									( ( (GUIWorkspace) workspace ).getFrame() ,
org/nlogo/prim/gui/_usernewfile.java:40:									  "Choose New File" ,
org/nlogo/prim/gui/_usernewfile.java-41-									  java.awt.FileDialog.SAVE ) ;
org/nlogo/prim/gui/_usernewfile.java-42-							}
org/nlogo/prim/gui/_usernewfile.java-49-		else
org/nlogo/prim/gui/_usernewfile.java-50-		{
org/nlogo/prim/gui/_usernewfile.java:51:			throw new EngineException( context , this , "You can't get user input headless." ) ;
org/nlogo/prim/gui/_usernewfile.java-52-		}
org/nlogo/prim/gui/_usernewfile.java-53-		if( result == null )
org/nlogo/prim/gui/_useroneof.java-35-							return new org.nlogo.swing.OptionDialog
org/nlogo/prim/gui/_useroneof.java-36-								( ( (GUIWorkspace) workspace ).getFrame() ,
org/nlogo/prim/gui/_useroneof.java:37:								  "User One Of" ,
org/nlogo/prim/gui/_useroneof.java-38-								  Dump.logoObject( choiceMessage ) ,
org/nlogo/prim/gui/_useroneof.java-39-								  items.toArray( new String[] {} ) ).showOptionDialog() ; } } ) ;
org/nlogo/prim/gui/_useroneof.java-45-			return list.get( c ) ;
org/nlogo/prim/gui/_useroneof.java-46-		}
org/nlogo/prim/gui/_useroneof.java:47:		throw new EngineException( context , this , "You can't get user input headless." ) ;
org/nlogo/prim/gui/_useroneof.java-48-	}
org/nlogo/prim/gui/_useroneof.java-49-	@Override
org/nlogo/prim/gui/_useryesorno.java-30-								.view.mouseDown( false ) ;
org/nlogo/prim/gui/_useryesorno.java-31-							switch( org.nlogo.swing.OptionDialog.showIgnoringCloseBox
org/nlogo/prim/gui/_useryesorno.java:32:									( ( (GUIWorkspace) workspace ).getFrame() , "User Yes or No" ,
org/nlogo/prim/gui/_useryesorno.java-33-									  Dump.logoObject( yesNoMessage ) ,
org/nlogo/prim/gui/_useryesorno.java:34:									  new String[] { "Yes" , "No" , "Halt" } , false ) )
org/nlogo/prim/gui/_useryesorno.java-35-							{
org/nlogo/prim/gui/_useryesorno.java-36-							   case 0 :
org/nlogo/prim/gui/_useryesorno.java-48-			return result ;
org/nlogo/prim/gui/_useryesorno.java-49-		}
org/nlogo/prim/gui/_useryesorno.java:50:		throw new EngineException( context , this , "You can't get user input headless." ) ;
org/nlogo/prim/gui/_useryesorno.java-51-	}
org/nlogo/prim/gui/_useryesorno.java-52-}
org/nlogo/prim/hubnet/_hubnetclearoverride.java-19-				{ Syntax.TYPE_STRING , Syntax.TYPE_AGENTSET | Syntax.TYPE_AGENT , 
org/nlogo/prim/hubnet/_hubnetclearoverride.java-20-				  Syntax.TYPE_STRING } ,
org/nlogo/prim/hubnet/_hubnetclearoverride.java:21:			      "OTPL" , "?" , false ) ;
org/nlogo/prim/hubnet/_hubnetclearoverride.java-22-	}
org/nlogo/prim/hubnet/_hubnetclearoverride.java-23-	@Override
org/nlogo/prim/hubnet/_hubnetclearoverrides.java-11-	public Syntax getSyntax()
org/nlogo/prim/hubnet/_hubnetclearoverrides.java-12-	{
org/nlogo/prim/hubnet/_hubnetclearoverrides.java:13:		return Syntax.commandSyntax( new int[] { Syntax.TYPE_STRING } , "OTPL" , false ) ;
org/nlogo/prim/hubnet/_hubnetclearoverrides.java-14-	}
org/nlogo/prim/hubnet/_hubnetclearoverrides.java-15-	@Override
org/nlogo/prim/hubnet/_hubnetmakeplotnarrowcast.java-28-						throw new EngineException
org/nlogo/prim/hubnet/_hubnetmakeplotnarrowcast.java-29-							( context , _hubnetmakeplotnarrowcast.this ,
org/nlogo/prim/hubnet/_hubnetmakeplotnarrowcast.java:30:							  "no such plot: \"" + name + "\"" ) ;
org/nlogo/prim/hubnet/_hubnetmakeplotnarrowcast.java-31-					}
org/nlogo/prim/hubnet/_hubnetmakeplotnarrowcast.java-32-				} } ) ;
org/nlogo/prim/hubnet/_hubnetresetperspective.java-14-			( new int[] 
org/nlogo/prim/hubnet/_hubnetresetperspective.java-15-				{ Syntax.TYPE_STRING } ,
org/nlogo/prim/hubnet/_hubnetresetperspective.java:16:			      "OTPL" , false ) ;
org/nlogo/prim/hubnet/_hubnetresetperspective.java-17-	}
org/nlogo/prim/hubnet/_hubnetresetperspective.java-18-	@Override
org/nlogo/prim/hubnet/_hubnetsend.java-33-				{
org/nlogo/prim/hubnet/_hubnetsend.java-34-					throw new EngineException
org/nlogo/prim/hubnet/_hubnetsend.java:35:						( context , this, "HUBNET-SEND expected "
org/nlogo/prim/hubnet/_hubnetsend.java-36-						  + Syntax.aTypeName( Syntax.TYPE_STRING| Syntax.TYPE_LIST )
org/nlogo/prim/hubnet/_hubnetsend.java:37:						  + " of strings as the first input, but one item is the "
org/nlogo/prim/hubnet/_hubnetsend.java-38-						  + Syntax.typeName( node ) + " " +
org/nlogo/prim/hubnet/_hubnetsend.java-39-						  Dump.logoObject( node )
org/nlogo/prim/hubnet/_hubnetsend.java:40:						  + " instead" ) ;
org/nlogo/prim/hubnet/_hubnetsend.java-41-				}
org/nlogo/prim/hubnet/_hubnetsend.java-42-				nodes.add( (String) node ) ;
org/nlogo/prim/hubnet/_hubnetsendclearoutput.java-28-				{
org/nlogo/prim/hubnet/_hubnetsendclearoutput.java-29-					throw new EngineException
org/nlogo/prim/hubnet/_hubnetsendclearoutput.java:30:						( context , this, "HUBNET-SEND expected "
org/nlogo/prim/hubnet/_hubnetsendclearoutput.java-31-						  + Syntax.aTypeName( Syntax.TYPE_STRING| Syntax.TYPE_LIST )
org/nlogo/prim/hubnet/_hubnetsendclearoutput.java:32:						  + " of strings as the first input, but one item is the "
org/nlogo/prim/hubnet/_hubnetsendclearoutput.java-33-						  + Syntax.typeName( node ) + " " +
org/nlogo/prim/hubnet/_hubnetsendclearoutput.java-34-						  Dump.logoObject( node )
org/nlogo/prim/hubnet/_hubnetsendclearoutput.java:35:						  + " instead" ) ;
org/nlogo/prim/hubnet/_hubnetsendclearoutput.java-36-				}
org/nlogo/prim/hubnet/_hubnetsendclearoutput.java-37-				nodes.add( (String) node ) ;
org/nlogo/prim/hubnet/_hubnetsendfollow.java-16-			( new int[] 
org/nlogo/prim/hubnet/_hubnetsendfollow.java-17-				{ Syntax.TYPE_STRING , Syntax.TYPE_AGENT , Syntax.TYPE_NUMBER } ,
org/nlogo/prim/hubnet/_hubnetsendfollow.java:18:			      "OTPL" , false ) ;
org/nlogo/prim/hubnet/_hubnetsendfollow.java-19-	}
org/nlogo/prim/hubnet/_hubnetsendfollow.java-20-	@Override
org/nlogo/prim/hubnet/_hubnetsendmessage.java-29-				{
org/nlogo/prim/hubnet/_hubnetsendmessage.java-30-					throw new EngineException
org/nlogo/prim/hubnet/_hubnetsendmessage.java:31:						( context , this, "HUBNET-SEND expected "
org/nlogo/prim/hubnet/_hubnetsendmessage.java-32-						  + Syntax.aTypeName( Syntax.TYPE_STRING| Syntax.TYPE_LIST )
org/nlogo/prim/hubnet/_hubnetsendmessage.java:33:						  + " of strings as the first input, but one item is the "
org/nlogo/prim/hubnet/_hubnetsendmessage.java-34-						  + Syntax.typeName( node ) + " " +
org/nlogo/prim/hubnet/_hubnetsendmessage.java-35-						  Dump.logoObject( node )
org/nlogo/prim/hubnet/_hubnetsendmessage.java:36:						  + " instead" ) ;
org/nlogo/prim/hubnet/_hubnetsendmessage.java-37-				}
org/nlogo/prim/hubnet/_hubnetsendmessage.java-38-				nodes.add( (String) node ) ;
org/nlogo/prim/hubnet/_hubnetsendoverride.scala-10-  override def getSyntax = Syntax.commandSyntax(
org/nlogo/prim/hubnet/_hubnetsendoverride.scala-11-    Array(TYPE_STRING, TYPE_AGENTSET | TYPE_AGENT, TYPE_STRING, TYPE_REPORTER_BLOCK),
org/nlogo/prim/hubnet/_hubnetsendoverride.scala:12:    "OTPL", "?", false)
org/nlogo/prim/hubnet/_hubnetsendoverride.scala-13-
org/nlogo/prim/hubnet/_hubnetsendoverride.scala-14-  @throws(classOf[LogoException])
org/nlogo/prim/hubnet/_hubnetsendoverride.scala-24-        aas
org/nlogo/prim/hubnet/_hubnetsendoverride.scala-25-      case as: AgentSet => as
org/nlogo/prim/hubnet/_hubnetsendoverride.scala:26:      case _ => throw new IllegalStateException("cant happen...")
org/nlogo/prim/hubnet/_hubnetsendoverride.scala-27-    }
org/nlogo/prim/hubnet/_hubnetsendoverride.scala-28-
org/nlogo/prim/hubnet/_hubnetsendusermessage.java-29-				{
org/nlogo/prim/hubnet/_hubnetsendusermessage.java-30-					throw new EngineException
org/nlogo/prim/hubnet/_hubnetsendusermessage.java:31:						( context , this, "HUBNET-SEND expected "
org/nlogo/prim/hubnet/_hubnetsendusermessage.java-32-						  + Syntax.aTypeName( Syntax.TYPE_STRING| Syntax.TYPE_LIST )
org/nlogo/prim/hubnet/_hubnetsendusermessage.java:33:						  + " of strings as the first input, but one item is the "
org/nlogo/prim/hubnet/_hubnetsendusermessage.java-34-						  + Syntax.typeName( node ) + " " +
org/nlogo/prim/hubnet/_hubnetsendusermessage.java-35-						  Dump.logoObject( node )
org/nlogo/prim/hubnet/_hubnetsendusermessage.java:36:						  + " instead" ) ;
org/nlogo/prim/hubnet/_hubnetsendusermessage.java-37-				}
org/nlogo/prim/hubnet/_hubnetsendusermessage.java-38-				nodes.add( (String) node ) ;
org/nlogo/prim/hubnet/_hubnetsendwatch.java-16-			( new int[] 
org/nlogo/prim/hubnet/_hubnetsendwatch.java-17-				{ Syntax.TYPE_STRING , Syntax.TYPE_AGENT } ,
org/nlogo/prim/hubnet/_hubnetsendwatch.java:18:			      "OTPL" , false ) ;
org/nlogo/prim/hubnet/_hubnetsendwatch.java-19-	}
org/nlogo/prim/hubnet/_hubnetsendwatch.java-20-	@Override
org/nlogo/prim/hubnet/_hubnetsetplotpenmode.java-21-							throw new EngineException
org/nlogo/prim/hubnet/_hubnetsetplotpenmode.java-22-								( context , _hubnetsetplotpenmode.this , mode
org/nlogo/prim/hubnet/_hubnetsetplotpenmode.java:23:								  + " is not a valid plot pen mode "
org/nlogo/prim/hubnet/_hubnetsetplotpenmode.java:24:								  + "(valid modes are 0, 1, and 2)" );
org/nlogo/prim/hubnet/_hubnetsetplotpenmode.java-25-						}
org/nlogo/prim/hubnet/_hubnetsetplotpenmode.java-26-						workspace.getHubNetManager().setPlotPenMode( name , mode ) ;
org/nlogo/prim/plot/_plotprims.scala-22-    val name = argEvalString(context, 0)
org/nlogo/prim/plot/_plotprims.scala-23-    val plot = plotManager.getPlot(name)
org/nlogo/prim/plot/_plotprims.scala:24:    if (plot == null) { throw new EngineException(context, this, "no such plot: \"" + name + "\"") }
org/nlogo/prim/plot/_plotprims.scala-25-    plotManager.setCurrentPlot(plot)
org/nlogo/prim/plot/_plotprims.scala-26-    context.ip = next
org/nlogo/prim/plot/_plotprims.scala-41-    if (min >= max) {
org/nlogo/prim/plot/_plotprims.scala-42-      throw new EngineException(context, this,
org/nlogo/prim/plot/_plotprims.scala:43:        "the minimum must be less than the maximum, but " +  min + " is greater than or equal to " + max)
org/nlogo/prim/plot/_plotprims.scala-44-    }
org/nlogo/prim/plot/_plotprims.scala-45-    p.xMin=min
org/nlogo/prim/plot/_plotprims.scala-55-    if (min >= max) {
org/nlogo/prim/plot/_plotprims.scala-56-      throw new EngineException(context, this,
org/nlogo/prim/plot/_plotprims.scala:57:        "the minimum must be less than the maximum, but " +  min + " is greater than or equal to " + max)
org/nlogo/prim/plot/_plotprims.scala-58-    }
org/nlogo/prim/plot/_plotprims.scala-59-    p.yMin=min
org/nlogo/prim/plot/_plotprims.scala-87-    val numBars = argEvalIntValue(context, 0)
org/nlogo/prim/plot/_plotprims.scala-88-    if (numBars < 1) {
org/nlogo/prim/plot/_plotprims.scala:89:      throw new EngineException(context, this, "You cannot make a histogram with " + numBars + " bars.")
org/nlogo/prim/plot/_plotprims.scala-90-    }
org/nlogo/prim/plot/_plotprims.scala-91-    plot.setHistogramNumBars(plot.currentPenOrBust, numBars)
org/nlogo/prim/plot/_plotprims.scala-98-    val path = argEvalString(context, 1)
org/nlogo/prim/plot/_plotprims.scala-99-    if (plotManager.getPlot(name) == null) {
org/nlogo/prim/plot/_plotprims.scala:100:      throw new EngineException(context, this, "no such plot: \"" + name + "\"")
org/nlogo/prim/plot/_plotprims.scala-101-    }
org/nlogo/prim/plot/_plotprims.scala-102-    // Workspace.waitFor() switches to the event thread if we're
org/nlogo/prim/plot/_plotprims.scala-120-    val path = argEvalString(context, 0)
org/nlogo/prim/plot/_plotprims.scala-121-    if (plotManager.getPlotNames.length == 0) {
org/nlogo/prim/plot/_plotprims.scala:122:      throw new EngineException(context, this, "there are no plots to export")
org/nlogo/prim/plot/_plotprims.scala-123-    }
org/nlogo/prim/plot/_plotprims.scala-124-    // Workspace.waitFor() switches to the event thread if we're
org/nlogo/prim/plot/_plotprims.scala-175-    val mode = argEvalIntValue(c, 0)
org/nlogo/prim/plot/_plotprims.scala-176-    if (mode < PlotPenInterface.MIN_MODE || mode > PlotPenInterface.MAX_MODE) {
org/nlogo/prim/plot/_plotprims.scala:177:      throw new EngineException(c, this, mode + " is not a valid plot pen mode (valid modes are 0, 1, and 2)")
org/nlogo/prim/plot/_plotprims.scala-178-    }
org/nlogo/prim/plot/_plotprims.scala-179-    p.currentPenOrBust.mode = mode
org/nlogo/prim/plot/_plotprims.scala-192-    p.currentPen = p.getPen(penName).getOrElse(
org/nlogo/prim/plot/_plotprims.scala-193-      throw new EngineException(
org/nlogo/prim/plot/_plotprims.scala:194:        c, this, "There is no pen named \"" + penName + "\" in the current plot"))
org/nlogo/prim/plot/_plotprims.scala-195-  }
org/nlogo/prim/plot/_plotprims.scala-196-}
org/nlogo/prim/threed/_breedat.java-24-						Syntax.TYPE_NUMBER } ;
org/nlogo/prim/threed/_breedat.java-25-		int ret = Syntax.TYPE_TURTLESET ;
org/nlogo/prim/threed/_breedat.java:26:		return Syntax.reporterSyntax( right , ret , "-TP-" ) ;
org/nlogo/prim/threed/_breedat.java-27-	}
org/nlogo/prim/threed/_breedat.java-28-	@Override
org/nlogo/prim/threed/_distancexyz.java-15-						Syntax.TYPE_NUMBER } ;
org/nlogo/prim/threed/_distancexyz.java-16-		int ret = Syntax.TYPE_NUMBER ;
org/nlogo/prim/threed/_distancexyz.java:17:		return Syntax.reporterSyntax( right , ret , "-TP-" ) ;
org/nlogo/prim/threed/_distancexyz.java-18-	}
org/nlogo/prim/threed/_distancexyz.java-19-	@Override
org/nlogo/prim/threed/_distancexyznowrap.java-16-						Syntax.TYPE_NUMBER } ;
org/nlogo/prim/threed/_distancexyznowrap.java-17-		int ret = Syntax.TYPE_NUMBER ;
org/nlogo/prim/threed/_distancexyznowrap.java:18:		return Syntax.reporterSyntax( right , ret , "-TP-" ) ;
org/nlogo/prim/threed/_distancexyznowrap.java-19-	}
org/nlogo/prim/threed/_distancexyznowrap.java-20-	@Override
org/nlogo/prim/threed/_facexyz.java-17-						  Syntax.TYPE_NUMBER ,
org/nlogo/prim/threed/_facexyz.java-18-						  Syntax.TYPE_NUMBER } ,
org/nlogo/prim/threed/_facexyz.java:19:			  "OT--" , true ) ;
org/nlogo/prim/threed/_facexyz.java-20-	}
org/nlogo/prim/threed/_facexyz.java-21-	@Override
org/nlogo/prim/threed/_layoutsphere.java-32-			throw new EngineException
org/nlogo/prim/threed/_layoutsphere.java-33-				( context , this ,
org/nlogo/prim/threed/_layoutsphere.java:34:				  "Patches are immovable." ) ;
org/nlogo/prim/threed/_layoutsphere.java-35-		}
org/nlogo/prim/threed/_layoutsphere.java-36-		org.nlogo.agent.Layouts.sphere( set , radius , initTemp , context.job.random ) ;
org/nlogo/prim/threed/_linkpitch.java-30-			throw new org.nlogo.nvm.EngineException
org/nlogo/prim/threed/_linkpitch.java-31-				( context , this , 
org/nlogo/prim/threed/_linkpitch.java:32:				  "there is no pitch of a link whose endpoints are in the same position" ) ;
org/nlogo/prim/threed/_linkpitch.java-33-		}
org/nlogo/prim/threed/_linkpitch.java-34-	}
org/nlogo/prim/threed/_neighbors6.java-11-	{
org/nlogo/prim/threed/_neighbors6.java-12-		return Syntax.reporterSyntax
org/nlogo/prim/threed/_neighbors6.java:13:			( Syntax.TYPE_PATCHSET , "-TP-" ) ;
org/nlogo/prim/threed/_neighbors6.java-14-	}
org/nlogo/prim/threed/_neighbors6.java-15-	@Override
org/nlogo/prim/threed/_patchat.java-17-						 Syntax.TYPE_NUMBER } ;
org/nlogo/prim/threed/_patchat.java-18-		int ret = Syntax.TYPE_PATCH ;
org/nlogo/prim/threed/_patchat.java:19:		return Syntax.reporterSyntax( right , ret , "-TP-" ) ;
org/nlogo/prim/threed/_patchat.java-20-	}
org/nlogo/prim/threed/_patchat.java-21-	@Override
org/nlogo/prim/threed/_patchatheadingpitchanddistance.java-13-		return Syntax.reporterSyntax
org/nlogo/prim/threed/_patchatheadingpitchanddistance.java-14-			( new int[] { Syntax.TYPE_NUMBER , Syntax.TYPE_NUMBER , Syntax.TYPE_NUMBER } ,
org/nlogo/prim/threed/_patchatheadingpitchanddistance.java:15:			  Syntax.TYPE_PATCH , "-TP-" ) ;
org/nlogo/prim/threed/_patchatheadingpitchanddistance.java-16-	}
org/nlogo/prim/threed/_patchatheadingpitchanddistance.java-17-	@Override
org/nlogo/prim/threed/_resizeworld.java-38-		{
org/nlogo/prim/threed/_resizeworld.java-39-			throw new EngineException
org/nlogo/prim/threed/_resizeworld.java:40:				( context , this , "You must include the point (0, 0, 0) in the world." ) ;
org/nlogo/prim/threed/_resizeworld.java-41-		}
org/nlogo/prim/threed/_resizeworld.java-42-		if( oldMinX != newMinX || oldMaxX != newMaxX ||
org/nlogo/prim/threed/_setxyz.java-15-						Syntax.TYPE_NUMBER , 
org/nlogo/prim/threed/_setxyz.java-16-						Syntax.TYPE_NUMBER } ;
org/nlogo/prim/threed/_setxyz.java:17:		return Syntax.commandSyntax( right , "OT--" , true ) ;
org/nlogo/prim/threed/_setxyz.java-18-	}
org/nlogo/prim/threed/_setxyz.java-19-	@Override
org/nlogo/prim/threed/_setxyz.java-53-				throw new EngineException
org/nlogo/prim/threed/_setxyz.java-54-					( context , this ,
org/nlogo/prim/threed/_setxyz.java:55:					  "The point [ "
org/nlogo/prim/threed/_setxyz.java-56-					  + newx.doubleValue() + " , "
org/nlogo/prim/threed/_setxyz.java-57-					  + newy.doubleValue() + " , "
org/nlogo/prim/threed/_setxyz.java-58-					  + newz.doubleValue() + " ] "
org/nlogo/prim/threed/_setxyz.java:59:					  + "is outside of the boundaries of the world "
org/nlogo/prim/threed/_setxyz.java:60:					  + "and wrapping is not permitted in one or both directions." ) ;
org/nlogo/prim/threed/_setxyz.java-61-			}
org/nlogo/prim/threed/_setxyz.java-62-
org/nlogo/prim/threed/_towardspitch.java-14-		int[] right = { Syntax.TYPE_TURTLE | Syntax.TYPE_PATCH } ;
org/nlogo/prim/threed/_towardspitch.java-15-		int ret = Syntax.TYPE_NUMBER ;
org/nlogo/prim/threed/_towardspitch.java:16:		return Syntax.reporterSyntax( right , ret , "-TP-" ) ;
org/nlogo/prim/threed/_towardspitch.java-17-	}
org/nlogo/prim/threed/_towardspitch.java-18-	@Override
org/nlogo/prim/threed/_towardspitch.java-22-		if( agent.id == -1 )
org/nlogo/prim/threed/_towardspitch.java-23-		{
org/nlogo/prim/threed/_towardspitch.java:24:			throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/threed/_towardspitch.java-25-		}
org/nlogo/prim/threed/_towardspitch.java-26-		try
org/nlogo/prim/threed/_towardspitchnowrap.java-14-		int[] right = { Syntax.TYPE_TURTLE | Syntax.TYPE_PATCH } ;
org/nlogo/prim/threed/_towardspitchnowrap.java-15-		int ret = Syntax.TYPE_NUMBER ;
org/nlogo/prim/threed/_towardspitchnowrap.java:16:		return Syntax.reporterSyntax( right , ret , "-TP-" ) ;
org/nlogo/prim/threed/_towardspitchnowrap.java-17-	}
org/nlogo/prim/threed/_towardspitchnowrap.java-18-	@Override
org/nlogo/prim/threed/_towardspitchnowrap.java-22-		if( agent.id == -1 )
org/nlogo/prim/threed/_towardspitchnowrap.java-23-		{
org/nlogo/prim/threed/_towardspitchnowrap.java:24:			throw new EngineException( context , this , "that turtle is dead" ) ;
org/nlogo/prim/threed/_towardspitchnowrap.java-25-		}
org/nlogo/prim/threed/_towardspitchnowrap.java-26-		try
org/nlogo/prim/threed/_towardspitchxyz.java-16-						Syntax.TYPE_NUMBER } ;
org/nlogo/prim/threed/_towardspitchxyz.java-17-		int ret = Syntax.TYPE_NUMBER ;
org/nlogo/prim/threed/_towardspitchxyz.java:18:		return Syntax.reporterSyntax( right , ret , "-TP-" ) ;
org/nlogo/prim/threed/_towardspitchxyz.java-19-	}
org/nlogo/prim/threed/_towardspitchxyz.java-20-	@Override
org/nlogo/prim/threed/_towardspitchxyznowrap.java-16-						Syntax.TYPE_NUMBER } ;
org/nlogo/prim/threed/_towardspitchxyznowrap.java-17-		int ret = Syntax.TYPE_NUMBER ;
org/nlogo/prim/threed/_towardspitchxyznowrap.java:18:		return Syntax.reporterSyntax( right , ret , "-TP-" ) ;
org/nlogo/prim/threed/_towardspitchxyznowrap.java-19-	}
org/nlogo/prim/threed/_towardspitchxyznowrap.java-20-	@Override
org/nlogo/prim/threed/_turtlesat.java-15-						 Syntax.TYPE_NUMBER } ;
org/nlogo/prim/threed/_turtlesat.java-16-		int ret = Syntax.TYPE_TURTLESET ;
org/nlogo/prim/threed/_turtlesat.java:17:		return Syntax.reporterSyntax( right , ret , "-TP-" ) ;
org/nlogo/prim/threed/_turtlesat.java-18-	}
org/nlogo/prim/threed/_turtlesat.java-19-	@Override
org/nlogo/properties/CodeEditor.scala-25-    class Dummy extends DummyEditable {var dummy = ""}
org/nlogo/properties/CodeEditor.scala-26-
org/nlogo/properties/CodeEditor.scala:27:    val accessor = new PropertyAccessor[String](new Dummy, displayName, "dummy"){
org/nlogo/properties/CodeEditor.scala-28-      override def error = err
org/nlogo/properties/CodeEditor.scala-29-    }
org/nlogo/properties/ColorEditor.scala-13-
org/nlogo/properties/ColorEditor.scala-14-  private val colorIcon = new ColorIcon
org/nlogo/properties/ColorEditor.scala:15:  private val colorButton = new JButton("0 (black)", colorIcon)
org/nlogo/properties/ColorEditor.scala-16-  private val originalColor: Color = accessor.get
org/nlogo/properties/ColorEditor.scala-17-
org/nlogo/properties/ColorEditor.scala-26-    val colorString = c match {
org/nlogo/properties/ColorEditor.scala-27-    // black and white are special cases
org/nlogo/properties/ColorEditor.scala:28:      case 0 => "0 (black)"
org/nlogo/properties/ColorEditor.scala:29:      case 9.9 => "9.9 (white)"
org/nlogo/properties/ColorEditor.scala-30-      case _ =>
org/nlogo/properties/ColorEditor.scala-31-        val index = (c / 10).asInstanceOf[Int]
org/nlogo/properties/EditDialog.scala-43-    else new EditPanel(target, compiler, colorizer)
org/nlogo/properties/EditDialog.scala-44-
org/nlogo/properties/EditDialog.scala:45:  val okButton = new javax.swing.JButton(I18N.gui.get("common.buttons.ok"))
org/nlogo/properties/EditDialog.scala-46-  okButton.addActionListener{() =>
org/nlogo/properties/EditDialog.scala-47-    if(editPanel.valid) {
org/nlogo/properties/EditDialog.scala-52-
org/nlogo/properties/EditDialog.scala-53-  var sendEditFinishedOnCancel = false
org/nlogo/properties/EditDialog.scala:54:  val applyButton = PimpedJButton(I18N.gui.get("common.buttons.apply")){
org/nlogo/properties/EditDialog.scala-55-    if(editPanel.valid) {
org/nlogo/properties/EditDialog.scala-56-      sendEditFinishedOnCancel = true
org/nlogo/properties/EditDialog.scala-60-  }
org/nlogo/properties/EditDialog.scala-61-
org/nlogo/properties/EditDialog.scala:62:  val cancelButton = PimpedJButton(I18N.gui.get("common.buttons.cancel")){ cancel(target) }
org/nlogo/properties/EditDialog.scala:63:  val helpButton = PimpedJButton(I18N.gui.get("common.buttons.help")){
org/nlogo/properties/EditDialog.scala-64-    val link = target.helpLink.getOrElse("")
org/nlogo/properties/EditDialog.scala-65-    val mainLink = if(link.contains('#')) link.takeWhile(_!='#') else link
org/nlogo/properties/EditPanel.scala-17-    !(target.isInstanceOf[org.nlogo.window.ChooserWidget] ||
org/nlogo/properties/EditPanel.scala-127-      if(!value.isDefined && !editor.handlesOwnErrors)
org/nlogo/properties/EditPanel.scala-128-        org.nlogo.swing.OptionDialog.show(frame,
org/nlogo/properties/EditPanel.scala:129:          "Invalid Entry", "Invalid value for " + editor.accessor.displayName,
org/nlogo/properties/EditPanel.scala-131-      value.isDefined
org/nlogo/properties/EditPanel.scala-132-    }
org/nlogo/properties/InputBoxEditor.scala-14-  
org/nlogo/properties/InputBoxEditor.scala-15-  private val typeCombo: JComboBox = new JComboBox
org/nlogo/properties/InputBoxEditor.scala:16:  private val multiline: JCheckBox = new JCheckBox("Multi-Line")
org/nlogo/properties/InputBoxEditor.scala-17-  private val options: Options[InputBox#InputType] = accessor.get
org/nlogo/properties/InputBoxEditor.scala-18-  private val originalOption: InputBox#InputType = accessor.get.chosenValue
org/nlogo/properties/PlotPensEditor.scala-17-class PlotPensEditor(accessor: PropertyAccessor[List[PlotPen]], colorizer: Colorizer[TokenType])
org/nlogo/properties/PlotPensEditor.scala-18-        extends PropertyEditor(accessor, handlesOwnErrors = true) {
org/nlogo/properties/PlotPensEditor.scala:19:  private implicit val i18nPrefix = I18N.Prefix("edit.plot.pen")
org/nlogo/properties/PlotPensEditor.scala-20-  val plot = accessor.target.asInstanceOf[PlotWidget].plot
org/nlogo/properties/PlotPensEditor.scala-21-  val plotManager = accessor.target.asInstanceOf[PlotWidget].plotManager
org/nlogo/properties/PlotPensEditor.scala-25-
org/nlogo/properties/PlotPensEditor.scala-26-  add(new JScrollPane(table), BorderLayout.CENTER)
org/nlogo/properties/PlotPensEditor.scala:27:  add(new JPanel {add(PimpedJButton(I18N.gui("add")) {table.newPen})}, BorderLayout.SOUTH)
org/nlogo/properties/PlotPensEditor.scala-28-
org/nlogo/properties/PlotPensEditor.scala-29-  // border
org/nlogo/properties/PlotPensEditor.scala:30:  val title = createTitledBorder(createEtchedBorder(EtchedBorder.LOWERED), I18N.gui("plotPens"))
org/nlogo/properties/PlotPensEditor.scala-31-  title.setTitleJustification(TitledBorder.LEFT)
org/nlogo/properties/PlotPensEditor.scala-32-  setBorder(title)
org/nlogo/properties/PlotPensEditor.scala-41-    val names = table.model.pens.map(_.name)
org/nlogo/properties/PlotPensEditor.scala-42-    if(names.toSet.size < names.size){
org/nlogo/properties/PlotPensEditor.scala:43:      org.nlogo.swing.OptionDialog.show(frame, "Invalid Entry", "Pens list contains duplicate names.", Array("OK"))
org/nlogo/properties/PlotPensEditor.scala-44-      None
org/nlogo/properties/PlotPensEditor.scala-45-    } else Some(table.getPlotPens)
org/nlogo/properties/PlotPensEditor.scala-78-                 setupError: Option[Exception] = None,
org/nlogo/properties/PlotPensEditor.scala-79-                 updateError: Option[Exception] = None) {
org/nlogo/properties/PlotPensEditor.scala:80:    override def toString = "Pen(" + name + ", " + updateCode + "," + color + ")"
org/nlogo/properties/PlotPensEditor.scala-81-
org/nlogo/properties/PlotPensEditor.scala-82-    def hasErrors = setupError.isDefined || updateError.isDefined
org/nlogo/properties/PlotPensEditor.scala-107-  class PlotPensTable extends JTable { table =>
org/nlogo/properties/PlotPensEditor.scala-108-
org/nlogo/properties/PlotPensEditor.scala:109:    val UpdateCommandsColumnName = I18N.gui("updateCommands")
org/nlogo/properties/PlotPensEditor.scala:110:    val NameColumnName = I18N.gui("name")
org/nlogo/properties/PlotPensEditor.scala:111:    val ColorColumnName = I18N.gui("color")
org/nlogo/properties/PlotPensEditor.scala:112:    val ButtonsColumnName = "Buttons"
org/nlogo/properties/PlotPensEditor.scala-113-    def updateCommandsColumn = getColumn(UpdateCommandsColumnName)
org/nlogo/properties/PlotPensEditor.scala-114-    def nameColumn = getColumn(NameColumnName)
org/nlogo/properties/PlotPensEditor.scala-156-    // add a dummy pen to the list so that the user can then modify it.
org/nlogo/properties/PlotPensEditor.scala-157-    def newPen {
org/nlogo/properties/PlotPensEditor.scala:158:      val nextName = "pen-" + model.pens.size
org/nlogo/properties/PlotPensEditor.scala-159-      val nextColor = {
org/nlogo/properties/PlotPensEditor.scala-160-        val colorsInUse:List[ColorInfo] = model.pens.toList.map(_.color)
org/nlogo/properties/PlotPensEditor.scala-212-    def openAdvancedPenEditor(editingPen: Pen) {
org/nlogo/properties/PlotPensEditor.scala-213-      val p = new PlotPenEditorAdvanced(editingPen)
org/nlogo/properties/PlotPensEditor.scala:214:      new org.nlogo.swing.Popup(frame, I18N.gui("editing") + " " + editingPen.name, p, (), {
org/nlogo/properties/PlotPensEditor.scala-215-        p.getResult match {
org/nlogo/properties/PlotPensEditor.scala-216-          case Some(p) =>
org/nlogo/properties/PlotPensEditor.scala-226-    // renders the delete and edit buttons for each column
org/nlogo/properties/PlotPensEditor.scala-227-    class ButtonCellEditor extends AbstractCellEditor with TableCellRenderer with TableCellEditor {
org/nlogo/properties/PlotPensEditor.scala:228:      val editButton = PimpedJButton(new javax.swing.ImageIcon(getClass.getResource("/images/edit.gif"))) {
org/nlogo/properties/PlotPensEditor.scala-229-        println(getSelectedRow)
org/nlogo/properties/PlotPensEditor.scala-230-        openAdvancedPenEditor(model.pens(getSelectedRow))
org/nlogo/properties/PlotPensEditor.scala-231-      }
org/nlogo/properties/PlotPensEditor.scala:232:      val deleteButton = PimpedJButton(new javax.swing.ImageIcon(getClass.getResource("/images/delete.gif"))) {
org/nlogo/properties/PlotPensEditor.scala-233-        val index = getSelectedRow
org/nlogo/properties/PlotPensEditor.scala-234-        removeEditor()
org/nlogo/properties/PlotPensEditor.scala-236-        removePen(index)
org/nlogo/properties/PlotPensEditor.scala-237-      }
org/nlogo/properties/PlotPensEditor.scala:238:      editButton.putClientProperty("JComponent.sizeVariant", "small")
org/nlogo/properties/PlotPensEditor.scala:239:      deleteButton.putClientProperty("JComponent.sizeVariant", "small")
org/nlogo/properties/PlotPensEditor.scala-240-      val buttonPanel = new JPanel {add(editButton); add(deleteButton)}
org/nlogo/properties/PlotPensEditor.scala-241-      def getTableCellRendererComponent(table: JTable, value: Object,
org/nlogo/properties/PlotPensEditor.scala-352-    private val intervalField = new org.nlogo.swing.TextField("", 8)
org/nlogo/properties/PlotPensEditor.scala-353-    private val penModes = new JComboBox(PlotPen.getPlotPenModeNames.asInstanceOf[Array[Object]])
org/nlogo/properties/PlotPensEditor.scala:354:    private val showPenInLegend = new JCheckBox(I18N.gui("showInLegend"), true)
org/nlogo/properties/PlotPensEditor.scala:355:    val setupCode = CodeEditor(I18N.gui("setupCommands"), colorizer, columns = 65, err=inputPen.setupError)
org/nlogo/properties/PlotPensEditor.scala:356:    val updateCode = CodeEditor(I18N.gui("updateCommands"), colorizer, columns = 65, err=inputPen.updateError)
org/nlogo/properties/PlotPensEditor.scala-357-    
org/nlogo/properties/PlotPensEditor.scala-358-    // layout all the pieces of the ui
org/nlogo/properties/PlotPensEditor.scala-377-          case ex: NumberFormatException =>
org/nlogo/properties/PlotPensEditor.scala-378-            OptionDialog.show(org.nlogo.awt.Utils.getWindow(this),
org/nlogo/properties/PlotPensEditor.scala:379:              "Invalid Entry", "Invalid value for the pen interval", Array("OK"))
org/nlogo/properties/PlotPensEditor.scala-380-            false
org/nlogo/properties/PlotPensEditor.scala-381-        }
org/nlogo/properties/PlotPensEditor.scala-394-    private def addWidgets() {
org/nlogo/properties/PlotPensEditor.scala-395-      setLayout(new BorderLayout())
org/nlogo/properties/PlotPensEditor.scala:396:      val title = createTitledBorder(createEtchedBorder(EtchedBorder.LOWERED), I18N.gui("advanced"))
org/nlogo/properties/PlotPensEditor.scala-397-      title.setTitleJustification(TitledBorder.LEFT)
org/nlogo/properties/PlotPensEditor.scala-398-      setBorder(title)
org/nlogo/properties/PlotPensEditor.scala-400-        setLayout(new BoxLayout(this, BoxLayout.Y_AXIS))
org/nlogo/properties/PlotPensEditor.scala-401-        add(new JPanel(new BorderLayout){
org/nlogo/properties/PlotPensEditor.scala:402:          add(new JLabel(I18N.gui("mode")), BorderLayout.WEST)
org/nlogo/properties/PlotPensEditor.scala-403-          add(penModes, BorderLayout.CENTER)
org/nlogo/properties/PlotPensEditor.scala-404-        })
org/nlogo/properties/PlotPensEditor.scala-405-        add(new JPanel(new BorderLayout){
org/nlogo/properties/PlotPensEditor.scala:406:          add(new JLabel(I18N.gui("interval")), BorderLayout.WEST)
org/nlogo/properties/PlotPensEditor.scala-407-          add(intervalField, BorderLayout.CENTER)
org/nlogo/properties/PlotPensEditor.scala-408-        })
org/nlogo/properties/PropertyAccessor.scala-17-      case ex: NoSuchMethodException =>
org/nlogo/properties/PropertyAccessor.scala-18-        // didn't find Java setter, look for Scala setter
org/nlogo/properties/PropertyAccessor.scala:19:        target.getClass.getMethod(accessString + "_$eq", erasure)
org/nlogo/properties/PropertyAccessor.scala-20-    }
org/nlogo/properties/PropertyAccessor.scala-21-
org/nlogo/properties/WorldEditPanel.scala-13-  extends EditPanel(widget, compiler, colorizer){
org/nlogo/properties/WorldEditPanel.scala-14-
org/nlogo/properties/WorldEditPanel.scala:15:  private implicit val i18nPrefix = I18N.Prefix("edit.viewSettings")
org/nlogo/properties/WorldEditPanel.scala-16-  private val previewPanel = new WorldPreview(200, 200)
org/nlogo/properties/WorldEditPanel.scala-17-
org/nlogo/properties/WorldEditPanel.scala-26-    val panelGridbag = new GridBagLayout()
org/nlogo/properties/WorldEditPanel.scala-27-    val worldPanel = new JPanel(){
org/nlogo/properties/WorldEditPanel.scala:28:      setBorder(new TitledBorder(I18N.gui("world")))
org/nlogo/properties/WorldEditPanel.scala-29-      setLayout(new BorderLayout())
org/nlogo/properties/WorldEditPanel.scala-30-      add(makeButtonPanel(settings), BorderLayout.WEST)
org/nlogo/properties/WorldEditPanel.scala-43-
org/nlogo/properties/WorldEditPanel.scala-44-    val viewPanel = new JPanel() {
org/nlogo/properties/WorldEditPanel.scala:45:      setBorder(new TitledBorder(I18N.gui("view")))
org/nlogo/properties/WorldEditPanel.scala-46-      setLayout(panelGridbag)
org/nlogo/properties/WorldEditPanel.scala-47-    }
org/nlogo/properties/WorldEditPanel.scala-50-
org/nlogo/properties/WorldEditPanel.scala-51-    val modelPanel = new JPanel(){
org/nlogo/properties/WorldEditPanel.scala:52:      setBorder(new TitledBorder(I18N.gui("tickCounter")))
org/nlogo/properties/WorldEditPanel.scala-53-      setLayout(panelGridbag)
org/nlogo/properties/WorldEditPanel.scala-54-    }
org/nlogo/properties/WorldEditPanel.scala-73-    buttons.setLayout(buttonsLayout)
org/nlogo/properties/WorldEditPanel.scala-74-
org/nlogo/properties/WorldEditPanel.scala:75:    buttons.add(new JLabel(I18N.gui("origin.location") + " "))
org/nlogo/properties/WorldEditPanel.scala-76-    positionChoices = new JComboBox()
org/nlogo/properties/WorldEditPanel.scala-77-    for(config <- settings.getOriginConfigurations())
org/nlogo/properties/WorldEditPanel.scala-115-    if(!value.isDefined) return
org/nlogo/properties/WorldEditPanel.scala-116-    def v = value.get.asInstanceOf[Int]
org/nlogo/properties/WorldEditPanel.scala:117:    if(positionChoices.getSelectedObjects()(0).toString == I18N.gui("origin.location.center") && editors != Nil) {
org/nlogo/properties/WorldEditPanel.scala:118:      if(field == "max-pxcor") editors(0).set(0 - v)
org/nlogo/properties/WorldEditPanel.scala:119:      else if(field == "max-pycor") editors(2).set(0 - v)
org/nlogo/properties/WorldEditPanel.scala:120:      else if(field == "max-pzcor") editors(4).set(0 - v)
org/nlogo/properties/WorldEditPanel.scala-121-    }
org/nlogo/properties/WorldEditPanel.scala-122-  }
org/nlogo/properties/WorldEditPanel.scala-137-  private def selectPosition(selection:OriginConfiguration, index:Int){
org/nlogo/properties/WorldEditPanel.scala-138-    selectConfiguration(selection)
org/nlogo/properties/WorldEditPanel.scala:139:    if (selection.toString == I18N.gui("origin.location.corner")){
org/nlogo/properties/WorldEditPanel.scala-140-      enableChoices(true, false)
org/nlogo/properties/WorldEditPanel.scala-141-      cornerChoices.setSelectedIndex(index)
org/nlogo/properties/WorldEditPanel.scala-142-      selectConfiguration(cornerChoices.getSelectedItem().asInstanceOf[OriginConfiguration])
org/nlogo/properties/WorldEditPanel.scala-143-    }
org/nlogo/properties/WorldEditPanel.scala:144:    else if (selection.toString == I18N.gui("origin.location.edge")){
org/nlogo/properties/WorldEditPanel.scala-145-      enableChoices(false, true)
org/nlogo/properties/WorldEditPanel.scala-146-      edgeChoices.setSelectedIndex(index)
org/nlogo/properties/WorldEditPanel.scala-154-  private def selectConfiguration(choice:OriginConfiguration){
org/nlogo/properties/WorldEditPanel.scala-155-    for((editor,i) <- editors.zipWithIndex){
org/nlogo/properties/WorldEditPanel.scala:156:      if(choice.toString != I18N.gui("origin.location.custom")){
org/nlogo/properties/WorldEditPanel.scala-157-        editor.refresh()
org/nlogo/properties/WorldEditPanel.scala-158-      }
org/nlogo/properties/WorldPreview.scala-9-  private var wrapX, wrapY = false
org/nlogo/properties/WorldPreview.scala-10-  private var minx, maxx, miny, maxy = 0
org/nlogo/properties/WorldPreview.scala:11:  private val shapeLabel = new javax.swing.JLabel("Torus")
org/nlogo/properties/WorldPreview.scala-12-  private val worldPanel = new javax.swing.JPanel(new java.awt.GridBagLayout) {
org/nlogo/properties/WorldPreview.scala-13-    setSize(width, height)
org/nlogo/properties/WorldPreview.scala-87-    // the preview is correct and we have different names for the fields in 3D, for now just check
org/nlogo/properties/WorldPreview.scala-88-    // for either name.  in the future we should generalize the preview ev 6/1/06
org/nlogo/properties/WorldPreview.scala:89:    if(field == "World wraps horizontally" || field.startsWith("World wraps X")) {
org/nlogo/properties/WorldPreview.scala-90-      wrapX = asBoolean
org/nlogo/properties/WorldPreview.scala-91-      updateLabel()
org/nlogo/properties/WorldPreview.scala-92-    } 
org/nlogo/properties/WorldPreview.scala:93:    else if(field == "World wraps vertically" || field.startsWith("World wraps Y")) {
org/nlogo/properties/WorldPreview.scala-94-      wrapY = asBoolean
org/nlogo/properties/WorldPreview.scala-95-      updateLabel()
org/nlogo/properties/WorldPreview.scala-96-    }
org/nlogo/properties/WorldPreview.scala:97:    else if(field == "min-pxcor") {
org/nlogo/properties/WorldPreview.scala-98-      minx = asInt
org/nlogo/properties/WorldPreview.scala-99-      updateLabel()
org/nlogo/properties/WorldPreview.scala-100-    }
org/nlogo/properties/WorldPreview.scala:101:    else if(field == "max-pxcor") {
org/nlogo/properties/WorldPreview.scala-102-      maxx = asInt
org/nlogo/properties/WorldPreview.scala-103-      updateLabel()
org/nlogo/properties/WorldPreview.scala-104-    }
org/nlogo/properties/WorldPreview.scala:105:    else if(field == "min-pycor") {
org/nlogo/properties/WorldPreview.scala-106-      miny = asInt
org/nlogo/properties/WorldPreview.scala-107-      updateLabel()
org/nlogo/properties/WorldPreview.scala-108-    }
org/nlogo/properties/WorldPreview.scala:109:    else if(field == "max-pycor") {
org/nlogo/properties/WorldPreview.scala-110-      maxy = asInt
org/nlogo/properties/WorldPreview.scala-111-      updateLabel()
org/nlogo/properties/WorldPreview.scala-115-  private def updateLabel() {
org/nlogo/properties/WorldPreview.scala-116-    val text = (wrapX, wrapY) match {
org/nlogo/properties/WorldPreview.scala:117:      case (true, true) => "Torus"
org/nlogo/properties/WorldPreview.scala:118:      case (true, false) => "Vertical Cylinder"
org/nlogo/properties/WorldPreview.scala:119:      case (false, true) => "Horizontal Cylinder"
org/nlogo/properties/WorldPreview.scala:120:      case (false, false) => "Box"
org/nlogo/properties/WorldPreview.scala-121-    }
org/nlogo/properties/WorldPreview.scala:122:    shapeLabel.setText(text + ": " + (maxx - minx + 1)  + " x " + (maxy - miny + 1))
org/nlogo/properties/WorldPreview.scala-123-  }
org/nlogo/properties/WorldPreview.scala-124-
org/nlogo/properties/WorldPreview.scala-148-      def asInt = value.asInstanceOf[java.lang.Integer].intValue
org/nlogo/properties/WorldPreview.scala-149-      field match {
org/nlogo/properties/WorldPreview.scala:150:        case "min-pxcor" => minPxcor = asInt
org/nlogo/properties/WorldPreview.scala:151:        case "max-pxcor" => maxPxcor = asInt
org/nlogo/properties/WorldPreview.scala:152:        case "min-pycor" => minPycor = asInt
org/nlogo/properties/WorldPreview.scala:153:        case "max-pycor" => maxPycor = asInt
org/nlogo/properties/WorldPreview.scala-154-        case _ => return
org/nlogo/properties/WorldPreview.scala-155-      }
org/nlogo/properties/WorldPreview.scala-160-      if(minPxcor > 0 || maxPxcor < 0 || minPycor > 0 || maxPycor < 0)
org/nlogo/properties/WorldPreview.scala-161-        paintError(g.asInstanceOf[java.awt.Graphics2D],
org/nlogo/properties/WorldPreview.scala:162:                   "Invalid world dimensions. " + 
org/nlogo/properties/WorldPreview.scala:163:                   "The origin (0,0) must be inside the dimensions of the world.")
org/nlogo/properties/WorldPreview.scala-164-      else {
org/nlogo/properties/WorldPreview.scala-165-        xOrigin =
org/nlogo/properties/WorldPreview.scala-249-      var label: String = "(0,0)"
org/nlogo/properties/WorldPreview.scala-250-      if(txtHorizOrient == TO_LEFT && txtVertOrient == TO_TOP){
org/nlogo/properties/WorldPreview.scala:251:        label = "(" + minPxcor + "," + maxPycor + ")"
org/nlogo/properties/WorldPreview.scala-252-        xTextOff = 4
org/nlogo/properties/WorldPreview.scala-253-        yTextOff = fm.getStringBounds(label, g).getHeight.toInt
org/nlogo/properties/WorldPreview.scala-254-      }
org/nlogo/properties/WorldPreview.scala-255-      else if(txtHorizOrient == TO_RIGHT && txtVertOrient == TO_TOP) {
org/nlogo/properties/WorldPreview.scala:256:        label = "(" + maxPxcor + "," + maxPycor + ")"
org/nlogo/properties/WorldPreview.scala-257-        xTextOff = -4 - fm.getStringBounds(label, g).getWidth.toInt
org/nlogo/properties/WorldPreview.scala-258-        yTextOff = fm.getStringBounds(label, g).getHeight.toInt
org/nlogo/properties/WorldPreview.scala-259-      }
org/nlogo/properties/WorldPreview.scala-260-      else if(txtHorizOrient == TO_RIGHT && txtVertOrient == TO_BOTTOM) {
org/nlogo/properties/WorldPreview.scala:261:        label = "(" + maxPxcor + "," + minPycor + ")"
org/nlogo/properties/WorldPreview.scala-262-        xTextOff = -4 - fm.getStringBounds(label, g).getWidth.toInt
org/nlogo/properties/WorldPreview.scala-263-        yTextOff = -4 
org/nlogo/properties/WorldPreview.scala-264-      }
org/nlogo/properties/WorldPreview.scala-265-      else if(txtHorizOrient == TO_LEFT && txtVertOrient == TO_BOTTOM) {
org/nlogo/properties/WorldPreview.scala:266:        label = "(" + minPxcor + "," + minPycor + ")"
org/nlogo/properties/WorldPreview.scala-267-        xTextOff = 4
org/nlogo/properties/WorldPreview.scala-268-        yTextOff = -4 
org/nlogo/properties/WorldPreview.scala-289-    def update(field: String, value: Any) {
org/nlogo/properties/WorldPreview.scala-290-      if(field != null)
org/nlogo/properties/WorldPreview.scala:291:        if(field == "World wraps horizontally" || field.startsWith("World wraps X"))
org/nlogo/properties/WorldPreview.scala-292-          wrapX = value.asInstanceOf[java.lang.Boolean].booleanValue
org/nlogo/properties/WorldPreview.scala:293:        else if(field == "World wraps vertically" || field.startsWith("World wraps Y"))
org/nlogo/properties/WorldPreview.scala-294-          wrapY = value.asInstanceOf[java.lang.Boolean].booleanValue
org/nlogo/properties/WorldPreview.scala-295-      this.repaint()
org/nlogo/render/AbstractRenderer.java-115-
org/nlogo/render/AbstractRenderer.java-116-	private static final boolean WINDOWS =
org/nlogo/render/AbstractRenderer.java:117:		System.getProperty( "os.name" ).startsWith( "Windows" ) ;
org/nlogo/render/AbstractRenderer.java-118-
org/nlogo/render/AbstractRenderer.java-119-	org.nlogo.api.Agent outlineAgent ;
org/nlogo/render/TrailDrawer.java-162-
org/nlogo/render/TrailDrawer.java-163-			if ( image == null ) {
org/nlogo/render/TrailDrawer.java:164:				throw new javax.imageio.IIOException( "The following file is not in a supported image format: " +
org/nlogo/render/TrailDrawer.java-165-											file.getPath() ) ;
org/nlogo/render/TrailDrawer.java-166-			}
org/nlogo/render/TrailDrawer.java-187-				if ( image.getColorModel().getColorSpace().getType() == java.awt.color.ColorSpace.TYPE_GRAY
org/nlogo/render/TrailDrawer.java-216-		if( ! drawingBlank ) 
org/nlogo/render/TrailDrawer.java-217-		{
org/nlogo/render/TrailDrawer.java:218:			writer.println( Dump.csv.encode( "DRAWING" ) ) ;
org/nlogo/render/TrailDrawer.java-219-		
org/nlogo/render/TrailDrawer.java-220-			writer.println( Dump.csv.encode( Double.toString( world.patchSize() ) ) ) ;
org/nlogo/render/TrailDrawer.java-302-			tg.setPenWidth( penSize ) ;
org/nlogo/render/TrailDrawer.java-303-		
org/nlogo/render/TrailDrawer.java:304:			if( penMode.equals( "erase" )  )
org/nlogo/render/TrailDrawer.java-305-			{
org/nlogo/render/TrailDrawer.java-306-				tg.setComposite( java.awt.AlphaComposite.Clear ) ;
org/nlogo/render/TurtleShapeManager.java-52-
org/nlogo/render/TurtleShapeManager.java-53-	public String getCacheReport() {
org/nlogo/render/TurtleShapeManager.java:54:		return "shapes " + shapeCache.size() + " pixels " + pixelCount + " angleStep " + angleStep ;
org/nlogo/render/TurtleShapeManager.java-55-	}
org/nlogo/render/TurtleShapeManager.java-56-

# so many strings in sdm. painful.
org/nlogo/sdm/AggregateManagerLite.scala-7-
org/nlogo/sdm/AggregateManagerLite.scala-8-  private val validTokens = Map(
org/nlogo/sdm/AggregateManagerLite.scala:9:    "MODEL"            -> "org.nlogo.sdm.gui.AggregateDrawing",
org/nlogo/sdm/AggregateManagerLite.scala:10:    "STOCK"            -> "org.nlogo.sdm.gui.WrappedStock",
org/nlogo/sdm/AggregateManagerLite.scala:11:    "RATE"             -> "org.nlogo.sdm.gui.WrappedRate",
org/nlogo/sdm/AggregateManagerLite.scala:12:    "CONVERTER"        -> "org.nlogo.sdm.gui.WrappedConverter",
org/nlogo/sdm/AggregateManagerLite.scala:13:    "RESERVOIR_FIGURE" -> "org.nlogo.sdm.gui.ReservoirFigure",
org/nlogo/sdm/AggregateManagerLite.scala:14:    "STOCK_FIGURE"     -> "org.nlogo.sdm.gui.StockFigure",
org/nlogo/sdm/AggregateManagerLite.scala:15:    "RATE_CONN"        -> "org.nlogo.sdm.gui.RateConnection",
org/nlogo/sdm/AggregateManagerLite.scala:16:    "CHOP_DIAMOND"     -> "org.jhotdraw.contrib.ChopDiamondConnector",
org/nlogo/sdm/AggregateManagerLite.scala:17:    "CHOP_BOX"         -> "org.jhotdraw.standard.ChopBoxConnector",  
org/nlogo/sdm/AggregateManagerLite.scala:18:    "RESERVOIR"        -> "org.nlogo.sdm.gui.WrappedReservoir", 
org/nlogo/sdm/AggregateManagerLite.scala:19:    "CONVERTER_FIGURE" -> "org.nlogo.sdm.gui.ConverterFigure",
org/nlogo/sdm/AggregateManagerLite.scala:20:    "BINDING_CONN"     -> "org.nlogo.sdm.gui.BindingConnection",
org/nlogo/sdm/AggregateManagerLite.scala:21:    "CHOP_ELLIPSE"     -> "org.jhotdraw.figures.ChopEllipseConnector",  
org/nlogo/sdm/AggregateManagerLite.scala:22:    "CHOP_RATE"        -> "org.nlogo.sdm.gui.ChopRateConnector"
org/nlogo/sdm/AggregateManagerLite.scala-23- )
org/nlogo/sdm/AggregateManagerLite.scala-24-
org/nlogo/sdm/AggregateManagerLite.scala-29-  def innerSource = source
org/nlogo/sdm/AggregateManagerLite.scala-30-  def innerSource(s: String) = unsupported
org/nlogo/sdm/AggregateManagerLite.scala:31:  def classDisplayName = "System Dynamics"
org/nlogo/sdm/AggregateManagerLite.scala-32-  def agentClass = unsupported
org/nlogo/sdm/AggregateManagerLite.scala-33-  def headerSource = ""
org/nlogo/sdm/AggregateManagerLite.scala-70-        // translate pre-4.1 save format
org/nlogo/sdm/AggregateManagerLite.scala-71-        tokenizer.sval = tokenizer.sval.replaceAll(
org/nlogo/sdm/AggregateManagerLite.scala:72:          "org.nlogo.aggregate.gui", "org.nlogo.sdm.gui")
org/nlogo/sdm/AggregateManagerLite.scala-73-        if(!validTokens.valuesIterator.contains(tokenizer.sval))
org/nlogo/sdm/AggregateManagerLite.scala-74-          throw new java.io.IOException(
org/nlogo/sdm/AggregateManagerLite.scala:75:            "invalid token: \"" + tokenizer.sval + "\"")
org/nlogo/sdm/AggregateManagerLite.scala-76-        validLines += 1
org/nlogo/sdm/AggregateManagerLite.scala-77-        val me = processElement(tokenizer)
org/nlogo/sdm/AggregateManagerLite.scala-104-    if(st.ttype != StreamTokenizer.TT_WORD)
org/nlogo/sdm/AggregateManagerLite.scala-105-      null
org/nlogo/sdm/AggregateManagerLite.scala:106:    else if(st.sval == validTokens("STOCK")) {
org/nlogo/sdm/AggregateManagerLite.scala-107-      val stock = new Stock ()
org/nlogo/sdm/AggregateManagerLite.scala-108-      stock.setName(readString(st))
org/nlogo/sdm/AggregateManagerLite.scala-111-      stock
org/nlogo/sdm/AggregateManagerLite.scala-112-    }
org/nlogo/sdm/AggregateManagerLite.scala:113:    else if(st.sval == validTokens("RATE")) {
org/nlogo/sdm/AggregateManagerLite.scala-114-      val rate = new Rate()
org/nlogo/sdm/AggregateManagerLite.scala-115-      rate.setExpression(readString(st))
org/nlogo/sdm/AggregateManagerLite.scala-117-      rate
org/nlogo/sdm/AggregateManagerLite.scala-118-    }
org/nlogo/sdm/AggregateManagerLite.scala:119:    else if(st.sval == validTokens("CONVERTER")) {
org/nlogo/sdm/AggregateManagerLite.scala-120-      val converter = new Converter()                     
org/nlogo/sdm/AggregateManagerLite.scala-121-      converter.setExpression(readString(st))
org/nlogo/sdm/AggregateManagerLite.scala-123-      converter
org/nlogo/sdm/AggregateManagerLite.scala-124-    }
org/nlogo/sdm/AggregateManagerLite.scala:125:    else if(st.sval == validTokens("MODEL"))
org/nlogo/sdm/AggregateManagerLite.scala:126:      new Model("Test Model" , 1)
org/nlogo/sdm/AggregateManagerLite.scala-127-    else null
org/nlogo/sdm/AggregateManagerLite.scala-128-  }
org/nlogo/sdm/AggregateManagerLite.scala-129-
org/nlogo/sdm/AggregateManagerLite.scala-130-  private def setSourceSink(rate: Rate, st: StreamTokenizer, lineMap: collection.Map[Int,ModelElement]) {
org/nlogo/sdm/AggregateManagerLite.scala:131:    if(st.nextToken() == StreamTokenizer.TT_WORD && st.sval.equals("REF")) {
org/nlogo/sdm/AggregateManagerLite.scala-132-      rate.setSource(getSourceOrSink(st, lineMap))
org/nlogo/sdm/AggregateManagerLite.scala-133-      rate.setSink(
org/nlogo/sdm/AggregateManagerLite.scala:134:        if(st.nextToken() == StreamTokenizer.TT_WORD && st.sval.equals("REF"))
org/nlogo/sdm/AggregateManagerLite.scala-135-          getSourceOrSink(st, lineMap)
org/nlogo/sdm/AggregateManagerLite.scala-136-        else
org/nlogo/sdm/AggregateManagerLite.scala-163-      st.sval
org/nlogo/sdm/AggregateManagerLite.scala-164-    else
org/nlogo/sdm/AggregateManagerLite.scala:165:      throw new java.io.IOException("expected string token")
org/nlogo/sdm/AggregateManagerLite.scala-166-  private def readBoolean(st: StreamTokenizer): Boolean =
org/nlogo/sdm/AggregateManagerLite.scala-167-    if(st.nextToken() == StreamTokenizer.TT_NUMBER)
org/nlogo/sdm/AggregateManagerLite.scala-168-      st.nval == 1
org/nlogo/sdm/AggregateManagerLite.scala-169-    else 
org/nlogo/sdm/AggregateManagerLite.scala:170:      throw new java.io.IOException("expected integer (boolean)")
org/nlogo/sdm/AggregateManagerLite.scala-171-  private def readInt(st: StreamTokenizer) =
org/nlogo/sdm/AggregateManagerLite.scala-172-    if(st.nextToken() == StreamTokenizer.TT_NUMBER)
org/nlogo/sdm/AggregateManagerLite.scala-173-      st.nval.toInt
org/nlogo/sdm/AggregateManagerLite.scala-174-    else
org/nlogo/sdm/AggregateManagerLite.scala:175:      throw new java.io.IOException("expected integer")
org/nlogo/sdm/AggregateManagerLite.scala-176-
org/nlogo/sdm/AggregateManagerLite.scala-177-}
org/nlogo/sdm/gui/AggregateDrawing.java-9-{
org/nlogo/sdm/gui/AggregateDrawing.java-10-
org/nlogo/sdm/gui/AggregateDrawing.java:11:	private final Model model = new Model( "default" , 1 ) ;
org/nlogo/sdm/gui/AggregateDrawing.java-12-	
org/nlogo/sdm/gui/AggregateDrawing.java-13-	public Model getModel()
org/nlogo/sdm/gui/AggregateModelEditor.java-66-		  EditDialogFactoryInterface dialogFactory )
org/nlogo/sdm/gui/AggregateModelEditor.java-67-	{
org/nlogo/sdm/gui/AggregateModelEditor.java:68:		super( I18N.gui().get("menu.tools.systemDynamicsModeler") , linkParent.getGraphicsConfiguration() ) ;
org/nlogo/sdm/gui/AggregateModelEditor.java-69-		undoManager = new UndoManager() ;
org/nlogo/sdm/gui/AggregateModelEditor.java-70-		
org/nlogo/sdm/gui/AggregateModelEditor.java-225-		JMenuBar menuBar = new javax.swing.JMenuBar();
org/nlogo/sdm/gui/AggregateModelEditor.java-226-		
org/nlogo/sdm/gui/AggregateModelEditor.java:227:		boolean isOSX = System.getProperty( "os.name" ).startsWith( "Mac" ) ; 
org/nlogo/sdm/gui/AggregateModelEditor.java-228-		
org/nlogo/sdm/gui/AggregateModelEditor.java-229-		if ( isOSX )
org/nlogo/sdm/gui/AggregateModelEditor.java-233-		
org/nlogo/sdm/gui/AggregateModelEditor.java-234-		org.jhotdraw.util.CommandMenu editMenu = 
org/nlogo/sdm/gui/AggregateModelEditor.java:235:			new org.jhotdraw.util.CommandMenu( I18N.gui().get("menu.edit") ) ;
org/nlogo/sdm/gui/AggregateModelEditor.java:236:		editMenu.add( new org.jhotdraw.util.UndoCommand( I18N.gui().get("menu.edit.undo"), this ) ) ;
org/nlogo/sdm/gui/AggregateModelEditor.java:237:		editMenu.add( new org.jhotdraw.util.RedoCommand( I18N.gui().get("menu.edit.redo") , this ) ) ;
org/nlogo/sdm/gui/AggregateModelEditor.java-238-		menuBar.add( editMenu );
org/nlogo/sdm/gui/AggregateModelEditor.java-239-		
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-13-  private val noToolButton = new JToggleButton("")
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-14-  private var dtLabel: JLabel = null
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala:15:  implicit val i18nPrefix = I18N.Prefix("tools.sdm")
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-16-
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-17-  override def addControls() {
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-25-      new JToggleButton(new ToolAction(I18N.gui(name.toLowerCase), image, tool))
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-26-    }
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala:27:    val stockButton = makeButton("Stock", "/images/stock.gif", new StockFigureCreationTool(editor))
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala:28:    val variablButton = makeButton("Variable", "/images/converter.gif", new ConverterFigureCreationTool(editor))
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala:29:    val flowButton = makeButton("Flow", "/images/rate.gif", new RateConnectionTool(editor, new RateConnection()))
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala:30:    val linkButton = makeButton("Link", "/images/connector.gif", new AggregateConnectionTool(editor, new BindingConnection()))
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-31-
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-32-    val toolButtonGroup = new ButtonGroup(){ add(noToolButton) }
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-38-
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-39-    // dt Panel
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala:40:    dtLabel = new JLabel("dt = " + editor.getModel.getDt){ setOpaque(false) }
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-41-    add(new JPanel(new java.awt.FlowLayout()) {
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-42-      add(dtLabel)
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-82-    setEnabled(enableMe)
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-83-  }
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala:84:  val compileAction = new MyAction("Check", "/images/check.gif", enableMe = true) {
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-85-    def actionPerformed(e: ActionEvent) {new org.nlogo.window.Events.CompileAllEvent().raise(editor)}
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-86-  }
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala:87:  val editAction = new MyAction("Edit", "/images/edit.gif", enableMe = false) {
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-88-    def actionPerformed(e: ActionEvent) {editor.inspectFigure(editor.view.selection.nextFigure)}
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-89-  }
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala:90:  val deleteAction = new MyAction("Delete", "/images/delete.gif", enableMe = false) {
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-91-    def actionPerformed(e: ActionEvent) {
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala:92:      new DeleteCommand(I18N.gui("delete"), editor).execute()
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-93-      new org.nlogo.window.Events.CompileAllEvent().raise(editor)
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-94-      new org.nlogo.window.Events.DirtyEvent().raise(editor)
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-95-    }
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-96-  }
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala:97:  val changeDTAction = new AbstractAction(I18N.gui("edit")) {
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-98-    def actionPerformed(e: ActionEvent) {
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala:99:      val newDt = JOptionPane.showInputDialog(editor, "dt", editor.getModel.getDt)
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-100-      try if (newDt != null) {
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-101-        editor.getModel.setDt(newDt.toDouble)
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala:102:        dtLabel.setText("dt = " + editor.getModel.getDt)
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-103-        new org.nlogo.window.Events.CompileAllEvent().raise(editor)
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-104-        new org.nlogo.window.Events.DirtyEvent().raise(editor)
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-105-      }
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-106-      catch {
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala:107:        case ex: NumberFormatException => JOptionPane.showMessageDialog(null, I18N.gui("dtNumberError"))
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala:108:        case ex: Model.ModelException => JOptionPane.showMessageDialog(null, I18N.gui("dtZeroError"))
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-109-      }
org/nlogo/sdm/gui/AggregateModelEditorToolBar.scala-110-    }
org/nlogo/sdm/gui/AggregateTabs.java-21-
org/nlogo/sdm/gui/AggregateTabs.java-22-		proceduresTab = new AggregateProceduresTab( colorizer ) ;
org/nlogo/sdm/gui/AggregateTabs.java:23:		add( I18N.gui().get("tools.sdm.diagram") , activePanel ) ;
org/nlogo/sdm/gui/AggregateTabs.java:24:		add( I18N.gui().get("tabs.code"), proceduresTab) ;
org/nlogo/sdm/gui/AggregateTabs.java-25-		setSelectedComponent( activePanel ) ;
org/nlogo/sdm/gui/AggregateTabs.java-26-	}
org/nlogo/sdm/gui/ConverterFigure.java-117-	public String classDisplayName() 
org/nlogo/sdm/gui/ConverterFigure.java-118-	{ 
org/nlogo/sdm/gui/ConverterFigure.java:119:		return "Variable" ; 
org/nlogo/sdm/gui/ConverterFigure.java-120-	}
org/nlogo/sdm/gui/ConverterFigure.java-121-	public boolean editFinished() 
org/nlogo/sdm/gui/GUIAggregateManager.java-168-	public String classDisplayName()
org/nlogo/sdm/gui/GUIAggregateManager.java-169-	{
org/nlogo/sdm/gui/GUIAggregateManager.java:170:		return "Aggregate" ;	
org/nlogo/sdm/gui/GUIAggregateManager.java-171-	}
org/nlogo/sdm/gui/GUIAggregateManager.java-172-	public Class<?> agentClass() { return org.nlogo.agent.Observer.class ; } 
org/nlogo/sdm/gui/Properties.scala-9-object Properties {
org/nlogo/sdm/gui/Properties.scala-10-  val converter = JavaList(
org/nlogo/sdm/gui/Properties.scala:11:    P("nameWrapper", P.Identifier, "Name"),
org/nlogo/sdm/gui/Properties.scala:12:    P("expressionWrapper", P.Reporter, "Expression")
org/nlogo/sdm/gui/Properties.scala-13-  )
org/nlogo/sdm/gui/Properties.scala-14-  val stock = JavaList(
org/nlogo/sdm/gui/Properties.scala:15:    P("nameWrapper", P.Identifier, "Name"),
org/nlogo/sdm/gui/Properties.scala:16:    P("initialValueExpressionWrapper", P.Reporter, "Initial value"),
org/nlogo/sdm/gui/Properties.scala:17:    P("allowNegative", P.Boolean, "Allow negative values")
org/nlogo/sdm/gui/Properties.scala-18-  )
org/nlogo/sdm/gui/Properties.scala-19-  val rate = JavaList(
org/nlogo/sdm/gui/Properties.scala:20:    P("nameWrapper", P.Identifier, "Name"),
org/nlogo/sdm/gui/Properties.scala:21:    P("expressionWrapper", P.Reporter, "Expression")
org/nlogo/sdm/gui/Properties.scala-22-  )
org/nlogo/sdm/gui/Properties.scala-23-}
org/nlogo/sdm/gui/RateConnection.java-346-	public boolean dirty() { return dirty ; } 
org/nlogo/sdm/gui/RateConnection.java-347-
org/nlogo/sdm/gui/RateConnection.java:348:	public String classDisplayName() { return "Flow"; }
org/nlogo/sdm/gui/RateConnection.java-349-	public boolean editFinished() { return true ; }
org/nlogo/sdm/gui/RateConnection.java-350-	
org/nlogo/sdm/gui/ReservoirFigure.java-38-	// Not sure what type to use here and don't feel like looking it up - ST 2/9/08
org/nlogo/sdm/gui/ReservoirFigure.java-39-	@Override
org/nlogo/sdm/gui/ReservoirFigure.java:40:	@SuppressWarnings("unchecked")
org/nlogo/sdm/gui/ReservoirFigure.java-41-	public HandleEnumeration handles()
org/nlogo/sdm/gui/ReservoirFigure.java-42-	{
org/nlogo/sdm/gui/StockFigure.java-137-	public String classDisplayName() 
org/nlogo/sdm/gui/StockFigure.java-138-	{ 
org/nlogo/sdm/gui/StockFigure.java:139:		return "Stock"; 
org/nlogo/sdm/gui/StockFigure.java-140-	}
org/nlogo/sdm/gui/StockFigure.java-141-	public boolean editFinished() 
org/nlogo/sdm/Model.scala-11-  // instead of the original class names. - ST 1/27/05
org/nlogo/sdm/Model.scala-12-  def mungeClassNames(text:String) =
org/nlogo/sdm/Model.scala:13:    text.replaceAll(" *org.nlogo.sdm.Stock ",
org/nlogo/sdm/Model.scala:14:                    "org.nlogo.sdm.gui.WrappedStock ")
org/nlogo/sdm/Model.scala:15:        .replaceAll(" *org.nlogo.sdm.Rate ",
org/nlogo/sdm/Model.scala:16:                    "org.nlogo.sdm.gui.WrappedRate ")
org/nlogo/sdm/Model.scala:17:        .replaceAll(" *org.nlogo.sdm.Reservoir ",
org/nlogo/sdm/Model.scala:18:                    "org.nlogo.sdm.gui.WrappedReservoir")
org/nlogo/sdm/Model.scala:19:        .replaceAll(" *org.nlogo.sdm.Converter ",
org/nlogo/sdm/Model.scala:20:                    "org.nlogo.sdm.gui.WrappedConverter")
org/nlogo/sdm/Model.scala-21-}
org/nlogo/sdm/Model.scala-22-import scala.reflect.BeanProperty
org/nlogo/sdm/Model.scala-28-    // it doesn't make sense for dt to be <= 0 
org/nlogo/sdm/Model.scala-29-    if(dt <= 0.0)
org/nlogo/sdm/Model.scala:30:      throw new Model.ModelException("dt cannot be less than or equal to 0.")
org/nlogo/sdm/Model.scala-31-    this.dt = dt
org/nlogo/sdm/Model.scala-32-  }
org/nlogo/sdm/Model.scala-37-  def addElement(element:EvaluatedModelElement) {
org/nlogo/sdm/Model.scala-38-    if(elementWithName(element.name) != null)
org/nlogo/sdm/Model.scala:39:      throw new Model.ModelException("Already element with named " + element.name)
org/nlogo/sdm/Model.scala-40-    elements += element
org/nlogo/sdm/Model.scala-41-  }
org/nlogo/sdm/Translator.scala-29-    var procedures = ""
org/nlogo/sdm/Translator.scala-30-    var plots = ""
org/nlogo/sdm/Translator.scala:31:    globals += ";; System dynamics model globals\nglobals [\n"
org/nlogo/sdm/Translator.scala:32:    procedures += ";; Initializes the system dynamics model.\n;; Call this in your model's SETUP procedure.\n"
org/nlogo/sdm/Translator.scala:33:    procedures += "to system-dynamics-setup \n  reset-ticks\n  set " + "dt " + dt + "\n"
org/nlogo/sdm/Translator.scala-34-    if(!constantConverters.isEmpty) {
org/nlogo/sdm/Translator.scala:35:      globals += "  ;; constants\n"
org/nlogo/sdm/Translator.scala:36:      procedures += "  ;; initialize constant values\n"
org/nlogo/sdm/Translator.scala-37-      for(cc <- constantConverters) {
org/nlogo/sdm/Translator.scala:38:        globals += "  " + cc.name + "\n"
org/nlogo/sdm/Translator.scala-39-        procedures += initialValueExpressionForConverter(cc)
org/nlogo/sdm/Translator.scala-40-      }
org/nlogo/sdm/Translator.scala-41-    }
org/nlogo/sdm/Translator.scala-42-    if(!stocks.isEmpty) {
org/nlogo/sdm/Translator.scala:43:      globals += "  ;; stock values\n"
org/nlogo/sdm/Translator.scala:44:      procedures += "  ;; initialize stock values\n"
org/nlogo/sdm/Translator.scala-45-      for(s <- sortedStocks) {
org/nlogo/sdm/Translator.scala:46:        globals += "  " + s.name + "\n"
org/nlogo/sdm/Translator.scala-47-        procedures += initialValueExpressionForStock(s)
org/nlogo/sdm/Translator.scala-48-      }
org/nlogo/sdm/Translator.scala-49-    }
org/nlogo/sdm/Translator.scala-50-    // add the dt global
org/nlogo/sdm/Translator.scala:51:    globals += "  ;; size of each step, see SYSTEM-DYNAMICS-GO\n" + "  " + "dt\n"
org/nlogo/sdm/Translator.scala-52-    globals += "]\n\n"
org/nlogo/sdm/Translator.scala:53:    procedures += "end\n\n"
org/nlogo/sdm/Translator.scala:54:    procedures += ";; Step through the system dynamics model by performing next iteration of Euler's method.\n"
org/nlogo/sdm/Translator.scala:55:    procedures += ";; Call this in your model's GO procedure.\n"
org/nlogo/sdm/Translator.scala:56:    procedures += "to system-dynamics-go\n"
org/nlogo/sdm/Translator.scala:57:    plots += ";; Plot the current state of the system dynamics model's stocks\n"
org/nlogo/sdm/Translator.scala:58:    plots += ";; Call this procedure in your model's GO procedure.\n"
org/nlogo/sdm/Translator.scala:59:    plots += "to system-dynamics-do-plot\n"
org/nlogo/sdm/Translator.scala-60-    if(!converters.isEmpty || !rates.isEmpty) {
org/nlogo/sdm/Translator.scala:61:      procedures += "\n  ;; compute variable and flow values once per step\n"
org/nlogo/sdm/Translator.scala-62-      for(c <- converters)
org/nlogo/sdm/Translator.scala:63:        procedures += "  let local-" + c.name + " " + c.name + "\n"
org/nlogo/sdm/Translator.scala-64-      for(r <- rates)
org/nlogo/sdm/Translator.scala:65:        procedures += "  let local-" + r.name + " " + r.name + "\n" 
org/nlogo/sdm/Translator.scala-66-    }
org/nlogo/sdm/Translator.scala-67-    if(!stocks.isEmpty) {
org/nlogo/sdm/Translator.scala:68:      procedures += "\n  ;; update stock values\n" +
org/nlogo/sdm/Translator.scala:69:        "  ;; use temporary variables so order of computation doesn't affect result.\n"
org/nlogo/sdm/Translator.scala-70-      for(s <- sortedStocks) {
org/nlogo/sdm/Translator.scala-71-        procedures += updateStockExpression(s)
org/nlogo/sdm/Translator.scala:72:        plots += "  if plot-pen-exists? \"" + s.name + "\" [\n"
org/nlogo/sdm/Translator.scala:73:        plots += "    set-current-plot-pen \"" + s.name + "\"\n"
org/nlogo/sdm/Translator.scala:74:        plots += "    plotxy ticks " + s.name + "\n"
org/nlogo/sdm/Translator.scala-75-        plots += "  ]\n"
org/nlogo/sdm/Translator.scala-76-      }
org/nlogo/sdm/Translator.scala-77-      for(s <- sortedStocks)
org/nlogo/sdm/Translator.scala:78:        procedures += "  set " + s.name + " new-" + s.name + "\n"
org/nlogo/sdm/Translator.scala-79-    }
org/nlogo/sdm/Translator.scala:80:    procedures += "\n  tick-advance dt\nend\n\n"
org/nlogo/sdm/Translator.scala:81:    plots += "end\n\n"
org/nlogo/sdm/Translator.scala-82-    // each rate is a reporter based on the expression entered by the user
org/nlogo/sdm/Translator.scala-83-    for(r <- rates)
org/nlogo/sdm/Translator.scala-88-  }
org/nlogo/sdm/Translator.scala-89-  private def procedureForRate(r:Rate) =
org/nlogo/sdm/Translator.scala:90:    ";; Report value of flow\n" +
org/nlogo/sdm/Translator.scala:91:      "to-report " + r.name + "\n" + "  report ( " +
org/nlogo/sdm/Translator.scala-92-      (if(r.expression == null) "0" else r.expression) +
org/nlogo/sdm/Translator.scala:93:      "\n  ) * " + "dt" + "\n" +
org/nlogo/sdm/Translator.scala:94:      "end\n\n"
org/nlogo/sdm/Translator.scala-95-  def procedureForConverter(c:Converter) =
org/nlogo/sdm/Translator.scala:96:    ";; Report value of variable\n" +
org/nlogo/sdm/Translator.scala:97:    "to-report " + c.name + "\n" + "  report " +
org/nlogo/sdm/Translator.scala-98-    (if(c.expression == null) "0" else c.expression) +
org/nlogo/sdm/Translator.scala:99:    "\n" + "end\n\n"
org/nlogo/sdm/Translator.scala-100-  def initialValueExpressionForStock(s:Stock) =
org/nlogo/sdm/Translator.scala:101:    "  set " + s.name + " " +
org/nlogo/sdm/Translator.scala-102-    (if(s.initialValueExpression != null) s.initialValueExpression else "0") +
org/nlogo/sdm/Translator.scala-103-    "\n"
org/nlogo/sdm/Translator.scala-104-  def initialValueExpressionForConverter(c:Converter) =
org/nlogo/sdm/Translator.scala:105:    "  set " + c.name + " " +
org/nlogo/sdm/Translator.scala-106-    (if(c.expression != null) c.expression else "0") +
org/nlogo/sdm/Translator.scala-107-    "\n"
org/nlogo/sdm/Translator.scala-108-  // each stock may be affected by more than one rate so check the sink and source of each rate.
org/nlogo/sdm/Translator.scala-109-  def updateStockExpression(s:Stock) = {
org/nlogo/sdm/Translator.scala:110:    var expr = "  let new-" + s.name +
org/nlogo/sdm/Translator.scala:111:      (if(s.nonNegative) " max( list 0 ( " else " ( ") +
org/nlogo/sdm/Translator.scala-112-      s.name + " "
org/nlogo/sdm/Translator.scala-113-    for(r <- rates) {
org/nlogo/sdm/Translator.scala-114-      if(r.source.name == s.name)
org/nlogo/sdm/Translator.scala:115:        expr += "- " + "local-" + r.name + " "
org/nlogo/sdm/Translator.scala-116-      if(r.sink.name == s.name)
org/nlogo/sdm/Translator.scala:117:        expr += "+ " + "local-" + r.name + " "
org/nlogo/sdm/Translator.scala-118-    }
org/nlogo/sdm/Translator.scala-119-    if(s.nonNegative)

org/nlogo/shape/Circle.java:161:		return "Type: Circle, color: " + c + ",\n bounds: " + getBounds();
org/nlogo/shape/Circle.java-167-		// Only save <xDiameter>, because after drawing it must equal <yDiameter>
org/nlogo/shape/Circle.java:168:		return "Circle " + c.getRGB() + " " + filled + " " + marked + " " + x + " " + y + " " + xDiameter;
org/nlogo/shape/Circle.java:178:		boolean b1 = tokenizer.nextToken().equals( "true" );
org/nlogo/shape/Circle.java:179:		boolean b2 = tokenizer.nextToken().equals( "true" );

org/nlogo/shape/Curve.java:180:		return "Type: Curve, color: " + c + ",\n bounds: " + getBounds();

# we arent doing colors just yet. leaving here anyway.
org/nlogo/shape/editor/ColorCellRenderer.java-11-
org/nlogo/shape/editor/ColorCellRenderer.java-12-	private static final String[] NAMES =
org/nlogo/shape/editor/ColorCellRenderer.java:13:		{ "Gray" , "Red" , "Orange" , "Brown" , "Yellow" , "Green" ,
org/nlogo/shape/editor/ColorCellRenderer.java:14:		  "Lime" , "Turquoise" , "Cyan" , "Sky" , "Blue" , "Violet" ,
org/nlogo/shape/editor/ColorCellRenderer.java:15:		  "Magenta" , "Pink" , "Black" , "White" } ;

org/nlogo/shape/editor/DrawableList.java:129:				( parent , "Are you sure you want to delete these "
org/nlogo/shape/editor/DrawableList.java:130:				  + selected.length + " shapes?", "Delete", javax.swing.JOptionPane.YES_NO_OPTION) ;
org/nlogo/shape/editor/DrawableList.java:134:			delete = javax.swing.JOptionPane.showConfirmDialog( parent , "Are you sure you want to delete this shape?",
org/nlogo/shape/editor/DrawableList.java:135:																"Delete", javax.swing.JOptionPane.YES_NO_OPTION) ;

org/nlogo/shape/editor/EditorDialog.java:87:							"You may lose changes made to this shape. Do you want to cancel anyway?" ,
org/nlogo/shape/editor/EditorDialog.java:88:							"Confirm Cancel" , javax.swing.JOptionPane.YES_NO_OPTION ) )
org/nlogo/shape/editor/EditorDialog.java:151:		deleteSelected = new javax.swing.JButton( "Delete" ) ;
org/nlogo/shape/editor/EditorDialog.java:174:		duplicateSelected = new javax.swing.JButton( "Duplicate" ) ;
org/nlogo/shape/editor/EditorDialog.java:189:		bringToFront = new javax.swing.JButton( "Bring to front" ) ;
org/nlogo/shape/editor/EditorDialog.java:203:		sendToBack = new javax.swing.JButton( "Send to back" ) ;
org/nlogo/shape/editor/EditorDialog.java:218:		undoButton = new javax.swing.JButton( "Undo" ) ;
org/nlogo/shape/editor/EditorDialog.java:231:			  new CreateAction( "line" , Line.class ,
org/nlogo/shape/editor/EditorDialog.java:232:								"Draw line" , false ) ) ;
org/nlogo/shape/editor/EditorDialog.java:236:			  new CreateAction( "rectangle-filled" , Rectangle.class ,
org/nlogo/shape/editor/EditorDialog.java:237:								"Draw filled rectangle" , true ) ) ;
org/nlogo/shape/editor/EditorDialog.java:241:			  new CreateAction( "rectangle" , Rectangle.class ,
org/nlogo/shape/editor/EditorDialog.java:242:								"Draw rectangle" , false ) ) ;
org/nlogo/shape/editor/EditorDialog.java:246:			  new CreateAction( "circle-filled" , Circle.class ,
org/nlogo/shape/editor/EditorDialog.java:247:								"Draw filled circle" , true ) ) ;
org/nlogo/shape/editor/EditorDialog.java:251:			  new CreateAction( "circle" , Circle.class ,
org/nlogo/shape/editor/EditorDialog.java:252:								"Draw circle" , false ) ) ;
org/nlogo/shape/editor/EditorDialog.java:256:			  new CreateAction( "polygon-filled" , Polygon.class ,
org/nlogo/shape/editor/EditorDialog.java:257:								"Draw filled polygon" , true ) ) ;
org/nlogo/shape/editor/EditorDialog.java:261:			  new CreateAction( "polygon" , Polygon.class ,
org/nlogo/shape/editor/EditorDialog.java:262:								"Draw polygon" , false ) ) ;
org/nlogo/shape/editor/EditorDialog.java:280:				"Draw in " + org.nlogo.api.Color.getColorNameByIndex( icolor ) ;
org/nlogo/shape/editor/EditorDialog.java:307:			new javax.swing.JCheckBox( "Snap to grid" , true ) ;
org/nlogo/shape/editor/EditorDialog.java:316:			new javax.swing.JCheckBox( "Rotatable" , true ) ;
org/nlogo/shape/editor/EditorDialog.java:330:		javax.swing.JButton rotateLeftButton = new javax.swing.JButton( "Rotate Left" ) ;
org/nlogo/shape/editor/EditorDialog.java:352:		javax.swing.JButton rotateRightButton = new javax.swing.JButton( "Rotate Right" ) ;
org/nlogo/shape/editor/EditorDialog.java:374:		javax.swing.JButton flipHorizontalButton = new javax.swing.JButton( "Flip Horizontal" ) ;
org/nlogo/shape/editor/EditorDialog.java:396:		javax.swing.JButton flipVerticalButton = new javax.swing.JButton( "Flip Vertical" ) ;
org/nlogo/shape/editor/EditorDialog.java:422:		leftPanel.add( new javax.swing.JLabel( "Color that changes:" ) ) ;
org/nlogo/shape/editor/EditorDialog.java:514:		javax.swing.JLabel nameLabel = new javax.swing.JLabel( "Name" ) ;
org/nlogo/shape/editor/EditorDialog.java:554:		setTitle( "Shape" ) ;
org/nlogo/shape/editor/EditorDialog.java:658:				( this , "Name:", "Name Shape", javax.swing.JOptionPane.PLAIN_MESSAGE ) ;
org/nlogo/shape/editor/EditorDialog.java:683:				( this , "A shape with this name already exists. Do you want to replace it?" ,
org/nlogo/shape/editor/EditorDialog.java:684:				  "Confirm Overwrite" , javax.swing.JOptionPane.YES_NO_OPTION ) ;

org/nlogo/shape/editor/ImportDialog.java:26:		super( frame , "Library", true ) ;
org/nlogo/shape/editor/ImportDialog.java:56:			new javax.swing.JButton( "Import" ) ;
org/nlogo/shape/editor/ImportDialog.java:120:		Object[] choices = { "Replace", "Rename", "Cancel" };
org/nlogo/shape/editor/ImportDialog.java-133-					(this,
org/nlogo/shape/editor/ImportDialog.java:134:					 "A shape with the name \"" + shape.getName() + "\" already exists in this model.\n" +  
org/nlogo/shape/editor/ImportDialog.java:135:					 "Do you want to replace the existing shape or rename the imported one?",
org/nlogo/shape/editor/ImportDialog.java:136:					 "Import",
org/nlogo/shape/editor/ImportDialog.java:149:						(this, "Import shape as:", "Import Shapes", javax.swing.JOptionPane.PLAIN_MESSAGE) ;
org/nlogo/shape/editor/ImportDialog.java:180:			(this, message, "Import", javax.swing.JOptionPane.WARNING_MESSAGE) ;

org/nlogo/shape/editor/LinkEditorDialog.java:52:							"You may lose changes made to this shape. Do you want to cancel anyway?" ,
org/nlogo/shape/editor/LinkEditorDialog.java:53:							"Confirm Cancel" , javax.swing.JOptionPane.YES_NO_OPTION ) )
org/nlogo/shape/editor/LinkEditorDialog.java:64:		javax.swing.JLabel label = new javax.swing.JLabel( "name: " ) ;
org/nlogo/shape/editor/LinkEditorDialog.java:72:		label = new javax.swing.JLabel( "direction indicator: " ) ;
org/nlogo/shape/editor/LinkEditorDialog.java:75:		javax.swing.JButton diButton = new javax.swing.JButton( "Edit" ) ;
org/nlogo/shape/editor/LinkEditorDialog.java:86:		label = new javax.swing.JLabel( "curviness: " ) ;
org/nlogo/shape/editor/LinkEditorDialog.java:100:		add( new javax.swing.JLabel( "left line" ) , c ) ;
org/nlogo/shape/editor/LinkEditorDialog.java:105:		add( new javax.swing.JLabel( "middle line" ) , c ) ;
org/nlogo/shape/editor/LinkEditorDialog.java:110:		add( new javax.swing.JLabel( "right line" ) , c ) ;
org/nlogo/shape/editor/LinkEditorDialog.java:137:		setTitle( "Link Shape" ) ;
org/nlogo/shape/editor/LinkEditorDialog.java:164:				( this , "Name:", "Name Shape", javax.swing.JOptionPane.PLAIN_MESSAGE ) ;
org/nlogo/shape/editor/LinkEditorDialog.java:185:			( this , "A shape with this name already exists. Do you want to replace it?" ,
org/nlogo/shape/editor/LinkEditorDialog.java:186:			  "Confirm Overwrite" , javax.swing.JOptionPane.YES_NO_OPTION ) )
org/nlogo/shape/editor/LinkEditorDialog.java:205:					( this , "Curviness:" , "Enter a number" , javax.swing.JOptionPane.PLAIN_MESSAGE ) ;

org/nlogo/shape/Line.java:61:		if( modifiedPoint.equals( "start" ) )
org/nlogo/shape/Line.java:65:		if( modifiedPoint.equals( "end" ) )
org/nlogo/shape/Line.java:136:		return "Line " + c.getRGB() + " " + marked + " " + start.x + " " + start.y + " " + end.x + " " + end.y;
org/nlogo/shape/Line.java:142:		return "Line with color " + c + " and bounds " + getBounds();
org/nlogo/shape/Line.java:177:			modifiedPoint = "start" ;
org/nlogo/shape/Line.java:181:			modifiedPoint = "end" ;

org/nlogo/shape/LinkLine.java:133:		return xcor +  " " + (isVisible ? "1" : "0") + " " + dashinessString() ;
org/nlogo/shape/LinkLine.java:138:		return "Link Line with xcor = " + xcor + " " + isVisible + " " + dashinessString() ;

org/nlogo/shape/LinkShape.java:316:	    String str =  name + "\n" + curviness + "\n" ;
org/nlogo/shape/LinkShape.java:374:		result.setName( "default" ) ;
org/nlogo/shape/LinkShape.java:382:		result.setName( "link direction" ) ;
org/nlogo/shape/LinkShape.java:386:			( "Line -7500403 true 150 150 90 180" ) ;
org/nlogo/shape/LinkShape.java:388:			( "Line -7500403 true 150 150 210 180" ) ;

org/nlogo/shape/Polygon.java:75:		System.out.println("Max ycoord: " + max(yArray) +", Min ycoord: " + min(yArray));
org/nlogo/shape/Polygon.java:222:		return "Polygon - color: " + c + ",\n          bounds: " + getBounds();
org/nlogo/shape/Polygon.java-237-		String ret = "";							// Write the color and filled status
org/nlogo/shape/Polygon.java:238:		ret += "Polygon " + c.getRGB() + " " + filled + " " + marked ;
org/nlogo/shape/Polygon.java:242:			ret += " " + getElt(i, xcoords) + " " + getElt(i, ycoords) ;
org/nlogo/shape/Polygon.java:261:		boolean b1 = tokenizer.nextToken().equals( "true" );
org/nlogo/shape/Polygon.java:262:		boolean b2 = tokenizer.nextToken().equals( "true" );

org/nlogo/shape/Rectangle.java:76:		if ( modifiedPoint.equals( "upperLeft" ) )
org/nlogo/shape/Rectangle.java:82:		if ( modifiedPoint.equals( "upperRight" ) )
org/nlogo/shape/Rectangle.java:88:		if ( modifiedPoint.equals( "lowerRight" ) )
org/nlogo/shape/Rectangle.java:94:		if ( modifiedPoint.equals( "lowerLeft" ) )
org/nlogo/shape/Rectangle.java:245:		return "Type: Rectangle, color: " + c + ",\n bounds: " + getBounds();
org/nlogo/shape/Rectangle.java-251-		// Don't need to save <upperRight> and <lowerLeft>, because they can be derived from the other two
org/nlogo/shape/Rectangle.java:252:		return "Rectangle " + c.getRGB() + " " + filled + " " + marked + " " + upperLeft.x + " " + upperLeft.y  
org/nlogo/shape/Rectangle.java:253:			+ " " + lowerRight.x + " " + lowerRight.y;
org/nlogo/shape/Rectangle.java:263:		boolean b1 = tokenizer.nextToken().equals( "true" );
org/nlogo/shape/Rectangle.java:264:		boolean b2 = tokenizer.nextToken().equals( "true" );
org/nlogo/shape/Rectangle.java:291:			modifiedPoint = "upperLeft" ;
org/nlogo/shape/Rectangle.java:295:			modifiedPoint = "upperRight" ;
org/nlogo/shape/Rectangle.java:299:			modifiedPoint = "lowerRight" ;
org/nlogo/shape/Rectangle.java:303:			modifiedPoint = "lowerLeft" ;

# not sure if we need to get this stuff or not yet. leaving for now.
org/nlogo/shape/VectorShape.java-293-	public String toReadableString()
org/nlogo/shape/VectorShape.java-294-	{
org/nlogo/shape/VectorShape.java:295:		String ret = "Shape " + name + ":\n";
org/nlogo/shape/VectorShape.java-296-		for (int i=0; i<elementList.size(); ++i)
org/nlogo/shape/VectorShape.java-297-		{
org/nlogo/shape/VectorShape.java-307-	public String toString()
org/nlogo/shape/VectorShape.java-308-	{
org/nlogo/shape/VectorShape.java:309:		String ret = name + "\n" + rotatable + "\n" + editableColorIndex;
org/nlogo/shape/VectorShape.java-310-		for (int i=0; i<elementList.size(); ++i)
org/nlogo/shape/VectorShape.java-311-		{
org/nlogo/shape/VectorShape.java-327-	{
org/nlogo/shape/VectorShape.java-328-		org.nlogo.shape.Element element = null ;
org/nlogo/shape/VectorShape.java:329:		if( line.startsWith( "Line" ) )				// See what shape it is, and parse it accordingly
org/nlogo/shape/VectorShape.java-330-		{
org/nlogo/shape/VectorShape.java-331-			element = Line.parseLine( line ) ;
org/nlogo/shape/VectorShape.java-332-		}
org/nlogo/shape/VectorShape.java:333:		else if( line.startsWith( "Rectangle" ) )
org/nlogo/shape/VectorShape.java-334-		{
org/nlogo/shape/VectorShape.java-335-			element = Rectangle.parseRectangle( line ) ;
org/nlogo/shape/VectorShape.java-336-		}
org/nlogo/shape/VectorShape.java:337:		else if( line.startsWith( "Circle" ) )
org/nlogo/shape/VectorShape.java-338-		{
org/nlogo/shape/VectorShape.java-339-			element = Circle.parseCircle( line ) ;
org/nlogo/shape/VectorShape.java-340-		}
org/nlogo/shape/VectorShape.java:341:		else if( line.startsWith( "Polygon" ) )
org/nlogo/shape/VectorShape.java-342-		{
org/nlogo/shape/VectorShape.java-343-			element = Polygon.parsePolygon( line ) ;
org/nlogo/shape/VectorShape.java-344-		}
org/nlogo/shape/VectorShape.java-345-		// ellipses aren't supported right now - SAB/ST 6/11/04
org/nlogo/shape/VectorShape.java:346:		//else if( line.startsWith( "Ellipse" ) )
org/nlogo/shape/VectorShape.java-347-		//{
org/nlogo/shape/VectorShape.java-348-		//	element = Ellipse.parseEllipse( line ) ;
org/nlogo/shape/VectorShape.java-351-		{
org/nlogo/shape/VectorShape.java-352-			throw new IllegalStateException
org/nlogo/shape/VectorShape.java:353:				( "Invalid shape format in file: " + line ) ;
org/nlogo/shape/VectorShape.java-354-		}
org/nlogo/shape/VectorShape.java-355-		if( element != null )
org/nlogo/shape/VectorShape.java-405-		shape.setName( getString( shapes, index++ ) );
org/nlogo/shape/VectorShape.java-406-
org/nlogo/shape/VectorShape.java:407:		if( shape.getName().indexOf( "StarLogoT") != -1 )
org/nlogo/shape/VectorShape.java-408-		{
org/nlogo/shape/VectorShape.java-409-			// oops, it's not really shapes, it's the version line of a
org/nlogo/shape/VectorShape.java-410-			// StarLogoT model... so ignore it
org/nlogo/shape/VectorShape.java:411:			throw new IllegalStateException( "found StarLogoT version instead of shape" ) ;
org/nlogo/shape/VectorShape.java-412-		}
org/nlogo/shape/VectorShape.java-413-				
org/nlogo/shape/VectorShape.java:414:		shape.setRotatable( getString( shapes, index++ ).equals( "true" ) ) ;
org/nlogo/shape/VectorShape.java-415-		int rgb = Integer.valueOf( getString( shapes , index++ ) ).intValue() ;
org/nlogo/shape/VectorShape.java-416-		boolean translateColors = version != null && 
org/nlogo/shape/VectorShape.java-453-		result.setEditableColorIndex( 0 ) ;
org/nlogo/shape/VectorShape.java-454-		result.addElement
org/nlogo/shape/VectorShape.java:455:			( "Polygon -7500403 true true 150 5 40 250 150 205 260 250" ) ;
org/nlogo/shape/VectorShape.java-456-		return result ;
org/nlogo/shape/VectorShape.java-457-	}

org/nlogo/swing/BrowserLauncher.java-88-					throw new BrowserNotFoundException(
org/nlogo/swing/BrowserLauncher.java:89:						"NetLogo could not find and execute a web browser named \'firefox\'." +
org/nlogo/swing/BrowserLauncher.java:90:						"Please install Firefox and ensure that the \'firefox\' command " +
org/nlogo/swing/BrowserLauncher.java:91:						"is in your executable PATH.  Firefox is available here:\n " +
org/nlogo/swing/BrowserLauncher.java:92:						"http://www.mozilla.com/firefox/\n\n" +
org/nlogo/swing/BrowserLauncher.java:93:						"The full error message was:\n " + ex.getLocalizedMessage()
org/nlogo/swing/BrowserLauncher.java-94-						);
org/nlogo/swing/BrowserLauncher.java-95-				}

org/nlogo/swing/MessageDialog.java:66:			new javax.swing.AbstractAction( "Dismiss" ) {

org/nlogo/swing/ModalProgressTask.java:47:		super( "ModalProgressTask boss" ) ;

org/nlogo/swing/PrinterManager.java:77:		String pageNumString = " - page " + pageNum ;

org/nlogo/swing/SelectableJLabel.java-11-		// add spaces because (on windows) the left char might get cut if font is bold
org/nlogo/swing/SelectableJLabel.java:12:		super( " " + str + " "); 
org/nlogo/swing/SelectableJLabel.java:17:		setFont( javax.swing.UIManager.getFont( "Label.font" ) );

org/nlogo/swing/TextFieldBox.java:128:		fb.addField("Name:", new JTextField(20));
org/nlogo/swing/TextFieldBox.java:129:		fb.addField("Server location or IP address:", new JTextField(8));
org/nlogo/swing/TextFieldBox.java:130:		fb.addField("Port:", new JTextField(20));
org/nlogo/swing/TextFieldBox.java:135:		d.setTitle( "TextFieldBox" );

org/nlogo/swing/Utils.java:16:			( bogusFrame , "Notice" ,
org/nlogo/swing/Utils.java:18:			  new String[] { "Continue" } ) ;
org/nlogo/swing/Utils.java:29:			  new String[] { "Continue" } ) ;

# what the heck is this thing?
org/nlogo/swing/VTextIcon.java-85-	public void propertyChange(PropertyChangeEvent e) {
org/nlogo/swing/VTextIcon.java-86-		String prop = e.getPropertyName();
org/nlogo/swing/VTextIcon.java:87:		if("font".equals(prop)) {
org/nlogo/swing/VTextIcon.java-88-			recalcDimensions();
org/nlogo/swing/VTextIcon.java-89-		}
org/nlogo/swing/VTextIcon.java-156-			int yPos = y + fCharHeight;
org/nlogo/swing/VTextIcon.java-157-			for (int i = 0; i < fCharStrings.length; i++) {
org/nlogo/swing/VTextIcon.java:158:				// Special rules for Japanese - "half-height" characters (like ya, yu, yo in combinations)
org/nlogo/swing/VTextIcon.java-159-				// should draw in the top-right quadrant when drawn vertically
org/nlogo/swing/VTextIcon.java-160-				// - they draw in the bottom-left normally
org/nlogo/swing/VTextIcon.java-297-	// small a, i, u, e, o, tsu, ya, yu, yo, wa  (katakana only) ka ke
org/nlogo/swing/VTextIcon.java-298-	static final String S_DRAWS_IN_TOP_RIGHT = 
org/nlogo/swing/VTextIcon.java:299:		"\u3041\u3043\u3045\u3047\u3049\u3063\u3083\u3085\u3087\u308E" + // hiragana 
org/nlogo/swing/VTextIcon.java:300:		"\u30A1\u30A3\u30A5\u30A7\u30A9\u30C3\u30E3\u30E5\u30E7\u30EE\u30F5\u30F6"; // katakana
org/nlogo/swing/VTextIcon.java:301:	static final String S_DRAWS_IN_FAR_TOP_RIGHT = "\u3001\u3002"; // comma, full stop
org/nlogo/swing/VTextIcon.java-302-
org/nlogo/swing/VTextIcon.java-303-	static final int DEFAULT_CJK = ROTATE_NONE;


# not sure if we need to deal with all these. but, leaving here for now.
# the are mostly just sysouts and illegal args though...
org/nlogo/util/MersenneTwisterFast.java-220-		{
org/nlogo/util/MersenneTwisterFast.java-221-			throw new RuntimeException
org/nlogo/util/MersenneTwisterFast.java:222:				( "identifier mismatch: expected \"" + IDENTIFIER +
org/nlogo/util/MersenneTwisterFast.java:223:				  "\", got \"" + identifier + "\"" ) ;
org/nlogo/util/MersenneTwisterFast.java-224-		}
org/nlogo/util/MersenneTwisterFast.java-225-		__mag01[ 0 ] = Integer.parseInt( tokenizer.nextToken() ) ;
org/nlogo/util/MersenneTwisterFast.java-228-		__nextNextGaussian = Double.parseDouble( tokenizer.nextToken() ) ;
org/nlogo/util/MersenneTwisterFast.java-229-		String next = tokenizer.nextToken() ;
org/nlogo/util/MersenneTwisterFast.java:230:		if( next.equals( "true" ) )
org/nlogo/util/MersenneTwisterFast.java-231-		{
org/nlogo/util/MersenneTwisterFast.java-232-			__haveNextNextGaussian = true ;
org/nlogo/util/MersenneTwisterFast.java-233-		}
org/nlogo/util/MersenneTwisterFast.java:234:		else if( next.equals( "false" ) )
org/nlogo/util/MersenneTwisterFast.java-235-		{
org/nlogo/util/MersenneTwisterFast.java-236-			__haveNextNextGaussian = false ;
org/nlogo/util/MersenneTwisterFast.java-239-		{
org/nlogo/util/MersenneTwisterFast.java-240-			throw new RuntimeException
org/nlogo/util/MersenneTwisterFast.java:241:				( "expected true or false, got \"" + next + "\"" ) ;
org/nlogo/util/MersenneTwisterFast.java-242-		}
org/nlogo/util/MersenneTwisterFast.java-243-		for( int i = 0 ; i < N ; i++ )
org/nlogo/util/MersenneTwisterFast.java-351-		if( DEBUG )
org/nlogo/util/MersenneTwisterFast.java-352-		{
org/nlogo/util/MersenneTwisterFast.java:353:			System.out.println( "nextInt()" ) ;
org/nlogo/util/MersenneTwisterFast.java-354-			Thread.dumpStack() ;
org/nlogo/util/MersenneTwisterFast.java-355-		}
org/nlogo/util/MersenneTwisterFast.java-393-		if( DEBUG )
org/nlogo/util/MersenneTwisterFast.java-394-		{
org/nlogo/util/MersenneTwisterFast.java:395:			System.out.println( "nextShort()" ) ;
org/nlogo/util/MersenneTwisterFast.java-396-			Thread.dumpStack() ;
org/nlogo/util/MersenneTwisterFast.java-397-		}
org/nlogo/util/MersenneTwisterFast.java-435-		if( DEBUG )
org/nlogo/util/MersenneTwisterFast.java-436-		{
org/nlogo/util/MersenneTwisterFast.java:437:			System.out.println( "nextChar()" ) ;
org/nlogo/util/MersenneTwisterFast.java-438-			Thread.dumpStack() ;
org/nlogo/util/MersenneTwisterFast.java-439-		}
org/nlogo/util/MersenneTwisterFast.java-477-		if( DEBUG )
org/nlogo/util/MersenneTwisterFast.java-478-		{
org/nlogo/util/MersenneTwisterFast.java:479:			System.out.println( "nextBoolean()" ) ;
org/nlogo/util/MersenneTwisterFast.java-480-			Thread.dumpStack() ;
org/nlogo/util/MersenneTwisterFast.java-481-		}
org/nlogo/util/MersenneTwisterFast.java-525-		if( DEBUG )
org/nlogo/util/MersenneTwisterFast.java-526-		{
org/nlogo/util/MersenneTwisterFast.java:527:			System.out.println( "nextBoolean(" + probability + ")" ) ;
org/nlogo/util/MersenneTwisterFast.java-528-			Thread.dumpStack() ;
org/nlogo/util/MersenneTwisterFast.java-529-		}
org/nlogo/util/MersenneTwisterFast.java-531-        
org/nlogo/util/MersenneTwisterFast.java-532-        if (probability < 0.0f || probability > 1.0f)
org/nlogo/util/MersenneTwisterFast.java:533:            throw new IllegalArgumentException ("probability must be between 0.0 and 1.0 inclusive.");
org/nlogo/util/MersenneTwisterFast.java-534-        if (probability==0.0f) return false;            // fix half-open issues
org/nlogo/util/MersenneTwisterFast.java-535-        else if (probability==1.0f) return true;        // fix half-open issues
org/nlogo/util/MersenneTwisterFast.java-574-		if( DEBUG )
org/nlogo/util/MersenneTwisterFast.java-575-		{
org/nlogo/util/MersenneTwisterFast.java:576:			System.out.println( "nextBoolean(" + probability + ")" ) ;
org/nlogo/util/MersenneTwisterFast.java-577-			Thread.dumpStack() ;
org/nlogo/util/MersenneTwisterFast.java-578-		}
org/nlogo/util/MersenneTwisterFast.java-581-
org/nlogo/util/MersenneTwisterFast.java-582-        if (probability < 0.0 || probability > 1.0)
org/nlogo/util/MersenneTwisterFast.java:583:            throw new IllegalArgumentException ("probability must be between 0.0 and 1.0 inclusive.");
org/nlogo/util/MersenneTwisterFast.java-584-        if (probability==0.0) return false;             // fix half-open issues
org/nlogo/util/MersenneTwisterFast.java-585-        else if (probability==1.0) return true; // fix half-open issues
org/nlogo/util/MersenneTwisterFast.java-649-		if( DEBUG )
org/nlogo/util/MersenneTwisterFast.java-650-		{
org/nlogo/util/MersenneTwisterFast.java:651:			System.out.println( "nextByte()" ) ;
org/nlogo/util/MersenneTwisterFast.java-652-			Thread.dumpStack() ;
org/nlogo/util/MersenneTwisterFast.java-653-		}
org/nlogo/util/MersenneTwisterFast.java-691-		if( DEBUG )
org/nlogo/util/MersenneTwisterFast.java-692-		{
org/nlogo/util/MersenneTwisterFast.java:693:			System.out.println( "nextBytes(" + bytes + ")" ) ;
org/nlogo/util/MersenneTwisterFast.java-694-			Thread.dumpStack() ;
org/nlogo/util/MersenneTwisterFast.java-695-		}
org/nlogo/util/MersenneTwisterFast.java-736-		if( DEBUG )
org/nlogo/util/MersenneTwisterFast.java-737-		{
org/nlogo/util/MersenneTwisterFast.java:738:			System.out.println( "nextLong()" ) ;
org/nlogo/util/MersenneTwisterFast.java-739-			Thread.dumpStack() ;
org/nlogo/util/MersenneTwisterFast.java-740-		}
org/nlogo/util/MersenneTwisterFast.java-809-		if( DEBUG )
org/nlogo/util/MersenneTwisterFast.java-810-		{
org/nlogo/util/MersenneTwisterFast.java:811:			System.out.println( "nextLong(" + n + ")" ) ;
org/nlogo/util/MersenneTwisterFast.java-812-			Thread.dumpStack() ;
org/nlogo/util/MersenneTwisterFast.java-813-		}
org/nlogo/util/MersenneTwisterFast.java-814-        if (n<=0)
org/nlogo/util/MersenneTwisterFast.java:815:            throw new IllegalArgumentException("n must be positive");
org/nlogo/util/MersenneTwisterFast.java-816-        
org/nlogo/util/MersenneTwisterFast.java-817-        long bits, val;
org/nlogo/util/MersenneTwisterFast.java-890-		if( DEBUG )
org/nlogo/util/MersenneTwisterFast.java-891-		{
org/nlogo/util/MersenneTwisterFast.java:892:			System.out.println( "nextDouble()" ) ;
org/nlogo/util/MersenneTwisterFast.java-893-			Thread.dumpStack() ;
org/nlogo/util/MersenneTwisterFast.java-894-		}
org/nlogo/util/MersenneTwisterFast.java-965-		if( DEBUG )
org/nlogo/util/MersenneTwisterFast.java-966-		{
org/nlogo/util/MersenneTwisterFast.java:967:			System.out.println( "nextGaussian()" ) ;
org/nlogo/util/MersenneTwisterFast.java-968-			Thread.dumpStack() ;
org/nlogo/util/MersenneTwisterFast.java-969-		}
org/nlogo/util/MersenneTwisterFast.java-1121-		if( DEBUG )
org/nlogo/util/MersenneTwisterFast.java-1122-		{
org/nlogo/util/MersenneTwisterFast.java:1123:			System.out.println( "nextFloat" ) ;
org/nlogo/util/MersenneTwisterFast.java-1124-			Thread.dumpStack() ;
org/nlogo/util/MersenneTwisterFast.java-1125-		}
org/nlogo/util/MersenneTwisterFast.java-1166-		if( DEBUG )
org/nlogo/util/MersenneTwisterFast.java-1167-		{
org/nlogo/util/MersenneTwisterFast.java:1168:			System.out.println( "nextInt(" + n + ")" ) ;
org/nlogo/util/MersenneTwisterFast.java-1169-			Thread.dumpStack() ;
org/nlogo/util/MersenneTwisterFast.java-1170-		}
org/nlogo/util/MersenneTwisterFast.java-1171-        if (n<=0)
org/nlogo/util/MersenneTwisterFast.java:1172:            throw new IllegalArgumentException("n must be positive");
org/nlogo/util/MersenneTwisterFast.java-1173-        
org/nlogo/util/MersenneTwisterFast.java-1174-        if ((n & -n) == n)  // i.e., n is a power of 2
org/nlogo/util/MersenneTwisterFast.java-1265-        
org/nlogo/util/MersenneTwisterFast.java-1266-        r = new MersenneTwisterFast(new int[]{0x123, 0x234, 0x345, 0x456});
org/nlogo/util/MersenneTwisterFast.java:1267:        System.out.println("Output of MersenneTwisterFast with new (2002/1/26) seeding mechanism");
org/nlogo/util/MersenneTwisterFast.java-1268-        for (j=0;j<1000;j++)
org/nlogo/util/MersenneTwisterFast.java-1269-		{
org/nlogo/util/MersenneTwisterFast.java:1270:            // first, convert the int from signed to "unsigned"
org/nlogo/util/MersenneTwisterFast.java-1271-            long l = r.nextInt();
org/nlogo/util/MersenneTwisterFast.java-1272-            if (l < 0 ) l += 4294967296L;  // max int value
org/nlogo/util/MersenneTwisterFast.java-1282-
org/nlogo/util/MersenneTwisterFast.java-1283-        int xx; long ms;
org/nlogo/util/MersenneTwisterFast.java:1284:        System.out.println("\nTime to test grabbing 100000000 ints");
org/nlogo/util/MersenneTwisterFast.java-1285-          
org/nlogo/util/MersenneTwisterFast.java-1286-        java.util.Random rr = new java.util.Random(SEED);
org/nlogo/util/MersenneTwisterFast.java-1289-        for (j = 0; j < 100000000; j++)
org/nlogo/util/MersenneTwisterFast.java-1290-            xx += rr.nextInt();
org/nlogo/util/MersenneTwisterFast.java:1291:        System.out.println("java.util.Random: " + (System.currentTimeMillis()-ms) + "          Ignore this: " + xx);
org/nlogo/util/MersenneTwisterFast.java-1292-        
org/nlogo/util/MersenneTwisterFast.java-1293-        r = new MersenneTwisterFast(SEED);
org/nlogo/util/MersenneTwisterFast.java-1296-        for (j = 0; j < 100000000; j++)
org/nlogo/util/MersenneTwisterFast.java-1297-            xx += r.nextInt();
org/nlogo/util/MersenneTwisterFast.java:1298:        System.out.println("Mersenne Twister Fast: " + (System.currentTimeMillis()-ms) + "          Ignore this: " + xx);
org/nlogo/util/MersenneTwisterFast.java-1299-        
org/nlogo/util/MersenneTwisterFast.java-1300-        // TEST TO COMPARE TYPE CONVERSION BETWEEN
org/nlogo/util/MersenneTwisterFast.java-1301-        // MersenneTwisterFast.java AND MersenneTwister.java
org/nlogo/util/MersenneTwisterFast.java-1302-          
org/nlogo/util/MersenneTwisterFast.java:1303:        System.out.println("\nGrab the first 1000 booleans");
org/nlogo/util/MersenneTwisterFast.java-1304-        r = new MersenneTwisterFast(SEED);
org/nlogo/util/MersenneTwisterFast.java-1305-        for (j = 0; j < 1000; j++)
org/nlogo/util/MersenneTwisterFast.java-1310-        if (!(j%8==7)) System.out.println();
org/nlogo/util/MersenneTwisterFast.java-1311-          
org/nlogo/util/MersenneTwisterFast.java:1312:        System.out.println("\nGrab 1000 booleans of increasing probability using nextBoolean(double)");
org/nlogo/util/MersenneTwisterFast.java-1313-        r = new MersenneTwisterFast(SEED);
org/nlogo/util/MersenneTwisterFast.java-1314-        for (j = 0; j < 1000; j++)
org/nlogo/util/MersenneTwisterFast.java-1319-        if (!(j%8==7)) System.out.println();
org/nlogo/util/MersenneTwisterFast.java-1320-          
org/nlogo/util/MersenneTwisterFast.java:1321:        System.out.println("\nGrab 1000 booleans of increasing probability using nextBoolean(float)");
org/nlogo/util/MersenneTwisterFast.java-1322-        r = new MersenneTwisterFast(SEED);
org/nlogo/util/MersenneTwisterFast.java-1323-        for (j = 0; j < 1000; j++)
org/nlogo/util/MersenneTwisterFast.java-1329-          
org/nlogo/util/MersenneTwisterFast.java-1330-        byte[] bytes = new byte[1000];
org/nlogo/util/MersenneTwisterFast.java:1331:        System.out.println("\nGrab the first 1000 bytes using nextBytes");
org/nlogo/util/MersenneTwisterFast.java-1332-        r = new MersenneTwisterFast(SEED);
org/nlogo/util/MersenneTwisterFast.java-1333-        r.nextBytes(bytes);
org/nlogo/util/MersenneTwisterFast.java-1340-        
org/nlogo/util/MersenneTwisterFast.java-1341-        byte b;
org/nlogo/util/MersenneTwisterFast.java:1342:        System.out.println("\nGrab the first 1000 bytes -- must be same as nextBytes");
org/nlogo/util/MersenneTwisterFast.java-1343-        r = new MersenneTwisterFast(SEED);
org/nlogo/util/MersenneTwisterFast.java-1344-        for (j = 0; j < 1000; j++)
org/nlogo/util/MersenneTwisterFast.java-1345-		{
org/nlogo/util/MersenneTwisterFast.java-1346-            System.out.print((b = r.nextByte()) + " ");
org/nlogo/util/MersenneTwisterFast.java:1347:            if (b!=bytes[j]) System.out.print("BAD ");
org/nlogo/util/MersenneTwisterFast.java-1348-            if (j%16==15) System.out.println();
org/nlogo/util/MersenneTwisterFast.java-1349-		}
org/nlogo/util/MersenneTwisterFast.java-1350-        if (!(j%16==15)) System.out.println();
org/nlogo/util/MersenneTwisterFast.java-1351-
org/nlogo/util/MersenneTwisterFast.java:1352:        System.out.println("\nGrab the first 1000 shorts");
org/nlogo/util/MersenneTwisterFast.java-1353-        r = new MersenneTwisterFast(SEED);
org/nlogo/util/MersenneTwisterFast.java-1354-        for (j = 0; j < 1000; j++)
org/nlogo/util/MersenneTwisterFast.java-1359-        if (!(j%8==7)) System.out.println();
org/nlogo/util/MersenneTwisterFast.java-1360-
org/nlogo/util/MersenneTwisterFast.java:1361:        System.out.println("\nGrab the first 1000 ints");
org/nlogo/util/MersenneTwisterFast.java-1362-        r = new MersenneTwisterFast(SEED);
org/nlogo/util/MersenneTwisterFast.java-1363-        for (j = 0; j < 1000; j++)
org/nlogo/util/MersenneTwisterFast.java-1368-        if (!(j%4==3)) System.out.println();
org/nlogo/util/MersenneTwisterFast.java-1369-
org/nlogo/util/MersenneTwisterFast.java:1370:        System.out.println("\nGrab the first 1000 ints of different sizes");
org/nlogo/util/MersenneTwisterFast.java-1371-        r = new MersenneTwisterFast(SEED);
org/nlogo/util/MersenneTwisterFast.java-1372-        int max = 1;
org/nlogo/util/MersenneTwisterFast.java-1380-        if (!(j%4==3)) System.out.println();
org/nlogo/util/MersenneTwisterFast.java-1381-
org/nlogo/util/MersenneTwisterFast.java:1382:        System.out.println("\nGrab the first 1000 longs");
org/nlogo/util/MersenneTwisterFast.java-1383-        r = new MersenneTwisterFast(SEED);
org/nlogo/util/MersenneTwisterFast.java-1384-        for (j = 0; j < 1000; j++)
org/nlogo/util/MersenneTwisterFast.java-1389-        if (!(j%3==2)) System.out.println();
org/nlogo/util/MersenneTwisterFast.java-1390-
org/nlogo/util/MersenneTwisterFast.java:1391:        System.out.println("\nGrab the first 1000 longs of different sizes");
org/nlogo/util/MersenneTwisterFast.java-1392-        r = new MersenneTwisterFast(SEED);
org/nlogo/util/MersenneTwisterFast.java-1393-        long max2 = 1;
org/nlogo/util/MersenneTwisterFast.java-1401-        if (!(j%4==3)) System.out.println();
org/nlogo/util/MersenneTwisterFast.java-1402-          
org/nlogo/util/MersenneTwisterFast.java:1403:        System.out.println("\nGrab the first 1000 floats");
org/nlogo/util/MersenneTwisterFast.java-1404-        r = new MersenneTwisterFast(SEED);
org/nlogo/util/MersenneTwisterFast.java-1405-        for (j = 0; j < 1000; j++)
org/nlogo/util/MersenneTwisterFast.java-1410-        if (!(j%4==3)) System.out.println();
org/nlogo/util/MersenneTwisterFast.java-1411-
org/nlogo/util/MersenneTwisterFast.java:1412:        System.out.println("\nGrab the first 1000 doubles");
org/nlogo/util/MersenneTwisterFast.java-1413-        r = new MersenneTwisterFast(SEED);
org/nlogo/util/MersenneTwisterFast.java-1414-        for (j = 0; j < 1000; j++)
org/nlogo/util/MersenneTwisterFast.java-1419-        if (!(j%3==2)) System.out.println();
org/nlogo/util/MersenneTwisterFast.java-1420-
org/nlogo/util/MersenneTwisterFast.java:1421:        System.out.println("\nGrab the first 1000 gaussian doubles");
org/nlogo/util/MersenneTwisterFast.java-1422-        r = new MersenneTwisterFast(SEED);
org/nlogo/util/MersenneTwisterFast.java-1423-        for (j = 0; j < 1000; j++)


# lots of crap here. not sure if we need to deal with it.
org/nlogo/util/SysInfo.scala-7-    catch { case _: RuntimeException => null }
org/nlogo/util/SysInfo.scala-8-  def getVMInfoString = {
org/nlogo/util/SysInfo.scala:9:    var result = getProperty("java.vm.name") +
org/nlogo/util/SysInfo.scala:10:      " " + getProperty("java.version") +
org/nlogo/util/SysInfo.scala:11:      " (" + getProperty("java.vendor")
org/nlogo/util/SysInfo.scala:12:    if(getProperty("java.fullversion") != null)
org/nlogo/util/SysInfo.scala:13:      result += "; " + getProperty("java.fullversion")
org/nlogo/util/SysInfo.scala:14:    else if(getProperty("java.runtime.version") != null)
org/nlogo/util/SysInfo.scala:15:      result += "; " + getProperty("java.runtime.version")
org/nlogo/util/SysInfo.scala-16-    result += ")"
org/nlogo/util/SysInfo.scala-17-    result
org/nlogo/util/SysInfo.scala-18-  }
org/nlogo/util/SysInfo.scala-19-  def isLibgcj =
org/nlogo/util/SysInfo.scala:20:    getVMInfoString.indexOf("libgcj") != -1
org/nlogo/util/SysInfo.scala-21-  def getOSInfoString = 
org/nlogo/util/SysInfo.scala:22:    "operating system: " + getProperty("os.name") +
org/nlogo/util/SysInfo.scala:23:      " " + getProperty("os.version") +
org/nlogo/util/SysInfo.scala:24:      " ("  + getProperty("os.arch") + " processor)"
org/nlogo/util/SysInfo.scala-25-  def getMemoryInfoString = {
org/nlogo/util/SysInfo.scala-26-    val runtime = Runtime.getRuntime()
org/nlogo/util/SysInfo.scala-29-    val free = runtime.freeMemory() / 1024 / 1024
org/nlogo/util/SysInfo.scala-30-    val max = runtime.maxMemory() / 1024 / 1024
org/nlogo/util/SysInfo.scala:31:    "Java heap: " +
org/nlogo/util/SysInfo.scala:32:      "used = " + (total - free) +
org/nlogo/util/SysInfo.scala:33:      " MB, free = " + free +
org/nlogo/util/SysInfo.scala:34:      " MB, max = " + max +
org/nlogo/util/SysInfo.scala:35:      " MB"
org/nlogo/util/SysInfo.scala-36-  }
org/nlogo/util/SysInfo.scala:37:  var getJOGLInfoString = "JOGL: (3D View not initialized)" 
org/nlogo/util/SysInfo.scala:38:  var getGLInfoString = "OpenGL Graphics: (3D View not initialized)" 
org/nlogo/util/SysInfo.scala-39-  // keep the revision number around because it takes a while to do the lookup - ev 1/18/07
org/nlogo/util/SysInfo.scala-42-  // not threadsafe, but OK since it's event-thread-only
org/nlogo/util/SysInfo.scala-43-  def getSVNInfoString = {
org/nlogo/util/SysInfo.scala-48-  private def fetchSVNInfoString() {
org/nlogo/util/SysInfo.scala-53-    }
org/nlogo/util/SysInfo.scala-60-        Iterator.continually(reader.readLine()).takeWhile(_ != null)
org/nlogo/util/SysInfo.scala-61-      }
org/nlogo/util/SysInfo.scala-65-    }
org/nlogo/util/SysInfo.scala-66-    catch{
org/nlogo/util/SysInfo.scala-72-    try {
org/nlogo/util/SysInfo.scala-73-      var nulls = 0
org/nlogo/util/SysInfo.scala:74:      var browser = getProperty("browser")
org/nlogo/util/SysInfo.scala-75-      if(browser == null) {
org/nlogo/util/SysInfo.scala-76-        nulls += 1
org/nlogo/util/SysInfo.scala:77:        browser = "(unknown browser)"
org/nlogo/util/SysInfo.scala-78-      }
org/nlogo/util/SysInfo.scala:79:      var version = getProperty("browser.version")
org/nlogo/util/SysInfo.scala-80-      if(version == null) {
org/nlogo/util/SysInfo.scala-81-        nulls += 1
org/nlogo/util/SysInfo.scala:82:        version = "(unknown version)"
org/nlogo/util/SysInfo.scala-83-      }
org/nlogo/util/SysInfo.scala:84:      var vendor = getProperty("browser.vendor")
org/nlogo/util/SysInfo.scala-85-      if(vendor == null) {
org/nlogo/util/SysInfo.scala-86-        nulls += 1
org/nlogo/util/SysInfo.scala-88-      }
org/nlogo/util/SysInfo.scala-89-      else
org/nlogo/util/SysInfo.scala:90:        vendor = " (" + vendor + ")"
org/nlogo/util/SysInfo.scala-91-      if(nulls == 3) null
org/nlogo/util/SysInfo.scala-92-      else browser + " " + version + vendor
org/nlogo/util/SysInfo.scala-94-    // fail at least somewhat gracefully if we run into permissions problems
org/nlogo/util/SysInfo.scala-95-    catch { case ex: RuntimeException => null }
org/nlogo/util/SysInfo.scala:96:  def getScalaVersionString = "Scala " +
org/nlogo/util/SysInfo.scala-97-    (try scala.util.Properties.versionString
org/nlogo/util/SysInfo.scala-98-     catch {
org/nlogo/util/SysInfo.scala-100-       // but that won't work in an unsigned applet, so we give up. - ST 6/30/10
org/nlogo/util/SysInfo.scala-101-       case _: ExceptionInInitializerError =>
org/nlogo/util/SysInfo.scala:102:         "version unknown"
org/nlogo/util/SysInfo.scala-103-     })
org/nlogo/util/SysInfo.scala-104-}


org/nlogo/widget/NoteWidget.java-91-
org/nlogo/widget/NoteWidget.java-92-	@Override
org/nlogo/widget/NoteWidget.java:93:	public String classDisplayName() { return "Note" ; }
org/nlogo/widget/NoteWidget.java-94-
org/nlogo/widget/NoteWidget.java-95-	///
org/nlogo/widget/NoteWidget.java-184-	{
org/nlogo/widget/NoteWidget.java-185-		StringBuilder s = new StringBuilder() ;
org/nlogo/widget/NoteWidget.java:186:		s.append( "TEXTBOX\n" ) ;
org/nlogo/widget/NoteWidget.java-187-		s.append( getBoundsString() ) ;
org/nlogo/widget/NoteWidget.java-188-		if( text.trim().equals( "" ) )
org/nlogo/widget/NoteWidget.java-189-		{
org/nlogo/widget/NoteWidget.java:190:			s.append( "NIL\n" ) ;
org/nlogo/widget/NoteWidget.java-191-		}
org/nlogo/widget/NoteWidget.java-192-		else
org/nlogo/widget/NoteWidget.java-203-	public Object load( String[] strings , Widget.LoadHelper helper )
org/nlogo/widget/NoteWidget.java-204-	{
org/nlogo/widget/NoteWidget.java:205:		if( strings[ 5 ].equals( "NIL" ) )
org/nlogo/widget/NoteWidget.java-206-		{
org/nlogo/widget/NoteWidget.java-207-			text( "" ) ;

org/nlogo/widget/Properties.scala-10-object Properties {
org/nlogo/widget/Properties.scala-11-  val text = JavaList(
org/nlogo/widget/Properties.scala:12:    P("text", P.BigString, "Text"),
org/nlogo/widget/Properties.scala:13:    P("fontSize", P.Integer, "Font size"),
org/nlogo/widget/Properties.scala:14:    P("transparency", P.Boolean, "Transparent background"),
org/nlogo/widget/Properties.scala:15:    P("color", P.Color, "Text color")
org/nlogo/widget/Properties.scala-16-  )
org/nlogo/widget/Properties.scala-17-  val swiitch = JavaList(
org/nlogo/widget/Properties.scala:18:    P("nameWrapper", P.Identifier, "Global variable")
org/nlogo/widget/Properties.scala-19-  )
org/nlogo/widget/Properties.scala-20-  val dummySwitch = JavaList(
org/nlogo/widget/Properties.scala:21:    P("name", P.String, "Tag")
org/nlogo/widget/Properties.scala-22-  )
org/nlogo/widget/Properties.scala-23-}

org/nlogo/widget/Switch.java:98:			+ fontMetrics.stringWidth("Off") ;
org/nlogo/widget/Switch.java:149:		g.drawString( "On" ,
org/nlogo/widget/Switch.java:153:		g.drawString( "Off" ,
org/nlogo/widget/Switch.java:158:			StrictMath.max( fontMetrics.stringWidth( "On" ) , fontMetrics.stringWidth( "Off" ) ) +

org/nlogo/widget/SwitchWidget.java:18:	public String classDisplayName() { return "Switch" ; }

org/nlogo/window/AbstractPlotWidget.scala:25:  plot.createPlotPen("default", false, "", "plot count turtles")
org/nlogo/window/AbstractPlotWidget.scala:153:  override def classDisplayName = "Plot"

org/nlogo/window/AppletAdPanel.java:14:		JVertLabel label = new JVertLabel( "powered by NetLogo" ) ;

org/nlogo/window/ButtonWidget.scala:25:    val ObserverButton = ButtonType("observer", classOf[Observer], img = None, darkImg = None)
org/nlogo/window/ButtonWidget.scala:26:    val TurtleButton = ButtonType("turtle", classOf[Turtle], "/images/turtle.gif")
org/nlogo/window/ButtonWidget.scala:27:    val LinkButton = ButtonType("link", classOf[Link], "/images/link.gif")
org/nlogo/window/ButtonWidget.scala:28:    val PatchButton = ButtonType("patch", classOf[Patch], "/images/patch.gif")
org/nlogo/window/ButtonWidget.scala:223:  override def classDisplayName = "Button"

org/nlogo/window/Chooser.java:157:				new javax.swing.JMenuItem( "<No Choices>" ) ;

org/nlogo/window/ColorDialog.java-191-		blackName.setActionCommand("0.0");
org/nlogo/window/ColorDialog.java-209-		whiteName.setActionCommand("9.9");
org/nlogo/window/ColorDialog.java-423-		oneStep = new JRadioButton("1");
org/nlogo/window/ColorDialog.java-428-		pointFiveStep = new JRadioButton("0.5");
org/nlogo/window/ColorDialog.java-432-		pointOneStep = new JRadioButton("0.1");

org/nlogo/window/Event.java-58-			java.util.Date time = (java.util.Date) info[ 3 ] ;
org/nlogo/window/Event.java-59-			String timeString =
org/nlogo/window/Event.java:60:				new java.text.SimpleDateFormat( "hh:mm:ss.SSS" ).format( time ) ;
org/nlogo/window/Event.java-61-			buf.append( timeString + " " + eventName( event ) +
org/nlogo/window/Event.java:62:						" (" + readableName( raiser ) + ") " +
org/nlogo/window/Event.java-63-							thread.getName() + "\n" ) ;
org/nlogo/window/Event.java-64-		}
org/nlogo/window/Event.java-81-
org/nlogo/window/Event.java:110:			return longName + " (" + clazz.getName() + ")" ;
org/nlogo/window/Event.java:158:				&& ! name.equals( "PeriodicUpdateEvent" )
org/nlogo/window/Event.java:159:				&& ! name.equals( "InterfaceGlobalEvent" )
org/nlogo/window/Event.java-160-				)
org/nlogo/window/Event.java:166:				System.out.println( "raising " + name + ": " + readableName( raiser ) ) ;
org/nlogo/window/Event.java:207:					&& ! name.equals( "PeriodicUpdateEvent" )
org/nlogo/window/Event.java:208:					&& ! name.equals( "InterfaceGlobalEvent" )
org/nlogo/window/Event.java:215:					System.out.println( "handling " + eventName( this )
org/nlogo/window/Event.java-216-										+ ": " + readableName( handler ) ) ;

org/nlogo/window/ExternalFileInterface.java:19:		return "ExternalFileInterface" ;

org/nlogo/window/GUIWorkspace.java:253:		message = "Warning: " + message ;
org/nlogo/window/GUIWorkspace.java:254:		switch( org.nlogo.swing.OptionDialog.show( getFrame() , "Warning" ,
org/nlogo/window/GUIWorkspace.java:758:			  } , "Halting..." ) ;
org/nlogo/window/GUIWorkspace.java:787:			evaluateCommands( "without-interruption [ startup ]" ,
org/nlogo/window/GUIWorkspace.java-806-			org.nlogo.swing.Utils.alert
org/nlogo/window/GUIWorkspace.java:807:				( "3D View", message, "" + jlex.getCause() ) ;
org/nlogo/window/GUIWorkspace.java:1112:				( getExportWindowFrame() , "Export View" ,
org/nlogo/window/GUIWorkspace.java:1114:				  guessExportName( "view.png" ) ) ;
org/nlogo/window/GUIWorkspace.java:1130:				  "Exporting..." ) ;
org/nlogo/window/GUIWorkspace.java:1144:				  "Error", javax.swing.JOptionPane.ERROR_MESSAGE) ;
org/nlogo/window/GUIWorkspace.java:1204:					( getFrame() , "Export Plot" , "There are no plots to export." ,
org/nlogo/window/GUIWorkspace.java:1214:				String message = "Export of all plots to" + e.filename + " failed: " + ex.getMessage() ;
org/nlogo/window/GUIWorkspace.java:1216:				org.nlogo.swing.OptionDialog.show( getFrame() , "Export Plot Failed" , message, options ) ;
org/nlogo/window/GUIWorkspace.java:1234:					String message = "Export of " + plot.name() + " plot to " + e.filename + " failed: " + ex.getMessage() ;
org/nlogo/window/GUIWorkspace.java:1236:					org.nlogo.swing.OptionDialog.show( getFrame() , "Export Plot Failed" , message, options ) ;
org/nlogo/window/GUIWorkspace.java:1249:			String message = "There are no plots to export." ;
org/nlogo/window/GUIWorkspace.java:1254:		String message = "Which plot would you like to export?" ;
org/nlogo/window/GUIWorkspace.java-1255-		int plotnum = org.nlogo.swing.OptionDialog.showAsList
org/nlogo/window/GUIWorkspace.java:1256:			( frame , "Export Plot" ,
org/nlogo/window/GUIWorkspace.java:1337:							RuntimeErrorDialog.show( "Runtime Error" , context , instruction , thread , ex ) ;

# lots of stuff here. blah.
org/nlogo/window/InputBox.java:22:	public String classDisplayName() { return "Input Box" ; }
org/nlogo/window/InputBox.java:73:			return "0 (black)" ;
org/nlogo/window/InputBox.java:77:			return "9.9 (white)" ;
org/nlogo/window/InputBox.java:118: 		type = new InputType( "String" ,  // hmm! is "String" translated?
org/nlogo/window/InputBox.java:124: 		typeOptions().addOption( "Number" , new NumberInputType( codeEditorKit ) ) ;
org/nlogo/window/InputBox.java:125:		typeOptions().addOption( "String" , type ) ;
org/nlogo/window/InputBox.java:126: 		typeOptions().addOption( "String (reporter)" , new ReporterInputType( codeEditorKit ) ) ;
org/nlogo/window/InputBox.java:127: 		typeOptions().addOption( "String (commands)" , new CommandInputType( codeEditorKit ) ) ;
org/nlogo/window/InputBox.java:128: 		typeOptions().addOption( "Color" , new ColorInputType( codeEditorKit ) ) ;
org/nlogo/window/InputBox.java:135: 		changeButton = new NLButton( "Change" ) ;
org/nlogo/window/InputBox.java:139: 		colorSwatch = new javax.swing.JButton( "black" ) ;
org/nlogo/window/InputBox.java:265:			if( msg.startsWith( "REPORT expected 1 input." ) )
org/nlogo/window/InputBox.java:267:				msg = "Expected reporter." ;
org/nlogo/window/InputBox.java:270: 				( frame , "Invalid input for a " + type ,
org/nlogo/window/InputBox.java:570:		if( type.equals( "Reporter" ) )
org/nlogo/window/InputBox.java:572:			type = "String (reporter)" ;
org/nlogo/window/InputBox.java:574:		else if( type.equals( "Commands" ) )
org/nlogo/window/InputBox.java:576:			type = "String (commands)" ;
org/nlogo/window/InputBox.java:578:		if( type.equals( "Number" ) )
org/nlogo/window/InputBox.java:582:		else if( type.equals( "Color" ) )
org/nlogo/window/InputBox.java:586:		else if( type.equals( "String (reporter)" ) )
org/nlogo/window/InputBox.java:590:		else if( type.equals( "String (commands)" ) )
org/nlogo/window/InputBox.java:624:		return "export.txt" ;
org/nlogo/window/InputBox.java-643-			javax.swing.JOptionPane.showMessageDialog
org/nlogo/window/InputBox.java:644:				( this , "Export failed.  Error:\n" + ex.getMessage() ,
org/nlogo/window/InputBox.java:645:				  "Export Failed", javax.swing.JOptionPane.ERROR_MESSAGE) ;
org/nlogo/window/InputBox.java:871:			super( "String (reporter)" , kit ,
org/nlogo/window/InputBox.java:901:			super( "String (commands)" , kit ,
org/nlogo/window/InputBox.java:925:			super( "Number" , kit ,
org/nlogo/window/InputBox.java:953:			super( "Color" , kit ,

org/nlogo/window/InterfaceFactory.scala:11:  val button = WidgetInfo("button", "button.gif")
org/nlogo/window/InterfaceFactory.scala:12:  val slider = WidgetInfo("slider", "slider.gif")
org/nlogo/window/InterfaceFactory.scala:13:  val switch = WidgetInfo("switch", "switch.gif")
org/nlogo/window/InterfaceFactory.scala:14:  val chooser = WidgetInfo("chooser", "chooser.gif")
org/nlogo/window/InterfaceFactory.scala:15:  val input = WidgetInfo("input", "input.gif")
org/nlogo/window/InterfaceFactory.scala:16:  val monitor = WidgetInfo("monitor", "monitor.gif")
org/nlogo/window/InterfaceFactory.scala:17:  val plot = WidgetInfo("plot", "plot.gif")
org/nlogo/window/InterfaceFactory.scala:18:  val output = WidgetInfo("output", "output.gif")
org/nlogo/window/InterfaceFactory.scala:19:  val note = WidgetInfo("note", "note.gif")
org/nlogo/window/InterfaceFactory.scala:20:  val view = WidgetInfo("view", "view.gif")

org/nlogo/window/ModelLoader.scala:41:              val message = "This model was created in " + version +
org/nlogo/window/ModelLoader.scala:42:                      ". You may need to make changes for it to work in " +
org/nlogo/window/ModelLoader.scala-43-                      org.nlogo.api.Version.version() + "."
org/nlogo/window/ModelLoader.scala:44:              val options = Array[Object]("Continue", "Open Transition Guide", "Cancel")
org/nlogo/window/ModelLoader.scala:45:              org.nlogo.swing.OptionDialog.show(linkParent, "Warning", message, options)

org/nlogo/window/MonitorWidget.java:98:	public String classDisplayName() { return "Monitor" ; }

org/nlogo/window/NetLogoListenerManager.java:61:				else if( e.widget.classDisplayName().equals( "Switch" ) )
org/nlogo/window/NetLogoListenerManager.java:83:						( "unknown widget type: " + e.widget ) ;
org/nlogo/window/NetLogoListenerManager.java:121:					( "unexpected agent class: " + e.sourceOwner.agentClass() ) ;

org/nlogo/window/OutputWidget.scala:12:  displayName("Output Area")
org/nlogo/window/OutputWidget.scala:24:  override def classDisplayName = "Output Area"
org/nlogo/window/OutputWidget.scala:27:  override def getDefaultExportName = "output.txt"

org/nlogo/window/PlotWidget.scala:33:    val copyItem = PimpedJMenuItem("Copy Image"){
org/nlogo/window/PlotWidget.scala:41:    PimpedJMenuItem("Clear"){ clear() }

org/nlogo/window/ProceduresLite.java:27:	public String classDisplayName() { return "Procedures" ; }

# double check that there arent anymore properties with examples in here that i missed.
org/nlogo/window/Properties.scala:38:      "<html>example: &quot;a&quot; &quot;b&quot; &quot;c&quot; 3 4 5</html>")
org/nlogo/window/Properties.scala:57:    P("decimalPlaces", P.Integer, I18N.gui("monitor.decimalPlaces"), "full precision is 17", gridWidth = RELATIVE),
org/nlogo/window/Properties.scala:117:      "<html>example: &quot;a&quot; &quot;b&quot; &quot;c&quot; 3 4 5</html>")

org/nlogo/window/QuickHelp.java:90:				  token.toUpperCase() + " could not be found in the NetLogo Dictionary.\n" +
org/nlogo/window/QuickHelp.java:91:				  "Would you like to open the full NetLogo Dictionary?" ,
org/nlogo/window/QuickHelp.java:92:				  "NetLogo" ,  javax.swing.JOptionPane.YES_NO_OPTION ) )

# this guy seems important
org/nlogo/window/RuntimeErrorDialog.java:29:		new javax.swing.JButton( "Don't show again" ) ;
org/nlogo/window/RuntimeErrorDialog.java:31:		new javax.swing.JCheckBox( "Show internal details" ) ;
org/nlogo/window/RuntimeErrorDialog.java:136:			javax.swing.JButton copyButton = new javax.swing.JButton( "Copy" ) ;
org/nlogo/window/RuntimeErrorDialog.java:169:			extra = "NetLogo is unable to supply you with more details "
org/nlogo/window/RuntimeErrorDialog.java:170:				+   "about this error.  Please report the problem to "
org/nlogo/window/RuntimeErrorDialog.java:171:			    +   "bugs@ccl.northwestern.edu and paste the contents "
org/nlogo/window/RuntimeErrorDialog.java:172:				+   "of this window into your E-mail.\n\n" ;
org/nlogo/window/RuntimeErrorDialog.java-174-		textWithoutDetails = "" ;
org/nlogo/window/RuntimeErrorDialog.java-185-			extra + javaStackTrace + "\n" +
org/nlogo/window/RuntimeErrorDialog.java-186-			org.nlogo.api.Version.version() + "\n" +
org/nlogo/window/RuntimeErrorDialog.java:187:			"main: " + className + "\n" +
org/nlogo/window/RuntimeErrorDialog.java:188:			"thread: " + threadName + "\n" +
org/nlogo/window/RuntimeErrorDialog.java:195:			"model: " + modelName + "\n\n" +
org/nlogo/window/RuntimeErrorDialog.java-196-			eventTrace ;
org/nlogo/window/RuntimeErrorDialog.java:203:				? "running as applet in unknown browser"
org/nlogo/window/RuntimeErrorDialog.java:204:				: ( "browser info: " + browser ) ;

org/nlogo/window/SliderWidget.scala:119:  override def classDisplayName = "Slider"

org/nlogo/window/UpdateManager.java-172-	{
org/nlogo/window/UpdateManager.java-173-		return String.format
org/nlogo/window/UpdateManager.java:174:			( "speed = %.0f, gap = %.0f us, ticks = %.3f, pause = %.0f us" ,
org/nlogo/window/UpdateManager.java-175-			  speed , nanoGap / 1000d , tickGap , updatePauseNanos() / 1000d ) ;
org/nlogo/window/UpdateManager.java-176-	}

org/nlogo/window/View.java:465:                    new javax.swing.JMenuItem("Copy View");
org/nlogo/window/View.java:477:                    new javax.swing.JMenuItem("Export View...");
org/nlogo/window/View.java:492:						+ org.nlogo.awt.Utils.colorize( "reset-perspective" , SyntaxColors.COMMAND_COLOR ) ) ;
org/nlogo/window/View.java:515:                    menu.add(new AgentMenuItem(patch, AgentMenuType.INSPECT, "inspect", false));
org/nlogo/window/View.java:532:                        menu.add(new AgentMenuItem(link, AgentMenuType.INSPECT, "inspect", false));
org/nlogo/window/View.java:628:            submenu.add( new AgentMenuItem( turtle , AgentMenuType.INSPECT , "inspect" , true ) ) ;
org/nlogo/window/View.java:631:        submenu.add( new AgentMenuItem( turtle , AgentMenuType.WATCH , "watch" , true ) ) ;
org/nlogo/window/View.java:632:		submenu.add( new AgentMenuItem( turtle , AgentMenuType.FOLLOW , "follow" , true ) ) ;

org/nlogo/window/ViewControlStrip.java:143:			super( " 3D " ) ; // spaces so it isn't so tiny
org/nlogo/window/ViewControlStrip.java:150:			setToolTipText( "Switch to 3D view" ) ;
org/nlogo/window/ViewControlStrip.java:293:			( this , "Warning" ,
org/nlogo/window/ViewControlStrip.java:294:			  "Changing the size will halt and clear the world." ,
org/nlogo/window/ViewControlStrip.java:295:			  new String[] { "Change Size" , "Cancel" } )

org/nlogo/window/ViewWidget.java:19:	public String classDisplayName() { return "World & View" ; }

# maybe these should be low priority
org/nlogo/window/VMCheck.java-29-		if( org.nlogo.util.SysInfo.isLibgcj() )
org/nlogo/window/VMCheck.java-30-		{
org/nlogo/window/VMCheck.java:31:			warn( "You have started NetLogo under the GNU libgcj Java VM. " +
org/nlogo/window/VMCheck.java:32:				  "NetLogo may not run well, or at all, under libgcj. " +
org/nlogo/window/VMCheck.java:33:				  "We recommend using either the Sun or IBM Java VM's to" +
org/nlogo/window/VMCheck.java:34:				  "run NetLogo." ) ;
org/nlogo/window/VMCheck.java-35-		}
org/nlogo/window/VMCheck.java-36-	}
org/nlogo/window/VMCheck.java-41-		bogusFrame.pack() ; // otherwise OptionDialog will fail to get font metrics
org/nlogo/window/VMCheck.java-42-		int choice = org.nlogo.swing.OptionDialog.show
org/nlogo/window/VMCheck.java:43:			( bogusFrame , "Warning" ,
org/nlogo/window/VMCheck.java:44:			  message + "  If you choose to continue, NetLogo may not " +
org/nlogo/window/VMCheck.java:45:			  "function properly." ,
org/nlogo/window/VMCheck.java:46:			  new String[] { "Quit" , "Continue" } ) ;
org/nlogo/window/VMCheck.java-47-		if( choice == 0 )
org/nlogo/window/VMCheck.java-48-		{

org/nlogo/window/Widget.scala:50:  def getDefaultExportName = "output.txt"

org/nlogo/window/WorldViewSettings.java:20:	public String classDisplayName() { return "Model Settings" ; }

org/nlogo/window/WorldViewSettings2D.java:103:                    String message = "Resizing the world kills all turtles. " +
org/nlogo/window/WorldViewSettings2D.java:104:                            "This may cause HubNet clients to be unresponsive. " +
org/nlogo/window/WorldViewSettings2D.java:105:                            "Consider kicking out all clients before proceeding.";
org/nlogo/window/WorldViewSettings2D.java:108:                                    "Kick clients?", message,
org/nlogo/window/WorldViewSettings2D.java:110:                                    new String[]{ "Kick clients", "Don't kick" });
org/nlogo/window/WorldViewSettings2D.java:121:				( org.nlogo.awt.Utils.getFrame( gWidget ) , runnable , "Resizing..." ) ;

org/nlogo/window/WorldViewSettings3D.java:367:				( org.nlogo.awt.Utils.getFrame( gWidget ) , runnable , "Resizing..." ) ;

# better double check the rest of AWS just in case.
org/nlogo/workspace/AbstractWorkspace.java:82:	public static final String DEFAULT_PREVIEW_COMMANDS = "setup repeat 75 [ go ]" ;
org/nlogo/workspace/AbstractWorkspace.java:149:		System.err.println( "WARNING: " + message ) ;
org/nlogo/workspace/AbstractWorkspace.java:282:			throw new java.io.IOException( "no SVN directory found" ) ;
org/nlogo/workspace/AbstractWorkspace.java:357:			return "Untitled" ;

org/nlogo/workspace/AbstractWorkspaceScala.scala:25:        "The tick counter has not been started yet. Use RESET-TICKS." )
org/nlogo/workspace/AbstractWorkspaceScala.scala:93:        } }.export("world",modelFileName,"")


org/nlogo/workspace/DefaultFileManager.java:60:			" (line number " + lineNumber +
org/nlogo/workspace/DefaultFileManager.java:61:			", character " + ( charPos + 1 ) + ")" ;
org/nlogo/workspace/DefaultFileManager.java-62-	}
org/nlogo/workspace/DefaultFileManager.java:214:			throw new java.io.IOException( "No file has been opened" ) ;
org/nlogo/workspace/DefaultFileManager.java:225:				throw new java.io.IOException( "The file " + currentFile.getAbsolutePath() + " cannot be found" ) ;
org/nlogo/workspace/DefaultFileManager.java:234:			String mode = ( currentFile.getMode() == org.nlogo.api.File.Mode.READ ) ? "READING" : "WRITING" ;
org/nlogo/workspace/DefaultFileManager.java:236:			throw new java.io.IOException( "You can only use " + mode + " primitives with this file" ) ;
org/nlogo/workspace/DefaultFileManager.java:264:			throw new java.io.IOException( "You need to close the file before deletion" ) ;
org/nlogo/workspace/DefaultFileManager.java:269:			throw new java.io.IOException( "You cannot delete a non-existent file." ) ;
org/nlogo/workspace/DefaultFileManager.java:273:			throw new java.io.IOException( "Modification to this file is denied." ) ;
org/nlogo/workspace/DefaultFileManager.java:277:			throw new java.io.IOException( "You can only delete files." ) ;
org/nlogo/workspace/DefaultFileManager.java:282:			throw new java.io.IOException( "Deletion failed." ) ;
org/nlogo/workspace/DefaultFileManager.java:295:			throw new java.io.IOException( "This filename is illegal, " + newFileName ) ;
org/nlogo/workspace/DefaultFileManager.java:320:			throw new java.io.IOException( "There is no file to file" ) ;
org/nlogo/workspace/DefaultFileManager.java:337:			throw new java.io.IOException( "There is no file to close" ) ;


# lots of stuff here.
org/nlogo/workspace/ExtensionManager.java:102:			errors.signalError( "Can't find extension: " + extName  ) ;
org/nlogo/workspace/ExtensionManager.java:154:					System.err.println( "Error while initializing extension.") ;
org/nlogo/workspace/ExtensionManager.java:155:					System.err.println( "Error is: " + ex ) ; 
org/nlogo/workspace/ExtensionManager.java:185:			errors.signalError( "This extension doesn't work with this version of NetLogo");
org/nlogo/workspace/ExtensionManager.java:218:			throw new IllegalStateException( path + " is not a valid pathname: " + ex ) ;
org/nlogo/workspace/ExtensionManager.java:236:						("Can't find extension " + path + " using URL " + jarPath);
org/nlogo/workspace/ExtensionManager.java:241:				throw new IllegalStateException( path + " is not a valid pathname: " + ex ) ;
org/nlogo/workspace/ExtensionManager.java:306:			("Can't find extension " + path);
org/nlogo/workspace/ExtensionManager.java:323:					throw new ExtensionException( "Can't find file " + path + " using " + fullPath ) ;
org/nlogo/workspace/ExtensionManager.java:328:				throw new ExtensionException( path + " is not a valid pathname: " + ex ) ;
org/nlogo/workspace/ExtensionManager.java:354:		throw new ExtensionException( "Can't find file " + path ) ;
org/nlogo/workspace/ExtensionManager.java:393:			errors.signalError( "Invalid URL: " + jarPath ) ;
org/nlogo/workspace/ExtensionManager.java:420:				errors.signalError( "Bad extension: Couldn't locate Class-Manager tag in Manifest File" ) ;
org/nlogo/workspace/ExtensionManager.java:431:				errors.signalError( "Bad extension: The ClassManager doesn't implement "
org/nlogo/workspace/ExtensionManager.java:432:									+ "org.nlogo.api.ClassManager" ) ;
org/nlogo/workspace/ExtensionManager.java:437:			errors.signalError( "Can't find extension " + jarPath) ;
org/nlogo/workspace/ExtensionManager.java:441:			errors.signalError( "Can't open extension " + jarPath) ;
org/nlogo/workspace/ExtensionManager.java:453:			errors.signalError( "Can't find class " + classMangName
org/nlogo/workspace/ExtensionManager.java:454:								+ " in extension" ) ;
org/nlogo/workspace/ExtensionManager.java:472:			errors.signalError( "Bad extension: Can't find a Manifest file in extension" ) ;
org/nlogo/workspace/ExtensionManager.java:480:			errors.signalError( "User halted compilation" ) ;
org/nlogo/workspace/ExtensionManager.java:500:				errors.signalError( "Bad extension: Can't find Manifest file in extension" ) ;
org/nlogo/workspace/ExtensionManager.java:508:				errors.signalError( "Bad extension: Can't find extension name in Manifest." ) ;
org/nlogo/workspace/ExtensionManager.java:515:			errors.signalError( "Can't find extension " + jarPath) ;
org/nlogo/workspace/ExtensionManager.java:519:			errors.signalError( "Can't open extension " + jarPath) ;
org/nlogo/workspace/ExtensionManager.java:568:						( "Error reading extension object "
org/nlogo/workspace/ExtensionManager.java-569-						  + extName + ":" + typeName
org/nlogo/workspace/ExtensionManager.java:570:						  + " " + value + " ==> " + ex.getMessage() ) ;

org/nlogo/workspace/ExtensionManager.java:622:		String str = "EXTENSION\tLOADED\tMODIFIED\tJARPATH\n";
org/nlogo/workspace/ExtensionManager.java-623-		str += "---------\t------\t---------\t---\n";
org/nlogo/workspace/ExtensionManager.java:632:			str +=  theJarContainer.prefix + "\t" + theJarContainer.loaded + "\t" + theJarContainer.modified + "\t" + theJarContainer.jarName + "\n";
org/nlogo/workspace/ExtensionManager.java:667:		String pstr = "\n\nEXTENSION\tPRIMITIVE\tTYPE\n";
org/nlogo/workspace/ExtensionManager.java-668-		pstr += "----------\t---------\t----\n";
org/nlogo/workspace/ExtensionManager.java:682:				String type = ( p instanceof org.nlogo.api.Reporter ? "Reporter" : "Command");
org/nlogo/workspace/ExtensionManager.java:683:				pstr += theJarContainer.prefix + "\t" + name + "\t" + type + "\n";
org/nlogo/workspace/ExtensionManager.java:765:				System.err.println( "Error unloading extension: " + ex );
org/nlogo/workspace/ExtensionManager.java-777-			return workspace.warningMessage(
org/nlogo/workspace/ExtensionManager.java:778:				"Could not determine version of NetLogo extension.  NetLogo can "
org/nlogo/workspace/ExtensionManager.java:779:				+ "try to load the extension, but it might not work.") ;
org/nlogo/workspace/ExtensionManager.java:784:				"You are attempting to open a NetLogo extension file that was created " +
org/nlogo/workspace/ExtensionManager.java:785:				"for a different version of the NetLogo Extension API.  (This NetLogo uses Extension API "
org/nlogo/workspace/ExtensionManager.java:786:				+ currentVer + "; the extension uses NetLogo Extension API " + jarVer
org/nlogo/workspace/ExtensionManager.java:787:				+ ".)  NetLogo can try to load the extension, " +
org/nlogo/workspace/ExtensionManager.java:788:				"but it might not work." ) ;
org/nlogo/workspace/ExtensionManager.java:804:			errors.signalError( "Can't open extension" ) ;
org/nlogo/workspace/ExtensionManager.java:807:			throw new IllegalStateException( "this code is unreachable" ) ;
org/nlogo/workspace/ExtensionManager.java:838:			throw new org.nlogo.api.ExtensionException( "there is no extension named " + name + "in this model" ) ;

org/nlogo/agent/Exporter.java-36-	void exportLinks( java.io.PrintWriter writer )
org/nlogo/agent/Exporter.java-37-	{
org/nlogo/agent/Exporter.java:38:		writer.println( Dump.csv.encode( "LINKS" ) ) ;
org/nlogo/agent/Exporter.java-39-		List<String> allLinkVars = new ArrayList<String>() ;
org/nlogo/agent/Exporter.java-40-		for( Iterator<String> iter = world.program().linksOwn.iterator() ;
org/nlogo/agent/Exporter.java-81-				String[] sortedBreedOwns = null ;
org/nlogo/agent/Exporter.java-82-
org/nlogo/agent/Exporter.java:83:				if ( ! key.equals( "LINKS" ) )
org/nlogo/agent/Exporter.java-84-				{
org/nlogo/agent/Exporter.java-85-					breedOwns = world.program().linkBreedsOwn.get( key ) ;
org/nlogo/agent/Exporter.java-130-	void exportRandomState( java.io.PrintWriter writer )
org/nlogo/agent/Exporter.java-131-	{
org/nlogo/agent/Exporter.java:132:		writer.println( Dump.csv.encode( "RANDOM STATE" ) ) ;
org/nlogo/agent/Exporter.java-133-		writer.println( Dump.csv.encode( world.mainRNG.save() ) ) ;
org/nlogo/agent/Exporter.java-134-		writer.println() ;
org/nlogo/agent/Exporter.java-137-	void exportGlobals( java.io.PrintWriter writer )
org/nlogo/agent/Exporter.java-138-	{
org/nlogo/agent/Exporter.java:139:		writer.println( Dump.csv.encode( "GLOBALS" ) );
org/nlogo/agent/Exporter.java:140:		writer.print( Dump.csv.encode( "min-pxcor" ) + ","
org/nlogo/agent/Exporter.java:141:					  + Dump.csv.encode( "max-pxcor" ) + ","
org/nlogo/agent/Exporter.java:142:					  + Dump.csv.encode( "min-pycor" ) + ","
org/nlogo/agent/Exporter.java:143:					  + Dump.csv.encode( "max-pycor" ) + ","
org/nlogo/agent/Exporter.java:144:					  + Dump.csv.encode( "perspective" ) + ","
org/nlogo/agent/Exporter.java:145:					  + Dump.csv.encode( "subject" ) + ","
org/nlogo/agent/Exporter.java:146:					  + Dump.csv.encode( "nextIndex" ) + ","
org/nlogo/agent/Exporter.java:147:					  + Dump.csv.encode( "directed-links" ) + ","
org/nlogo/agent/Exporter.java:148:					  + Dump.csv.encode( "ticks" ) ) ;
org/nlogo/agent/Exporter.java-149-
org/nlogo/agent/Exporter.java-150-		List<String> globals = world.program().globals ;
org/nlogo/agent/Exporter.java-180-					  + Dump.csv.data( subject ) + ","
org/nlogo/agent/Exporter.java-181-					  + Dump.csv.encode( Long.toString( world.nextTurtleIndex() ) ) + ","
org/nlogo/agent/Exporter.java:182:					  + Dump.csv.data( world.links().isDirected() ? "DIRECTED" :
org/nlogo/agent/Exporter.java:183:									   world.links().isUndirected() ? "UNDIRECTED" : "NEITHER" ) + ","
org/nlogo/agent/Exporter.java-184-					  + Dump.csv.encode( Dump.number( world.tickCounter.ticks() ) ) ) ;
org/nlogo/agent/Exporter.java-185-
org/nlogo/agent/Exporter.java-199-	void exportTurtles( java.io.PrintWriter writer )
org/nlogo/agent/Exporter.java-200-	{
org/nlogo/agent/Exporter.java:201:		writer.println( Dump.csv.encode("TURTLES") );
org/nlogo/agent/Exporter.java-202-		List<String> allTurtleVars =
org/nlogo/agent/Exporter.java-203-			new ArrayList<String>( world.program().turtlesOwn ) ;
org/nlogo/agent/Exporter.java-239-				String[] sortedBreedOwns = null ;
org/nlogo/agent/Exporter.java-240-
org/nlogo/agent/Exporter.java:241:				if ( !key.equals( "TURTLES" ) )
org/nlogo/agent/Exporter.java-242-				{
org/nlogo/agent/Exporter.java-243-					breedOwns = world.program().breedsOwn.get( key ) ;
org/nlogo/agent/Exporter.java-285-	void exportPatches( java.io.PrintWriter writer )
org/nlogo/agent/Exporter.java-286-	{
org/nlogo/agent/Exporter.java:287:		writer.println( Dump.csv.encode("PATCHES") );
org/nlogo/agent/Exporter.java-288-		List<String> vars = world.program().patchesOwn ;
org/nlogo/agent/Exporter.java-289-		writer.println( Dump.csv.variableNameRow( vars ) ) ;
org/nlogo/agent/Exporter3D.java-36-	void exportDrawing( java.io.PrintWriter writer )
org/nlogo/agent/Exporter3D.java-37-	{
org/nlogo/agent/Exporter3D.java:38:		writer.println( Dump.csv.encode( "DRAWING" ) ) ;
org/nlogo/agent/Exporter3D.java:39:		writer.println( Dump.csv.encode( "x0" )  + ","
org/nlogo/agent/Exporter3D.java:40:						+ Dump.csv.encode( "y0" )  + ","
org/nlogo/agent/Exporter3D.java:41:						+ Dump.csv.encode( "z0" )  + ","
org/nlogo/agent/Exporter3D.java:42:						+ Dump.csv.encode( "x1" )  + ","
org/nlogo/agent/Exporter3D.java:43:						+ Dump.csv.encode( "y1" )  + ","
org/nlogo/agent/Exporter3D.java:44:						+ Dump.csv.encode( "z1" )  + ","
org/nlogo/agent/Exporter3D.java:45:						+ Dump.csv.encode( "width" )  + ","
org/nlogo/agent/Exporter3D.java:46:						+ Dump.csv.encode( "color" ) ) ;
org/nlogo/agent/Exporter3D.java-47-
org/nlogo/agent/Exporter3D.java-48-		Drawing3D drawing  = ((World3D)world).drawing ;
org/nlogo/agent/Exporter3D.java-61-		}
org/nlogo/agent/Exporter3D.java-62-
org/nlogo/agent/Exporter3D.java:63:		writer.println( Dump.csv.encode( "shape" )  + ","
org/nlogo/agent/Exporter3D.java:64:						+ Dump.csv.encode( "xcor" )  + ","
org/nlogo/agent/Exporter3D.java:65:						+ Dump.csv.encode( "ycor" )  + ","
org/nlogo/agent/Exporter3D.java:66:						+ Dump.csv.encode( "zcor" )  + ","
org/nlogo/agent/Exporter3D.java:67:						+ Dump.csv.encode( "size" )  + ","
org/nlogo/agent/Exporter3D.java:68:						+ Dump.csv.encode( "heading" )  + ","
org/nlogo/agent/Exporter3D.java:69:						+ Dump.csv.encode( "pitch" )  + ","
org/nlogo/agent/Exporter3D.java:70:						+ Dump.csv.encode( "roll" )  + ","
org/nlogo/agent/Exporter3D.java:71:						+ Dump.csv.encode( "color" )  + ","
org/nlogo/agent/Exporter3D.java:72:						+ Dump.csv.encode( "lineThickness" ) ) ;
org/nlogo/agent/Exporter3D.java-73-
org/nlogo/agent/Exporter3D.java-74-		for( org.nlogo.api.TurtleStamp3D stamp : drawing.turtleStamps() )
org/nlogo/agent/Exporter3D.java-87-		}
org/nlogo/agent/Exporter3D.java-88-
org/nlogo/agent/Exporter3D.java:89:		writer.println( Dump.csv.encode( "shape" )  + ","
org/nlogo/agent/Exporter3D.java:90:						+ Dump.csv.encode( "x1" )  + ","
org/nlogo/agent/Exporter3D.java:91:						+ Dump.csv.encode( "y1" )  + ","
org/nlogo/agent/Exporter3D.java:92:						+ Dump.csv.encode( "z1" )  + ","
org/nlogo/agent/Exporter3D.java:93:						+ Dump.csv.encode( "x2" )  + ","
org/nlogo/agent/Exporter3D.java:94:						+ Dump.csv.encode( "y2" )  + ","
org/nlogo/agent/Exporter3D.java:95:						+ Dump.csv.encode( "z2" )  + ","
org/nlogo/agent/Exporter3D.java:96:						+ Dump.csv.encode( "color" )  + ","
org/nlogo/agent/Exporter3D.java:97:						+ Dump.csv.encode( "lineThickness" )  + ","
org/nlogo/agent/Exporter3D.java:98:						+ Dump.csv.encode( "directedLink" )  + ","
org/nlogo/agent/Exporter3D.java:99:						+ Dump.csv.encode( "destSize" ) + ","
org/nlogo/agent/Exporter3D.java:100:						+ Dump.csv.encode( "heading" )  + ","
org/nlogo/agent/Exporter3D.java:101:						+ Dump.csv.encode( "pitch" ) ) ;
org/nlogo/agent/Exporter3D.java-102-
org/nlogo/agent/Exporter3D.java-103-		for( org.nlogo.api.LinkStamp3D stamp : drawing.linkStamps() )
org/nlogo/agent/Exporter3D.java-125-	void exportGlobals( java.io.PrintWriter writer )
org/nlogo/agent/Exporter3D.java-126-	{
org/nlogo/agent/Exporter3D.java:127:		writer.println( Dump.csv.encode("GLOBALS") );
org/nlogo/agent/Exporter3D.java:128:		writer.print( Dump.csv.encode("min-pxcor") + ","
org/nlogo/agent/Exporter3D.java:129:					  + Dump.csv.encode( "max-pxcor" ) + ","
org/nlogo/agent/Exporter3D.java:130:					  + Dump.csv.encode( "min-pycor" ) + ","
org/nlogo/agent/Exporter3D.java:131:					  + Dump.csv.encode( "max-pycor" ) + ","
org/nlogo/agent/Exporter3D.java:132:					  + Dump.csv.encode( "min-pzcor" ) + ","
org/nlogo/agent/Exporter3D.java:133:					  + Dump.csv.encode( "max-pzcor" ) + ","
org/nlogo/agent/Exporter3D.java:134:					  + Dump.csv.encode( "perspective" ) + ","
org/nlogo/agent/Exporter3D.java:135:					  + Dump.csv.encode( "subject" ) + ","
org/nlogo/agent/Exporter3D.java:136:					  + Dump.csv.encode( "nextIndex" ) + ","
org/nlogo/agent/Exporter3D.java:137:					  + Dump.csv.encode( "directed-links" ) + ","
org/nlogo/agent/Exporter3D.java:138:					  + Dump.csv.encode( "ticks" ) ) ;
org/nlogo/agent/Exporter3D.java-139-
org/nlogo/agent/Exporter3D.java-140-		List<String> globals = world.program().globals ;
org/nlogo/agent/Exporter3D.java-173-					  + Dump.csv.data( subject ) + ","
org/nlogo/agent/Exporter3D.java-174-					  + Dump.csv.encode( Long.toString( world.nextTurtleIndex() ) ) + ","
org/nlogo/agent/Exporter3D.java:175:					  + Dump.csv.data( world.links().isDirected() ? "DIRECTED" :
org/nlogo/agent/Exporter3D.java:176:									   world.links().isUndirected() ? "UNDIRECTED" : "NEITHER" ) + ","
org/nlogo/agent/Exporter3D.java-177-					  + Dump.csv.encode( Dump.number( world.tickCounter.ticks() ) ) ) ;
org/nlogo/agent/Exporter3D.java-178-
org/nlogo/agent/Exporter3D.java-193-	void exportTurtles( java.io.PrintWriter writer )
org/nlogo/agent/Exporter3D.java-194-	{
org/nlogo/agent/Exporter3D.java:195:		writer.println( Dump.csv.encode("TURTLES") );
org/nlogo/agent/Exporter3D.java-196-		List<String> allTurtleVars = new ArrayList<String>( world.program().turtlesOwn ) ;
org/nlogo/agent/Exporter3D.java-197-		int turtlesVarSize = world.program().turtlesOwn.size() ;
org/nlogo/agent/Exporter3D.java-229-				String[] sortedBreedOwns = null ;
org/nlogo/agent/Exporter3D.java-230-
org/nlogo/agent/Exporter3D.java:231:				if ( !key.equals( "TURTLES" ) )
org/nlogo/agent/Exporter3D.java-232-				{
org/nlogo/agent/Exporter3D.java-233-					breedOwns = world.program().breedsOwn.get( key ) ;
org/nlogo/agent/HorizCylinder.java-23-		{
org/nlogo/agent/HorizCylinder.java:24:			throw new AgentException("Cannot move turtle beyond the world's edge.") ;
org/nlogo/agent/HorizCylinder.java-25-		}

org/nlogo/agent/Importer.java-32-
org/nlogo/agent/Importer.java:33:	static final String SCREEN_EDGE_X_HEADER = "SCREEN-EDGE-X" ;
org/nlogo/agent/Importer.java:34:	static final String SCREEN_EDGE_Y_HEADER = "SCREEN-EDGE-Y" ;
org/nlogo/agent/Importer.java-35-
org/nlogo/agent/Importer.java:36:    static final String MIN_PXCOR_HEADER = "MIN-PXCOR" ;
org/nlogo/agent/Importer.java:37:    static final String MAX_PXCOR_HEADER = "MAX-PXCOR" ;
org/nlogo/agent/Importer.java:38:    static final String MIN_PYCOR_HEADER = "MIN-PYCOR" ;
org/nlogo/agent/Importer.java:39:    static final String MAX_PYCOR_HEADER = "MAX-PYCOR" ;
org/nlogo/agent/Importer.java-40-
org/nlogo/agent/Importer.java:41:	static final String PERSPECTIVE_HEADER = "PERSPECTIVE" ;
org/nlogo/agent/Importer.java:42:	static final String SUBJECT_HEADER = "SUBJECT" ;
org/nlogo/agent/Importer.java:43:	static final String NEXT_INDEX_HEADER = "NEXTINDEX" ;
org/nlogo/agent/Importer.java:44:	static final String DIRECTED_LINKS_HEADER = "DIRECTED-LINKS" ;
org/nlogo/agent/Importer.java:45:	static final String TICKS_HEADER = "TICKS" ;
org/nlogo/agent/Importer.java-46-
org/nlogo/agent/Importer.java-47-	boolean needToResize = false ;
org/nlogo/agent/Importer.java-98-			versionNumber.startsWith( "2.0" ) ||
org/nlogo/agent/Importer.java-99-			versionNumber.startsWith( "2.1" ) ||
org/nlogo/agent/Importer.java:100:			versionNumber.startsWith( "2.2pre1" ) ||
org/nlogo/agent/Importer.java:101:			versionNumber.startsWith( "2.2pre2" )  )
org/nlogo/agent/Importer.java-102-		{
org/nlogo/agent/Importer.java-103-			convertPenDown = true ;
org/nlogo/agent/Importer.java-119-			versionNumber.startsWith( "2." ) ||
org/nlogo/agent/Importer.java-120-			versionNumber.startsWith( "3." ) ||
org/nlogo/agent/Importer.java:121:			versionNumber.startsWith( "4.0pre" ) ||
org/nlogo/agent/Importer.java:122:			versionNumber.startsWith( "4.0alpha" ) ||
org/nlogo/agent/Importer.java:123:			versionNumber.startsWith( "4.0beta1" ) )
org/nlogo/agent/Importer.java-124-		{
org/nlogo/agent/Importer.java-125-			olderThan40beta2 = true ;
org/nlogo/agent/Importer.java-137-			{
org/nlogo/agent/Importer.java-138-				String[] line = nextLine() ;
org/nlogo/agent/Importer.java:139:				String versionHeader = "export-world data (NetLogo " ;
org/nlogo/agent/Importer.java-140-				if( line[0].startsWith( versionHeader ) )
org/nlogo/agent/Importer.java-141-				{
org/nlogo/agent/Importer.java-144-				}
org/nlogo/agent/Importer.java-145-
org/nlogo/agent/Importer.java:146:				if( line[ 0 ].trim().equals( "RANDOM STATE" ) )
org/nlogo/agent/Importer.java-147-				{
org/nlogo/agent/Importer.java-148-					hasMoreLines( false ) ;
org/nlogo/agent/Importer.java-164-				importAgents( Link.class ) ;
org/nlogo/agent/Importer.java-165-			}
org/nlogo/agent/Importer.java:166:			if ( nextLine != null && nextLine.indexOf( "DRAWING" ) != -1 )
org/nlogo/agent/Importer.java-167-				{ importDrawing() ; }
org/nlogo/agent/Importer.java:168:			if( nextLine != null && nextLine.indexOf( "OUTPUT" ) != -1 )
org/nlogo/agent/Importer.java-169-			{
org/nlogo/agent/Importer.java-170-				importOutputArea() ;
org/nlogo/agent/Importer.java-185-		catch( InvalidDataException e )
org/nlogo/agent/Importer.java-186-		{
org/nlogo/agent/Importer.java:187:			errorHandler.showError( "Error Importing Drawing" ,
org/nlogo/agent/Importer.java:188:									"Invalid data length, the drawing will not be imported" , false ) ;
org/nlogo/agent/Importer.java-189-		}
org/nlogo/agent/Importer.java-190-	}
org/nlogo/agent/Importer.java-211-					if( plot == null )
org/nlogo/agent/Importer.java-212-					{
org/nlogo/agent/Importer.java:213:						errorHandler.showError( "Error Importing Plots" ,
org/nlogo/agent/Importer.java:214:												"The plot \"" + plotName + "\" does not exist.",
org/nlogo/agent/Importer.java-215-												false ) ;
org/nlogo/agent/Importer.java-216-						// gobble up remaining lines of this section
org/nlogo/agent/Importer.java-284-					else
org/nlogo/agent/Importer.java-285-					{
org/nlogo/agent/Importer.java:286:						errorHandler.showError( "Error Importing Plots" ,
org/nlogo/agent/Importer.java:287:												"The pen \"" + value + "\" does not exist.", false ) ;
org/nlogo/agent/Importer.java-288-						while( hasMoreLines( false ) )
org/nlogo/agent/Importer.java-289-						{
org/nlogo/agent/Importer.java-334-								catch( ClassCastException e )
org/nlogo/agent/Importer.java-335-								{
org/nlogo/agent/Importer.java:336:									errorHandler.showError( "Import Error" ,
org/nlogo/agent/Importer.java:337:														   "Error while importing " + plot.name() +
org/nlogo/agent/Importer.java:338:															", this point will be skipped." , false ) ;
org/nlogo/agent/Importer.java-339-
org/nlogo/agent/Importer.java-340-								}
org/nlogo/agent/Importer.java-343-						else
org/nlogo/agent/Importer.java-344-						{
org/nlogo/agent/Importer.java:345:							errorHandler.showError( "Error Importing Plots" ,
org/nlogo/agent/Importer.java:346:													"The pen \"" + pens[ i ] + "\" does not exist.", false ) ;
org/nlogo/agent/Importer.java-347-						}
org/nlogo/agent/Importer.java-348-					}
org/nlogo/agent/Importer.java-438-				{
org/nlogo/agent/Importer.java-439-					throw new InvalidDataException
org/nlogo/agent/Importer.java:440:						( "The data was not the correct length for the size of the world" ) ;
org/nlogo/agent/Importer.java-441-				}
org/nlogo/agent/Importer.java-442-
org/nlogo/agent/Importer.java-446-		    {
org/nlogo/agent/Importer.java-447-				throw new InvalidDataException
org/nlogo/agent/Importer.java:448:					( "invalid drawing data: drawing will not be imported" ) ;
org/nlogo/agent/Importer.java-449-			}
org/nlogo/agent/Importer.java-450-		}
org/nlogo/agent/Importer.java-478-		catch( org.nlogo.api.ExtensionException e )
org/nlogo/agent/Importer.java-479-		{
org/nlogo/agent/Importer.java:480:			errorHandler.showError( "Error Importing Extension Data" , e.getMessage() , false ) ;
org/nlogo/agent/Importer.java-481-		}
org/nlogo/agent/Importer.java-482-		catch( java.io.IOException e )
org/nlogo/agent/Importer.java-483-		{
org/nlogo/agent/Importer.java:484:			errorHandler.showError( "Error Importing Extension Data" , e.getMessage() , false ) ;
org/nlogo/agent/Importer.java-485-		}
org/nlogo/agent/Importer.java-486-	}
org/nlogo/agent/Importer.java-627-		{
org/nlogo/agent/Importer.java-628-			String str = (String) val ;
org/nlogo/agent/Importer.java:629:			if( ! str.equals( "NEITHER" ) )
org/nlogo/agent/Importer.java-630-			{
org/nlogo/agent/Importer.java:631:				world.links().setDirected( str.equals( "DIRECTED" ) ) ;
org/nlogo/agent/Importer.java-632-			}
org/nlogo/agent/Importer.java-633-		}
org/nlogo/agent/Importer.java-704-		if( !hasMoreLines( false ) )
org/nlogo/agent/Importer.java-705-		{
org/nlogo/agent/Importer.java:706:			String abortingError = "No " + printName( agentClass )  + " headers have been imported. " +
org/nlogo/agent/Importer.java:707:				"Globals, Turtles, and Patches must be in the same import file." ;
org/nlogo/agent/Importer.java-708-			throw new AbortingImportException
org/nlogo/agent/Importer.java-709-				( ImportError.UNEXPECTED_EOF_ERROR, abortingError ) ;
org/nlogo/agent/Importer.java-716-			if( ! mixedCaseHeaders[ i ].trim().equals( "" ) )
org/nlogo/agent/Importer.java-717-			{
org/nlogo/agent/Importer.java:718:				if( convertPenDown && mixedCaseHeaders[ i ].equalsIgnoreCase( "PEN-DOWN?" ) )
org/nlogo/agent/Importer.java-719-				{
org/nlogo/agent/Importer.java:720:					headers.add( "PEN-MODE" ) ;
org/nlogo/agent/Importer.java-721-				}
org/nlogo/agent/Importer.java-722-				else
org/nlogo/agent/Importer.java-740-		{
org/nlogo/agent/Importer.java-741-			return Arrays.asList( new String[]
org/nlogo/agent/Importer.java:742:				{ "PEN-SIZE" , "PEN-COLOR" } ) ;
org/nlogo/agent/Importer.java-743-		}
org/nlogo/agent/Importer.java-744-		if( olderThan40beta2 && agentClass == Link.class )
org/nlogo/agent/Importer.java-745-		{
org/nlogo/agent/Importer.java-746-			return Arrays.asList( new String []
org/nlogo/agent/Importer.java:747:				{ "SHAPE" , "TIE-MODE" } ) ;
org/nlogo/agent/Importer.java-748-		}
org/nlogo/agent/Importer.java-749-		else if( agentClass == Link.class )
org/nlogo/agent/Importer.java-750-		{
org/nlogo/agent/Importer.java-751-			return Arrays.asList( new String []
org/nlogo/agent/Importer.java:752:				{ "TIE-MODE" } ) ;
org/nlogo/agent/Importer.java-753-		}
org/nlogo/agent/Importer.java-754-		return null ;
org/nlogo/agent/Importer.java-775-					showError( new ImportException(
org/nlogo/agent/Importer.java-776-								   ImportError.TOO_MANY_VALUES_ERROR,
org/nlogo/agent/Importer.java:777:								   "Too Many Values For Agent",
org/nlogo/agent/Importer.java:778:								   "There are a total of " + headersArr.length + " "
org/nlogo/agent/Importer.java:779:								   + printName( agentClass ) + " variables declared in this "
org/nlogo/agent/Importer.java:780:								   + "model (including built-in " +
org/nlogo/agent/Importer.java-781-								   ( ( agentClass == Turtle.class || agentClass == Link.class )
org/nlogo/agent/Importer.java:782:									 ? "and breed " : "" )
org/nlogo/agent/Importer.java:783:								   + "variables).  The import-world file has at least one agent "
org/nlogo/agent/Importer.java:784:								   + "in the " + printSectionName()
org/nlogo/agent/Importer.java:785:								   + " section with more than this number of values.",
org/nlogo/agent/Importer.java:786:								   "All the extra values will be ignored for this section." ) ) ;
org/nlogo/agent/Importer.java-787-				}
org/nlogo/agent/Importer.java-788-			}
org/nlogo/agent/Importer.java-800-												  ( builtInVars[ Link.VAR_BREED ] ) ) ;
org/nlogo/agent/Importer.java-801-
org/nlogo/agent/Importer.java:802:			if( convertPenDown && headersArr[ i ].equals( "PEN-MODE" ) )
org/nlogo/agent/Importer.java-803-			{
org/nlogo/agent/Importer.java:804:				if( values[ i ].equalsIgnoreCase( "FALSE" ) )
org/nlogo/agent/Importer.java-805-				{
org/nlogo/agent/Importer.java:806:					values[ i ] = "\"up\"" ;
org/nlogo/agent/Importer.java-807-				}
org/nlogo/agent/Importer.java:808:				else if ( values[ i ].equals( "TRUE" ) )
org/nlogo/agent/Importer.java-809-				{
org/nlogo/agent/Importer.java:810:					values[ i ] = "\"down\"" ;
org/nlogo/agent/Importer.java-811-				}
org/nlogo/agent/Importer.java-812-			}
org/nlogo/agent/Importer.java-821-			{
org/nlogo/agent/Importer.java-822-				String abortingError =  "A " + printName( agentClass ) +
org/nlogo/agent/Importer.java:823:					" with the essential variable " + headersArr[ i ] +
org/nlogo/agent/Importer.java:824:					" cannot be imported since the agent's value in the import" +
org/nlogo/agent/Importer.java:825:					" file for " + headersArr[ i ] + " could not be imported." ;
org/nlogo/agent/Importer.java-826-				throw new AbortingImportException
org/nlogo/agent/Importer.java-827-					( ImportError.UNIMPORTED_ESSENTIAL_VAR_ERROR, abortingError ) ;
org/nlogo/agent/Importer.java-835-	{
org/nlogo/agent/Importer.java-836-		return (world.getBreed( breed.toUpperCase() ) != null)
org/nlogo/agent/Importer.java:837:				|| breed.equalsIgnoreCase( "TURTLES" )
org/nlogo/agent/Importer.java:838:				|| breed.equalsIgnoreCase( "PATCHES" )
org/nlogo/agent/Importer.java:839:			|| breed.equalsIgnoreCase( "LINKS" ) ;
org/nlogo/agent/Importer.java-840-	}
org/nlogo/agent/Importer.java-841-
org/nlogo/agent/Importer.java-864-						new ImportException(
org/nlogo/agent/Importer.java-865-							ImportError.ILLEGAL_BREED_ERROR,
org/nlogo/agent/Importer.java:866:							"Illegal Breed",
org/nlogo/agent/Importer.java-867-							ex.getMessage(),
org/nlogo/agent/Importer.java:868:							"all turtles with this breed will be made as regular turtles" ) );
org/nlogo/agent/Importer.java-869-				}
org/nlogo/agent/Importer.java-870-				return world.turtles() ;
org/nlogo/agent/Importer.java-878-						new ImportException
org/nlogo/agent/Importer.java-879-						( ImportError.ILLEGAL_BREED_ERROR,
org/nlogo/agent/Importer.java:880:						  "Illegal Link Breed",
org/nlogo/agent/Importer.java-881-						  ex.getMessage(),
org/nlogo/agent/Importer.java:882:						  "all links with this breed will be made as regular links" ) );
org/nlogo/agent/Importer.java-883-				}
org/nlogo/agent/Importer.java-884-				return world.links() ;
org/nlogo/agent/Importer.java-889-					new ImportException(
org/nlogo/agent/Importer.java-890-						ImportError.PARSING_ERROR,
org/nlogo/agent/Importer.java:891:						"Parsing Error",
org/nlogo/agent/Importer.java:892:						"error parsing the values:\n" + valueString,
org/nlogo/agent/Importer.java:893:						"the import will continue if it can, but values for this " +
org/nlogo/agent/Importer.java:894:							"agent's variables will be set to an appropriate default",
org/nlogo/agent/Importer.java-895-						ex.getMessage() ) ) ;
org/nlogo/agent/Importer.java-896-			}
org/nlogo/agent/Importer.java-954-				new ImportException(
org/nlogo/agent/Importer.java-955-					ImportError.ILLEGAL_AGENT_VAR_ERROR,
org/nlogo/agent/Importer.java:956:					"Illegal " + agentType + " Variable",
org/nlogo/agent/Importer.java:957:					"the " + agentType + " variable " + header + " does not " +
org/nlogo/agent/Importer.java:958:						"exist in this model.",
org/nlogo/agent/Importer.java:959:					"the import will continue but this variable will be ignored." ) ) ;
org/nlogo/agent/Importer.java-960-		}
org/nlogo/agent/Importer.java-961-		return varIndex ;
org/nlogo/agent/Importer.java-1003-				new ImportException(
org/nlogo/agent/Importer.java-1004-					ImportError.SETTING_VAR_ERROR,
org/nlogo/agent/Importer.java:1005:					"Error Setting Value",
org/nlogo/agent/Importer.java:1006:					"could not set " + agent + "'s variable " + header +
org/nlogo/agent/Importer.java:1007:						" to " + value,
org/nlogo/agent/Importer.java:1008:					"the import will continue, but the variable will be set " +
org/nlogo/agent/Importer.java:1009:						"to an appropriate default." ) ) ;
org/nlogo/agent/Importer.java-1010-
org/nlogo/agent/Importer.java-1011-		} catch( org.nlogo.api.LogoException ae )
org/nlogo/agent/Importer.java-1014-				new ImportException(
org/nlogo/agent/Importer.java-1015-					ImportError.SETTING_VAR_ERROR,
org/nlogo/agent/Importer.java:1016:					"Error Setting Value",
org/nlogo/agent/Importer.java:1017:					"could not set " + agent + "'s variable " + header +
org/nlogo/agent/Importer.java:1018:					" to " + value,
org/nlogo/agent/Importer.java:1019:					"the import will continue, but the variable will be set " +
org/nlogo/agent/Importer.java:1020:					"to an appropriate default." ) ) ;
org/nlogo/agent/Importer.java-1021-		}
org/nlogo/agent/Importer.java-1022-	}
org/nlogo/agent/Importer.java-1031-			if( ! world.validPatchCoordinates( pxcor , pycor ) )
org/nlogo/agent/Importer.java-1032-			{
org/nlogo/agent/Importer.java:1033:				String abortingError = "Illegal Patch Coordinate- pxcor and pycor must be in range." ;
org/nlogo/agent/Importer.java-1034-				throw new AbortingImportException
org/nlogo/agent/Importer.java-1035-					( ImportError.ILLEGAL_PCOR_ERROR , abortingError ) ;
org/nlogo/agent/Importer.java-1039-		catch( ClassCastException cce )
org/nlogo/agent/Importer.java-1040-		{
org/nlogo/agent/Importer.java:1041:			String abortingError = "Illegal Patch Coordinate- pxcor and pycor must be integers." ;
org/nlogo/agent/Importer.java-1042-			throw new AbortingImportException
org/nlogo/agent/Importer.java-1043-				( ImportError.ILLEGAL_CLASS_CAST_ERROR, abortingError ) ;
org/nlogo/agent/Importer.java-1053-		catch( ClassCastException cce )
org/nlogo/agent/Importer.java-1054-		{
org/nlogo/agent/Importer.java:1055:			String abortingError =  "Illegal Who- a turtle's who must be an integer." ;
org/nlogo/agent/Importer.java-1056-			throw new AbortingImportException
org/nlogo/agent/Importer.java-1057-				( ImportError.ILLEGAL_CLASS_CAST_ERROR, abortingError ) ;
org/nlogo/agent/Importer.java-1067-		catch( ClassCastException cce )
org/nlogo/agent/Importer.java-1068-		{
org/nlogo/agent/Importer.java:1069:			String abortingError =  "Illegal lwho- a link's who must be an integer." ;
org/nlogo/agent/Importer.java-1070-			throw new AbortingImportException
org/nlogo/agent/Importer.java-1071-				( ImportError.ILLEGAL_CLASS_CAST_ERROR, abortingError ) ;
org/nlogo/agent/Importer.java-1081-		catch( ClassCastException cce )
org/nlogo/agent/Importer.java-1082-		{
org/nlogo/agent/Importer.java:1083:			String abortingError =  "Illegal End a link's end points must be a turtle." ;
org/nlogo/agent/Importer.java-1084-			throw new AbortingImportException
org/nlogo/agent/Importer.java-1085-				( ImportError.ILLEGAL_CLASS_CAST_ERROR, abortingError ) ;
org/nlogo/agent/Importer.java-1100-				throw new ImportException(
org/nlogo/agent/Importer.java-1101-					ImportError.ILLEGAL_SHAPE_ERROR,
org/nlogo/agent/Importer.java:1102:					"Illegal Shape",
org/nlogo/agent/Importer.java-1103-					ae.getMessage(),
org/nlogo/agent/Importer.java:1104:					"setting " + turtle + "'s shape to its breed's default shape" ) ;
org/nlogo/agent/Importer.java-1105-			}
org/nlogo/agent/Importer.java-1106-			setVarVal( turtle, varIndex, header, world.turtleBreedShapes.breedShape
org/nlogo/agent/Importer.java-1168-		catch( ClassCastException cce )
org/nlogo/agent/Importer.java-1169-		{
org/nlogo/agent/Importer.java:1170:			String abortingError =  "Illegal Screen dimension- max-px/ycor, min-px/ycor must be numbers." ;
org/nlogo/agent/Importer.java-1171-			throw new AbortingImportException
org/nlogo/agent/Importer.java-1172-				( ImportError.ILLEGAL_CLASS_CAST_ERROR, abortingError ) ;
org/nlogo/agent/Importer.java-1402-				if( essentialHeaders )
org/nlogo/agent/Importer.java-1403-				{
org/nlogo/agent/Importer.java:1404:					String abortingError =  header + " is not in the list of variables to be imported " +
org/nlogo/agent/Importer.java:1405:						"from the import file in the " + printSectionName() + " section. " +
org/nlogo/agent/Importer.java:1406:						"This variable is essential to a model." ;
org/nlogo/agent/Importer.java-1407-					throw new AbortingImportException
org/nlogo/agent/Importer.java-1408-						( ImportError.UNDECLARED_ESSENTIAL_VAR_ERROR, abortingError ) ;
org/nlogo/agent/Importer.java-1413-						new ImportException(
org/nlogo/agent/Importer.java-1414-							ImportError.UNDECLARED_AGENT_VAR_ERROR,
org/nlogo/agent/Importer.java:1415:							"Implicit Variable Not Declared",
org/nlogo/agent/Importer.java:1416:							"the " + printName( agentClass ) + " variable " +
org/nlogo/agent/Importer.java:1417:								header + " was not declared.",
org/nlogo/agent/Importer.java:1418:							"the import will continue but all agents with this " +
org/nlogo/agent/Importer.java:1419:								"variable will have it set to an appropriate default." ) ) ;
org/nlogo/agent/Importer.java-1420-				}
org/nlogo/agent/Importer.java-1421-			}
org/nlogo/agent/Importer.java-1450-	private String[] nextLineFields ;
org/nlogo/agent/Importer.java-1451-	private static final int REQUIRED_SECTIONS = 3 ;
org/nlogo/agent/Importer.java:1452:	private final String[] sentinels = { "GLOBALS", "TURTLES", "PATCHES", "LINKS", "DRAWING" , "OUTPUT", "PLOTS" , "EXTENSIONS" , "DONE" , } ;
org/nlogo/agent/Importer.java-1453-	private final int numSentinels = sentinels.length - 1 ;
org/nlogo/agent/Importer.java-1454-	private int currentSentinel = 0 ;
org/nlogo/agent/Importer.java-1475-				// old exports will not have LINKS sections either -- CLB 12/28/2005
org/nlogo/agent/Importer.java-1476-				// ooh, plots too. ev 7/7/06
org/nlogo/agent/Importer.java:1477:				if( sentinels[ currentSentinel ].equals( "DRAWING" )  ||
org/nlogo/agent/Importer.java:1478:					sentinels[ currentSentinel ].equals( "LINKS" )   ||
org/nlogo/agent/Importer.java:1479:					sentinels[ currentSentinel ].equals( "OUTPUT" )  ||
org/nlogo/agent/Importer.java:1480:					sentinels[ currentSentinel ].equals( "PLOTS" ) ||
org/nlogo/agent/Importer.java:1481:					sentinels[ currentSentinel ].equals( "EXTENSIONS" ) )
org/nlogo/agent/Importer.java-1482-				{
org/nlogo/agent/Importer.java-1483-					currentSentinel ++ ;
org/nlogo/agent/Importer.java-1484-					return false ;
org/nlogo/agent/Importer.java-1485-				}
org/nlogo/agent/Importer.java:1486:				String abortingError =  "No " + sentinels[ currentSentinel ] +
org/nlogo/agent/Importer.java:1487:					" have been imported.  Globals, Turtles, and Patches " +
org/nlogo/agent/Importer.java:1488:					"must be in the same import file." ;
org/nlogo/agent/Importer.java-1489-				throw new AbortingImportException
org/nlogo/agent/Importer.java-1490-					( ImportError.UNEXPECTED_EOF_ERROR, abortingError ) ;
org/nlogo/agent/Importer.java-1511-			throw new AbortingImportException
org/nlogo/agent/Importer.java-1512-				( ImportError.CSV_LEXING_ERROR,
org/nlogo/agent/Importer.java:1513:				  "At line " + lineNum + ": " + le.getMessage() ) ;
org/nlogo/agent/Importer.java-1514-		}
org/nlogo/agent/Importer.java-1515-		if( nextLineFields.length <= 0 )
org/nlogo/agent/Importer.java-1536-				if( currentSentinel < REQUIRED_SECTIONS )
org/nlogo/agent/Importer.java-1537-				{
org/nlogo/agent/Importer.java:1538:					String abortingError =  "The agents are in the wrong order in the import file. " +
org/nlogo/agent/Importer.java:1539:						"The global variables should be first, followed by the turtles, " +
org/nlogo/agent/Importer.java:1540:						"followed by the patches.  Found " + nextLineFields[0] +
org/nlogo/agent/Importer.java:1541:						" but needed " + sentinels[currentSentinel];
org/nlogo/agent/Importer.java-1542-					throw new AbortingImportException
org/nlogo/agent/Importer.java-1543-						( ImportError.FILE_STRUCTURE_ERROR, abortingError ) ;
org/nlogo/agent/Importer.java-1577-	String printSectionName()
org/nlogo/agent/Importer.java-1578-	{
org/nlogo/agent/Importer.java:1579:		return ( ( currentSentinel > 0 ) ? sentinels[ currentSentinel - 1 ] : "UNKNOWN" ) ;
org/nlogo/agent/Importer.java:1586:			return "Global" ;
org/nlogo/agent/Importer.java:1590:			return "Turtle" ;
org/nlogo/agent/Importer.java:1594:			return "Patch" ;
org/nlogo/agent/Importer.java:1598:			return "Link" ;
org/nlogo/agent/Importer.java-1600-		// there are no other agents
org/nlogo/agent/Importer.java-1609-			if( turtle.getBreed() == null )
org/nlogo/agent/Importer.java-1610-			{
org/nlogo/agent/Importer.java:1611:				String abortingError =  turtle.toString() + " was referenced in an agentset or agent " +
org/nlogo/agent/Importer.java:1612:				"but was not defined in the TURTLES section." ;
org/nlogo/agent/Importer.java-1613-				throw new AbortingImportException
org/nlogo/agent/Importer.java-1614-					( ImportError.BLANK_TURTLE_ERROR , abortingError ) ;
org/nlogo/agent/Importer.java-1652-								String errorMessage, String defaultAction )
org/nlogo/agent/Importer.java-1653-		{
org/nlogo/agent/Importer.java:1654:			super( errorTitle + "- Error Type: " + errorType ) ;
org/nlogo/agent/Importer.java-1655-			type = errorType ;
org/nlogo/agent/Importer.java-1656-			title = errorTitle ;
org/nlogo/agent/Importer.java-1662-		{
org/nlogo/agent/Importer.java-1663-			this( errorType, errorTitle, errorMessage, defaultAction ) ;
org/nlogo/agent/Importer.java:1664:			message += "\n\nAdditional Information: " + additionalInfo ;
org/nlogo/agent/Importer.java-1665-		}
org/nlogo/agent/Importer.java-1677-		{
org/nlogo/agent/Importer.java:1678:			super( "Fatal Error Type:" + errorType ) ;
org/nlogo/agent/Importer.java-1679-			this.errorType = errorType ;
org/nlogo/agent/Importer.java:1680:			title = "Fatal Error- " + getErrorMessage() ;
org/nlogo/agent/Importer.java:1681:			this.details = details + "\n\nThe import will now abort." ;
org/nlogo/agent/Importer.java-1689-				case ERROR_GIVEN:
org/nlogo/agent/Importer.java:1690:					message = "Error Already Given" ;
org/nlogo/agent/Importer.java-1691-					break;
org/nlogo/agent/Importer.java-1692-				case ILLEGAL_CLASS_CAST_ERROR:
org/nlogo/agent/Importer.java:1693:					message = "Illegal Type Cast" ;
org/nlogo/agent/Importer.java-1694-					break ;
org/nlogo/agent/Importer.java-1695-				case UNEXPECTED_EOF_ERROR:
org/nlogo/agent/Importer.java:1696:					message = "Unexpected End of File" ;
org/nlogo/agent/Importer.java-1697-					break;
org/nlogo/agent/Importer.java-1698-				case FILE_STRUCTURE_ERROR:
org/nlogo/agent/Importer.java:1699:					message = "Incorrect Structure For Import File" ;
org/nlogo/agent/Importer.java-1700-					break;
org/nlogo/agent/Importer.java-1701-				case UNDECLARED_ESSENTIAL_VAR_ERROR:
org/nlogo/agent/Importer.java:1702:					message = "Essential Variable Not Declared" ;
org/nlogo/agent/Importer.java-1703-					break;
org/nlogo/agent/Importer.java-1704-				case UNIMPORTED_ESSENTIAL_VAR_ERROR:
org/nlogo/agent/Importer.java:1705:					message = "Essential Variable Not Imported" ;
org/nlogo/agent/Importer.java-1706-					break ;
org/nlogo/agent/Importer.java-1707-				case BLANK_TURTLE_ERROR:
org/nlogo/agent/Importer.java:1708:					message = "Referenced Turtle Not Defined" ;
org/nlogo/agent/Importer.java-1709-					break;
org/nlogo/agent/Importer.java-1710-				case CSV_LEXING_ERROR:
org/nlogo/agent/Importer.java:1711:					message = "Invalid CSV File" ;
org/nlogo/agent/Importer.java-1712-					break ;
org/nlogo/agent/Importer.java-1713-			    case IMPORT_3D_ERROR:
org/nlogo/agent/Importer.java:1714:					message = "You cannot import a 2D world into 3D NetLogo" ;
org/nlogo/agent/Importer.java-1715-					break ;
org/nlogo/agent/Importer.java-1716-				default:
org/nlogo/agent/Importer.java:1717:					message = "Unknown Fatal Error" ;
org/nlogo/agent/Importer.java-1718-			}
org/nlogo/agent/Importer.java-1719-			return message ;
org/nlogo/agent/Importer.java-1727-		{
org/nlogo/agent/Importer.java-1728-			throw new AbortingImportException
org/nlogo/agent/Importer.java:1729:				( ImportError.UNKNOWN_ERROR, "An unknown error has occurred. The import will now abort." ) ;
org/nlogo/agent/Importer.java-1730-		}
org/nlogo/agent/Importer.java:1731:		if( ! errorHandler.showError( "Warning: " + ix.title ,
org/nlogo/agent/Importer.java:1732:				"Error Importing at Line " + lineNum + ": " + ix.message +
org/nlogo/agent/Importer.java:1733:				"\n\nAction to be Taken: " + ix.action , false ) )
org/nlogo/agent/Importer.java-1734-		{ throw new AbortingImportException
org/nlogo/agent/Importer.java-1735-				( ImportError.ERROR_GIVEN, NO_DETAILS ) ; }
org/nlogo/agent/Importer.java-1833-	    {
org/nlogo/agent/Importer.java-1834-			throw new InvalidDataException
org/nlogo/agent/Importer.java:1835:				( "The data must be a multiple of 4 to covert from Hex string to ints" ) ;
org/nlogo/agent/Importer.java:1865:			throw new IllegalArgumentException ( "Invalid hex character: " + c );
org/nlogo/agent/Importer3D.java-10-{
org/nlogo/agent/Importer3D.java:11:    static final String MIN_PZCOR_HEADER = "MIN-PZCOR" ;
org/nlogo/agent/Importer3D.java:12:    static final String MAX_PZCOR_HEADER = "MAX-PZCOR" ;
org/nlogo/agent/Importer3D.java-13-
org/nlogo/agent/Importer3D.java-14-	public Importer3D( Importer.ErrorHandler errorHandler , World world , ImporterUser importerUser ,
org/nlogo/agent/Importer3D.java-27-		// fix this code to work but it will contribute to the overall messification
org/nlogo/agent/Importer3D.java-28-		// of this code and it seems like a non-essential capability ev 1/11/07
org/nlogo/agent/Importer3D.java:29:		if( ! versionNumber.startsWith( "3-D" ) && ! versionNumber.startsWith( "3D" ) )
org/nlogo/agent/Importer3D.java-30-		{
org/nlogo/agent/Importer3D.java-31-			throw new AbortingImportException
org/nlogo/agent/Importer3D.java-43-		{
org/nlogo/agent/Importer3D.java-44-			String [] line = nextLine() ;
org/nlogo/agent/Importer3D.java:45:			if( line[ 0 ].equalsIgnoreCase( "x0" ) )
org/nlogo/agent/Importer3D.java-46-			{
org/nlogo/agent/Importer3D.java-47-				continue ;
org/nlogo/agent/Importer3D.java-48-			}
org/nlogo/agent/Importer3D.java:49:			if( line[ 0 ].equalsIgnoreCase( "shape" ) )
org/nlogo/agent/Importer3D.java-50-			{
org/nlogo/agent/Importer3D.java-51-				while( hasMoreLines( false ) )
org/nlogo/agent/Importer3D.java-52-				{
org/nlogo/agent/Importer3D.java-53-					line = nextLine() ;
org/nlogo/agent/Importer3D.java:54:					if( line [ 1 ].equalsIgnoreCase( "x1" ) )
org/nlogo/agent/Importer3D.java-55-					{
org/nlogo/agent/Importer3D.java-56-						while( hasMoreLines( false ) )
org/nlogo/agent/Importer3D.java-77-							 {
org/nlogo/agent/Importer3D.java-78-								throw new AbortingImportException
org/nlogo/agent/Importer3D.java:79:									( ImportError.ILLEGAL_CLASS_CAST_ERROR, "Coordinates in the drawing must be doubles" ) ;
org/nlogo/agent/Importer3D.java-80-							}
org/nlogo/agent/Importer3D.java-81-						}
org/nlogo/agent/Importer3D.java-100-						throw new AbortingImportException
org/nlogo/agent/Importer3D.java-101-							( ImportError.ILLEGAL_CLASS_CAST_ERROR,
org/nlogo/agent/Importer3D.java:102:							  "Coordinates in the drawing must be doubles" ) ;
org/nlogo/agent/Importer3D.java-103-					}
org/nlogo/agent/Importer3D.java-104-				}
org/nlogo/agent/Importer3D.java-120-				throw new AbortingImportException
org/nlogo/agent/Importer3D.java-121-					( ImportError.ILLEGAL_CLASS_CAST_ERROR,
org/nlogo/agent/Importer3D.java:122:					  "Coordinates in the drawing must be doubles" ) ;
org/nlogo/agent/Importer3D.java-123-			}
org/nlogo/agent/Importer3D.java-124-		}
org/nlogo/agent/Importer3D.java-175-			if( ! w.validPatchCoordinates( pxcor , pycor , pzcor ) )
org/nlogo/agent/Importer3D.java-176-			{
org/nlogo/agent/Importer3D.java:177:				String abortingError = "Illegal Patch Coordinate- pxcor, pycor and pzcor must be in range." ;
org/nlogo/agent/Importer3D.java-178-				throw new AbortingImportException
org/nlogo/agent/Importer3D.java-179-					( ImportError.ILLEGAL_PCOR_ERROR , abortingError ) ;
org/nlogo/agent/Importer3D.java-183-		catch( ClassCastException cce )
org/nlogo/agent/Importer3D.java-184-		{
org/nlogo/agent/Importer3D.java:185:			String abortingError = "Illegal Patch Coordinate- pxcor and pycor must be integers." ;
org/nlogo/agent/Importer3D.java-186-			throw new AbortingImportException
org/nlogo/agent/Importer3D.java-187-				( ImportError.ILLEGAL_CLASS_CAST_ERROR, abortingError ) ;
org/nlogo/agent/Importer3D.java-228-		catch( ClassCastException cce )
org/nlogo/agent/Importer3D.java-229-		{
org/nlogo/agent/Importer3D.java:230:			String abortingError =  "Illegal Screen dimension- max-px/y/zcor, min-px/y/zcor must be numbers." ;
org/nlogo/agent/Importer3D.java-231-			throw new AbortingImportException
org/nlogo/agent/Importer3D.java-232-				( ImportError.ILLEGAL_CLASS_CAST_ERROR, abortingError ) ;

org/nlogo/agent/ImportLexer.java-63-  private static int [] zzUnpackAction() {
org/nlogo/agent/ImportLexer.java-88-  /* error messages for the codes above */
org/nlogo/agent/ImportLexer.java-89-  private static final String ZZ_ERROR_MSG[] = {
org/nlogo/agent/ImportLexer.java:90:    "Unkown internal scanner error",
org/nlogo/agent/ImportLexer.java:91:    "Error: could not match input",
org/nlogo/agent/ImportLexer.java:92:    "Error: pushback value was too large"
org/nlogo/agent/ImportLexer.java-93-  };
org/nlogo/agent/ImportLexer.java-586-        case 6:
org/nlogo/agent/ImportLexer.java:587:          { throw new ImportLexer.LexerException( "Unclosed double quote" ) ;
org/nlogo/agent/ImportLexer.java-588-          }
org/nlogo/agent/ImportLexer.java-610-          { throw new ImportLexer.LexerException
org/nlogo/agent/ImportLexer.java:611:		( "Quoted fields must be followed by comma or end of line" ) ;
org/nlogo/agent/ImportLexer.java-612-          }
