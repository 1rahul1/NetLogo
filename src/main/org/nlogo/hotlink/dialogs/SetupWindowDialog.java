/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SetupWindowDialog.java
 *
 * Created on Apr 5, 2009, 10:01:27 PM
 */

package org.nlogo.hotlink.dialogs;

import org.nlogo.hotlink.controller.ModelReader;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JPanel;

/**
 *
 * @author mwilkerson
 */
public class SetupWindowDialog extends javax.swing.JDialog {
    boolean ok = false;

    /** Creates new form SetupWindowDialog */
    public SetupWindowDialog(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
        this.getRootPane().setDefaultButton(runButton);
        setVisible(false);
    }

    public ArrayList<InterfaceObjectPanel> getInterfaceObjects() {
        ArrayList<InterfaceObjectPanel> interfaceObjects = new ArrayList<InterfaceObjectPanel>();

        for( Component component : interfaceObjectPane.getComponents() ) {
            if( component instanceof InterfaceObjectPanel ) {
                interfaceObjects.add((InterfaceObjectPanel) component);
            }
        }

        return interfaceObjects;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        setupPane = new javax.swing.JTabbedPane();
        simplePane = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        ticks = new javax.swing.JSpinner();
        ticksLabel = new javax.swing.JLabel();
        advancedPanel = new javax.swing.JPanel();
        parameterPanel = new javax.swing.JPanel();
        parameterScrollPane = new javax.swing.JScrollPane();
        interfaceObjectPane = new javax.swing.JPanel();
        buttonPanel = new javax.swing.JPanel();
        runButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        simplePane.setLayout(new java.awt.GridBagLayout());

        ticks.setModel(ticksSpinnerModel);

        ticksLabel.setText("Run for how many ticks?");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(ticksLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(ticks, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(31, 31, 31))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(ticks, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(ticksLabel))
        );

        simplePane.add(jPanel1, new java.awt.GridBagConstraints());

        setupPane.addTab("Simple", simplePane);

        advancedPanel.setLayout(new java.awt.GridBagLayout());

        parameterPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Model Parameters"));
        parameterPanel.setLayout(new java.awt.GridBagLayout());

        interfaceObjectPane.setLayout(new javax.swing.BoxLayout(interfaceObjectPane, javax.swing.BoxLayout.LINE_AXIS));
        parameterScrollPane.setViewportView(interfaceObjectPane);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        parameterPanel.add(parameterScrollPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        advancedPanel.add(parameterPanel, gridBagConstraints);

        setupPane.addTab("Advanced", advancedPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(setupPane, gridBagConstraints);

        runButton.setText("Run Model");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout buttonPanelLayout = new org.jdesktop.layout.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(cancelButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(runButton)
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(buttonPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(cancelButton)
                .add(runButton))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        getContentPane().add(buttonPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        ok = true;
        setVisible(false);
    }//GEN-LAST:event_runButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        ok = false;
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    /*
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SetupWindowDialog dialog = new SetupWindowDialog(new javax.swing.JFrame());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel advancedPanel;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel interfaceObjectPane;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel parameterPanel;
    private javax.swing.JScrollPane parameterScrollPane;
    private javax.swing.JButton runButton;
    private javax.swing.JTabbedPane setupPane;
    private javax.swing.JPanel simplePane;
    private javax.swing.JSpinner ticks;
    private javax.swing.JLabel ticksLabel;
    // End of variables declaration//GEN-END:variables

    private javax.swing.SpinnerNumberModel ticksSpinnerModel
            = new javax.swing.SpinnerNumberModel(50, 10, 500, 1);


    public void pullModelInfo( ModelReader modelReader ) {
        interfaceObjectPane.setLayout(new javax.swing.BoxLayout(interfaceObjectPane, javax.swing.BoxLayout.Y_AXIS));
		// open the model
        
		//ModelReader modelReader = new ModelReader( fileName );
        modelReader.start();

		// add the model variables to the setup interface
		for( InterfaceObject io : modelReader.getInterfaceObjects() ) {
			if( io != null ) {
                JPanel interfaceObject = io.makeInterfaceObject();
				interfaceObjectPane.add( interfaceObject );
			}
		}

        this.setSize(500, 400);

		// and the tick info
		this.setVisible(true);
	}

	public int getTickCount() {
		return ticksSpinnerModel.getNumber().intValue();
	}

    public void purgeModelInfo() {
        interfaceObjectPane.removeAll();
    }

    @Override
    public void setVisible( boolean visible ) {
        if( visible ) {
            ok = false;
        }
        super.setVisible( visible );
    }

    public boolean runModel() {
        System.out.println(ok);
        return ok;
    }
}
